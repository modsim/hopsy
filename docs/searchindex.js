Search.setIndex({"docnames": ["examples", "firststeps", "firststeps/installation", "firststeps/introduction", "generated/hopsy.AcceptanceRateTarget", "generated/hopsy.AdaptiveMetropolisProposal", "generated/hopsy.BallWalkProposal", "generated/hopsy.CSmMALAProposal", "generated/hopsy.DikinWalkProposal", "generated/hopsy.ExpectedSquaredJumpDistanceTarget", "generated/hopsy.Gaussian", "generated/hopsy.GaussianCoordinateHitAndRunProposal", "generated/hopsy.GaussianHitAndRunProposal", "generated/hopsy.GaussianProposal", "generated/hopsy.MarkovChain", "generated/hopsy.Mixture", "generated/hopsy.Model", "generated/hopsy.Normal", "generated/hopsy.Problem", "generated/hopsy.Proposal", "generated/hopsy.PyModel", "generated/hopsy.PyProposal", "generated/hopsy.PyTuningTarget", "generated/hopsy.RandomNumberGenerator", "generated/hopsy.Rosenbrock", "generated/hopsy.ThompsonSamplingTuning", "generated/hopsy.TuningTarget", "generated/hopsy.Uniform", "generated/hopsy.UniformCoordinateHitAndRunProposal", "generated/hopsy.UniformHitAndRunProposal", "generated/hopsy.add_box_constraints", "generated/hopsy.compute_chebyshev_center", "generated/hopsy.ess", "generated/hopsy.mcse", "generated/hopsy.rhat", "generated/hopsy.round", "generated/hopsy.sample", "generated/hopsy.simplify", "generated/hopsy.tune", "generated/objname/hopsy.AdaptiveMetropolisProposal.accept_proposal", "generated/objname/hopsy.AdaptiveMetropolisProposal.deepcopy", "generated/objname/hopsy.AdaptiveMetropolisProposal.propose", "generated/objname/hopsy.BallWalkProposal.accept_proposal", "generated/objname/hopsy.BallWalkProposal.deepcopy", "generated/objname/hopsy.BallWalkProposal.propose", "generated/objname/hopsy.CSmMALAProposal.accept_proposal", "generated/objname/hopsy.CSmMALAProposal.deepcopy", "generated/objname/hopsy.CSmMALAProposal.propose", "generated/objname/hopsy.DikinWalkProposal.accept_proposal", "generated/objname/hopsy.DikinWalkProposal.deepcopy", "generated/objname/hopsy.DikinWalkProposal.propose", "generated/objname/hopsy.Gaussian.compute_expected_fisher_information", "generated/objname/hopsy.Gaussian.compute_log_likelihood_gradient", "generated/objname/hopsy.Gaussian.compute_negative_log_likelihood", "generated/objname/hopsy.Gaussian.grad_log_density", "generated/objname/hopsy.Gaussian.hessian", "generated/objname/hopsy.Gaussian.log_density", "generated/objname/hopsy.GaussianCoordinateHitAndRunProposal.accept_proposal", "generated/objname/hopsy.GaussianCoordinateHitAndRunProposal.deepcopy", "generated/objname/hopsy.GaussianCoordinateHitAndRunProposal.propose", "generated/objname/hopsy.GaussianHitAndRunProposal.accept_proposal", "generated/objname/hopsy.GaussianHitAndRunProposal.deepcopy", "generated/objname/hopsy.GaussianHitAndRunProposal.propose", "generated/objname/hopsy.GaussianProposal.accept_proposal", "generated/objname/hopsy.GaussianProposal.deepcopy", "generated/objname/hopsy.GaussianProposal.propose", "generated/objname/hopsy.Mixture.compute_expected_fisher_information", "generated/objname/hopsy.Mixture.compute_log_likelihood_gradient", "generated/objname/hopsy.Mixture.compute_negative_log_likelihood", "generated/objname/hopsy.Mixture.grad_log_density", "generated/objname/hopsy.Mixture.hessian", "generated/objname/hopsy.Mixture.log_density", "generated/objname/hopsy.Model.compute_expected_fisher_information", "generated/objname/hopsy.Model.compute_log_likelihood_gradient", "generated/objname/hopsy.Model.compute_negative_log_likelihood", "generated/objname/hopsy.Model.grad_log_density", "generated/objname/hopsy.Model.hessian", "generated/objname/hopsy.Model.log_density", "generated/objname/hopsy.Normal.__call__", "generated/objname/hopsy.Proposal.accept_proposal", "generated/objname/hopsy.Proposal.deepcopy", "generated/objname/hopsy.Proposal.propose", "generated/objname/hopsy.PyModel.compute_expected_fisher_information", "generated/objname/hopsy.PyModel.compute_log_likelihood_gradient", "generated/objname/hopsy.PyModel.compute_negative_log_likelihood", "generated/objname/hopsy.PyModel.grad_log_density", "generated/objname/hopsy.PyModel.hessian", "generated/objname/hopsy.PyModel.log_density", "generated/objname/hopsy.PyProposal.accept_proposal", "generated/objname/hopsy.PyProposal.deepcopy", "generated/objname/hopsy.PyProposal.propose", "generated/objname/hopsy.RandomNumberGenerator.__call__", "generated/objname/hopsy.Rosenbrock.compute_expected_fisher_information", "generated/objname/hopsy.Rosenbrock.compute_log_likelihood_gradient", "generated/objname/hopsy.Rosenbrock.compute_negative_log_likelihood", "generated/objname/hopsy.Rosenbrock.grad_log_density", "generated/objname/hopsy.Rosenbrock.hessian", "generated/objname/hopsy.Rosenbrock.log_density", "generated/objname/hopsy.Uniform.__call__", "generated/objname/hopsy.UniformCoordinateHitAndRunProposal.accept_proposal", "generated/objname/hopsy.UniformCoordinateHitAndRunProposal.deepcopy", "generated/objname/hopsy.UniformCoordinateHitAndRunProposal.propose", "generated/objname/hopsy.UniformHitAndRunProposal.accept_proposal", "generated/objname/hopsy.UniformHitAndRunProposal.deepcopy", "generated/objname/hopsy.UniformHitAndRunProposal.propose", "index", "notebooks/BirkhoffPolytope", "notebooks/Callbacks", "notebooks/ConstrainedSampling", "notebooks/EqualityConstraints", "notebooks/ParallelTempering", "notebooks/QuickTutorial", "notebooks/SamplingAdvice", "notebooks/TruncatedGaussianProposal", "notebooks/eval_pt_samples", "userguide", "userguide/postprocessing", "userguide/problem", "userguide/sampling", "userguide/tuning", "zreference"], "filenames": ["examples.rst", "firststeps.rst", "firststeps/installation.rst", "firststeps/introduction.rst", "generated/hopsy.AcceptanceRateTarget.rst", "generated/hopsy.AdaptiveMetropolisProposal.rst", "generated/hopsy.BallWalkProposal.rst", "generated/hopsy.CSmMALAProposal.rst", "generated/hopsy.DikinWalkProposal.rst", "generated/hopsy.ExpectedSquaredJumpDistanceTarget.rst", "generated/hopsy.Gaussian.rst", "generated/hopsy.GaussianCoordinateHitAndRunProposal.rst", "generated/hopsy.GaussianHitAndRunProposal.rst", "generated/hopsy.GaussianProposal.rst", "generated/hopsy.MarkovChain.rst", "generated/hopsy.Mixture.rst", "generated/hopsy.Model.rst", "generated/hopsy.Normal.rst", "generated/hopsy.Problem.rst", "generated/hopsy.Proposal.rst", "generated/hopsy.PyModel.rst", "generated/hopsy.PyProposal.rst", "generated/hopsy.PyTuningTarget.rst", "generated/hopsy.RandomNumberGenerator.rst", "generated/hopsy.Rosenbrock.rst", "generated/hopsy.ThompsonSamplingTuning.rst", "generated/hopsy.TuningTarget.rst", "generated/hopsy.Uniform.rst", "generated/hopsy.UniformCoordinateHitAndRunProposal.rst", "generated/hopsy.UniformHitAndRunProposal.rst", "generated/hopsy.add_box_constraints.rst", "generated/hopsy.compute_chebyshev_center.rst", "generated/hopsy.ess.rst", "generated/hopsy.mcse.rst", "generated/hopsy.rhat.rst", "generated/hopsy.round.rst", "generated/hopsy.sample.rst", "generated/hopsy.simplify.rst", "generated/hopsy.tune.rst", "generated/objname/hopsy.AdaptiveMetropolisProposal.accept_proposal.rst", "generated/objname/hopsy.AdaptiveMetropolisProposal.deepcopy.rst", "generated/objname/hopsy.AdaptiveMetropolisProposal.propose.rst", "generated/objname/hopsy.BallWalkProposal.accept_proposal.rst", "generated/objname/hopsy.BallWalkProposal.deepcopy.rst", "generated/objname/hopsy.BallWalkProposal.propose.rst", "generated/objname/hopsy.CSmMALAProposal.accept_proposal.rst", "generated/objname/hopsy.CSmMALAProposal.deepcopy.rst", "generated/objname/hopsy.CSmMALAProposal.propose.rst", "generated/objname/hopsy.DikinWalkProposal.accept_proposal.rst", "generated/objname/hopsy.DikinWalkProposal.deepcopy.rst", "generated/objname/hopsy.DikinWalkProposal.propose.rst", "generated/objname/hopsy.Gaussian.compute_expected_fisher_information.rst", "generated/objname/hopsy.Gaussian.compute_log_likelihood_gradient.rst", "generated/objname/hopsy.Gaussian.compute_negative_log_likelihood.rst", "generated/objname/hopsy.Gaussian.grad_log_density.rst", "generated/objname/hopsy.Gaussian.hessian.rst", "generated/objname/hopsy.Gaussian.log_density.rst", "generated/objname/hopsy.GaussianCoordinateHitAndRunProposal.accept_proposal.rst", "generated/objname/hopsy.GaussianCoordinateHitAndRunProposal.deepcopy.rst", "generated/objname/hopsy.GaussianCoordinateHitAndRunProposal.propose.rst", "generated/objname/hopsy.GaussianHitAndRunProposal.accept_proposal.rst", "generated/objname/hopsy.GaussianHitAndRunProposal.deepcopy.rst", "generated/objname/hopsy.GaussianHitAndRunProposal.propose.rst", "generated/objname/hopsy.GaussianProposal.accept_proposal.rst", "generated/objname/hopsy.GaussianProposal.deepcopy.rst", "generated/objname/hopsy.GaussianProposal.propose.rst", "generated/objname/hopsy.Mixture.compute_expected_fisher_information.rst", "generated/objname/hopsy.Mixture.compute_log_likelihood_gradient.rst", "generated/objname/hopsy.Mixture.compute_negative_log_likelihood.rst", "generated/objname/hopsy.Mixture.grad_log_density.rst", "generated/objname/hopsy.Mixture.hessian.rst", "generated/objname/hopsy.Mixture.log_density.rst", "generated/objname/hopsy.Model.compute_expected_fisher_information.rst", "generated/objname/hopsy.Model.compute_log_likelihood_gradient.rst", "generated/objname/hopsy.Model.compute_negative_log_likelihood.rst", "generated/objname/hopsy.Model.grad_log_density.rst", "generated/objname/hopsy.Model.hessian.rst", "generated/objname/hopsy.Model.log_density.rst", "generated/objname/hopsy.Normal.__call__.rst", "generated/objname/hopsy.Proposal.accept_proposal.rst", "generated/objname/hopsy.Proposal.deepcopy.rst", "generated/objname/hopsy.Proposal.propose.rst", "generated/objname/hopsy.PyModel.compute_expected_fisher_information.rst", "generated/objname/hopsy.PyModel.compute_log_likelihood_gradient.rst", "generated/objname/hopsy.PyModel.compute_negative_log_likelihood.rst", "generated/objname/hopsy.PyModel.grad_log_density.rst", "generated/objname/hopsy.PyModel.hessian.rst", "generated/objname/hopsy.PyModel.log_density.rst", "generated/objname/hopsy.PyProposal.accept_proposal.rst", "generated/objname/hopsy.PyProposal.deepcopy.rst", "generated/objname/hopsy.PyProposal.propose.rst", "generated/objname/hopsy.RandomNumberGenerator.__call__.rst", "generated/objname/hopsy.Rosenbrock.compute_expected_fisher_information.rst", "generated/objname/hopsy.Rosenbrock.compute_log_likelihood_gradient.rst", "generated/objname/hopsy.Rosenbrock.compute_negative_log_likelihood.rst", "generated/objname/hopsy.Rosenbrock.grad_log_density.rst", "generated/objname/hopsy.Rosenbrock.hessian.rst", "generated/objname/hopsy.Rosenbrock.log_density.rst", "generated/objname/hopsy.Uniform.__call__.rst", "generated/objname/hopsy.UniformCoordinateHitAndRunProposal.accept_proposal.rst", "generated/objname/hopsy.UniformCoordinateHitAndRunProposal.deepcopy.rst", "generated/objname/hopsy.UniformCoordinateHitAndRunProposal.propose.rst", "generated/objname/hopsy.UniformHitAndRunProposal.accept_proposal.rst", "generated/objname/hopsy.UniformHitAndRunProposal.deepcopy.rst", "generated/objname/hopsy.UniformHitAndRunProposal.propose.rst", "index.rst", "notebooks/BirkhoffPolytope.ipynb", "notebooks/Callbacks.ipynb", "notebooks/ConstrainedSampling.ipynb", "notebooks/EqualityConstraints.ipynb", "notebooks/ParallelTempering.ipynb", "notebooks/QuickTutorial.ipynb", "notebooks/SamplingAdvice.ipynb", "notebooks/TruncatedGaussianProposal.ipynb", "notebooks/eval_pt_samples.ipynb", "userguide.rst", "userguide/postprocessing.rst", "userguide/problem.rst", "userguide/sampling.rst", "userguide/tuning.rst", "zreference.rst"], "titles": ["Examples", "First Steps", "Installation", "Introduction", "hopsy.AcceptanceRateTarget", "hopsy.AdaptiveMetropolisProposal", "hopsy.BallWalkProposal", "hopsy.CSmMALAProposal", "hopsy.DikinWalkProposal", "hopsy.ExpectedSquaredJumpDistanceTarget", "hopsy.Gaussian", "hopsy.GaussianCoordinateHitAndRunProposal", "hopsy.GaussianHitAndRunProposal", "hopsy.GaussianProposal", "hopsy.MarkovChain", "hopsy.Mixture", "hopsy.Model", "hopsy.Normal", "hopsy.Problem", "hopsy.Proposal", "hopsy.PyModel", "hopsy.PyProposal", "hopsy.PyTuningTarget", "hopsy.RandomNumberGenerator", "hopsy.Rosenbrock", "hopsy.ThompsonSamplingTuning", "hopsy.TuningTarget", "hopsy.Uniform", "hopsy.UniformCoordinateHitAndRunProposal", "hopsy.UniformHitAndRunProposal", "hopsy.add_box_constraints", "hopsy.compute_chebyshev_center", "hopsy.ess", "hopsy.mcse", "hopsy.rhat", "hopsy.round", "hopsy.sample", "hopsy.simplify", "hopsy.tune", "hopsy.AdaptiveMetropolisProposal.accept_proposal", "hopsy.AdaptiveMetropolisProposal.deepcopy", "hopsy.AdaptiveMetropolisProposal.propose", "hopsy.BallWalkProposal.accept_proposal", "hopsy.BallWalkProposal.deepcopy", "hopsy.BallWalkProposal.propose", "hopsy.CSmMALAProposal.accept_proposal", "hopsy.CSmMALAProposal.deepcopy", "hopsy.CSmMALAProposal.propose", "hopsy.DikinWalkProposal.accept_proposal", "hopsy.DikinWalkProposal.deepcopy", "hopsy.DikinWalkProposal.propose", "hopsy.Gaussian.compute_expected_fisher_information", "hopsy.Gaussian.compute_log_likelihood_gradient", "hopsy.Gaussian.compute_negative_log_likelihood", "hopsy.Gaussian.grad_log_density", "hopsy.Gaussian.hessian", "hopsy.Gaussian.log_density", "hopsy.GaussianCoordinateHitAndRunProposal.accept_proposal", "hopsy.GaussianCoordinateHitAndRunProposal.deepcopy", "hopsy.GaussianCoordinateHitAndRunProposal.propose", "hopsy.GaussianHitAndRunProposal.accept_proposal", "hopsy.GaussianHitAndRunProposal.deepcopy", "hopsy.GaussianHitAndRunProposal.propose", "hopsy.GaussianProposal.accept_proposal", "hopsy.GaussianProposal.deepcopy", "hopsy.GaussianProposal.propose", "hopsy.Mixture.compute_expected_fisher_information", "hopsy.Mixture.compute_log_likelihood_gradient", "hopsy.Mixture.compute_negative_log_likelihood", "hopsy.Mixture.grad_log_density", "hopsy.Mixture.hessian", "hopsy.Mixture.log_density", "hopsy.Model.compute_expected_fisher_information", "hopsy.Model.compute_log_likelihood_gradient", "hopsy.Model.compute_negative_log_likelihood", "hopsy.Model.grad_log_density", "hopsy.Model.hessian", "hopsy.Model.log_density", "hopsy.Normal.__call__", "hopsy.Proposal.accept_proposal", "hopsy.Proposal.deepcopy", "hopsy.Proposal.propose", "hopsy.PyModel.compute_expected_fisher_information", "hopsy.PyModel.compute_log_likelihood_gradient", "hopsy.PyModel.compute_negative_log_likelihood", "hopsy.PyModel.grad_log_density", "hopsy.PyModel.hessian", "hopsy.PyModel.log_density", "hopsy.PyProposal.accept_proposal", "hopsy.PyProposal.deepcopy", "hopsy.PyProposal.propose", "hopsy.RandomNumberGenerator.__call__", "hopsy.Rosenbrock.compute_expected_fisher_information", "hopsy.Rosenbrock.compute_log_likelihood_gradient", "hopsy.Rosenbrock.compute_negative_log_likelihood", "hopsy.Rosenbrock.grad_log_density", "hopsy.Rosenbrock.hessian", "hopsy.Rosenbrock.log_density", "hopsy.Uniform.__call__", "hopsy.UniformCoordinateHitAndRunProposal.accept_proposal", "hopsy.UniformCoordinateHitAndRunProposal.deepcopy", "hopsy.UniformCoordinateHitAndRunProposal.propose", "hopsy.UniformHitAndRunProposal.accept_proposal", "hopsy.UniformHitAndRunProposal.deepcopy", "hopsy.UniformHitAndRunProposal.propose", "hopsy - Highly Optimized Polytope Sampling in Python", "Birkhoff polytope", "Callbacks", "Constrained Sampling", "First sample without equality constraints", "Parallel Tempering", "A Quick Tutorial", "A Guide to Sampling Your First Model With hopsy", "TMVN Sampling", "&lt;no title&gt;", "User Guide", "Post-Processing", "Problem Description", "Markov Chain Monte Carlo Sampling", "Tuning", "Reference"], "terms": {"A": [0, 1, 24, 30, 31, 35, 105, 106, 107, 108, 109, 110, 113, 117], "guid": [0, 1, 105], "sampl": [0, 1, 3, 14, 32, 33, 34, 37, 106, 107, 110, 111, 114, 115, 117], "your": [0, 1, 2, 54, 55, 69, 70, 72, 73, 75, 76, 85, 86, 95, 96, 105, 110], "first": [0, 36, 37, 105, 115], "model": [0, 1, 10, 15, 20, 51, 52, 53, 54, 55, 56, 66, 67, 68, 69, 70, 71, 82, 83, 84, 85, 86, 87, 95, 96, 97, 105, 106, 107, 110, 111, 113, 118], "With": [0, 1, 105, 110], "hopsi": [0, 1, 2, 3, 106, 107, 108, 109, 110, 111, 113, 115, 117, 118], "constrain": [0, 3, 30, 105, 109], "birkhoff": [0, 105], "polytop": [0, 30, 31, 35, 37, 111, 112, 117, 118], "parallel": [0, 14, 32, 33, 34, 36, 105, 111, 112], "temper": [0, 105], "The": [1, 10, 14, 15, 20, 31, 32, 34, 35, 36, 51, 52, 53, 54, 55, 56, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 82, 83, 84, 85, 86, 87, 92, 93, 94, 95, 96, 97, 106, 108, 110, 111, 112, 117, 118], "contain": [1, 30, 31, 35, 36, 115, 117], "quick": [1, 105], "instal": [1, 105], "an": [1, 10, 105, 110], "introduct": [1, 105], "problem": [1, 14, 30, 31, 35, 37, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 118], "solv": [1, 118], "tutori": [1, 105], "can": [2, 10, 14, 30, 36, 54, 55, 69, 70, 72, 73, 75, 76, 85, 86, 95, 96, 105, 107, 108, 110, 112, 117], "easili": [2, 118], "from": [2, 3, 10, 16, 34, 36, 106, 107, 110, 112, 114], "python": [2, 15, 20, 110, 117, 118], "packag": [2, 107], "index": 2, "us": [2, 3, 30, 32, 33, 34, 35, 36, 51, 52, 53, 54, 55, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 82, 83, 84, 85, 86, 92, 93, 94, 95, 96, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 118], "pip": [2, 105], "altern": 2, "you": [2, 3, 20, 30, 54, 55, 69, 70, 72, 73, 75, 76, 85, 86, 95, 96, 105, 112, 117], "download": 2, "sourc": [2, 105], "code": [2, 105, 107, 110, 112], "our": [2, 105], "github": [2, 32, 33, 34, 105], "repositori": 2, "git": 2, "clone": 2, "http": [2, 24, 32, 33, 34, 107, 117], "com": [2, 107], "modsim": 2, "recurs": 2, "compil": 2, "either": 2, "binari": 2, "wheel": 2, "dep": 2, "standard": [2, 10, 33, 111], "cmake": 2, "routin": 2, "mkdir": 2, "build": [2, 110], "releas": 2, "cd": 2, "make": [2, 115, 118], "note": [2, 32, 34, 51, 52, 53, 112], "howev": [2, 10, 107, 117], "produc": [2, 36, 117], "actual": [2, 36], "dist": 2, "x": [2, 3, 15, 51, 52, 53, 54, 55, 56, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 82, 83, 84, 85, 86, 87, 92, 93, 94, 95, 96, 97, 105, 106, 107, 110, 111, 113, 117, 118], "y": [2, 118], "z": [2, 34], "tag": 2, "whl": 2, "where": [2, 3, 10, 32, 34, 105], "version": 2, "depend": [2, 110, 117], "verison": 2, "environ": [2, 107], "For": [3, 32, 33, 34, 36, 54, 55, 69, 70, 72, 73, 75, 76, 85, 86, 95, 96, 105, 107, 110, 112, 117, 118], "high": [3, 107, 110], "flexibl": [3, 105], "when": [3, 34, 37, 105, 107, 111, 112], "hop": [3, 20, 105, 110, 117, 118], "we": [3, 10, 30, 111, 112, 117, 118], "made": 3, "algorithm": [3, 105, 108, 112, 117, 118], "well": [3, 110, 112], "defin": [3, 10, 31, 35, 36, 37, 110, 112], "likelihood": [3, 52, 53, 54, 67, 68, 69, 73, 85, 93, 94, 95, 112, 117, 118], "consid": [3, 10, 108], "metropoli": [3, 110, 118], "criterion": [3, 32], "alpha": [3, 108, 110, 112, 113, 114], "theta": 3, "min": [3, 36], "big": [3, 10], "1": [3, 10, 15, 30, 31, 32, 33, 34, 36, 51, 52, 53, 54, 55, 56, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 82, 83, 84, 85, 86, 87, 92, 93, 94, 95, 96, 97, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 118], "frac": [3, 32, 34, 108, 118], "pi": [3, 110], "q": 3, "which": [3, 10, 30, 31, 32, 34, 35, 36, 37, 105, 107, 108, 112, 117, 118], "comput": [3, 31, 32, 33, 34, 51, 52, 53, 54, 55, 66, 67, 68, 69, 70, 72, 73, 75, 76, 85, 86, 95, 96, 107, 110, 112, 117, 118], "accept": [3, 10, 36, 107, 108, 111, 112], "probabl": [3, 32, 52, 53, 67, 68, 108, 110], "move": [3, 108], "gener": [3, 32, 33, 34, 36, 66, 106, 107, 108, 110, 111, 112, 118], "i": [3, 10, 15, 30, 31, 32, 34, 36, 37, 54, 55, 56, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 85, 86, 87, 95, 96, 97, 105, 106, 107, 108, 110, 111, 112, 113, 114, 117, 118], "distribut": [3, 34, 107, 108, 110, 111, 117], "target": [3, 34, 105, 107, 110, 112, 117], "wish": 3, "draw": [3, 32, 36], "In": [3, 32, 33, 34, 107, 108, 111, 112, 117], "assum": [3, 15, 108, 117], "exp": [3, 10, 110, 113], "f": [3, 10, 15, 67, 68, 106, 107, 110], "neg": [3, 53, 68, 94, 112, 117], "log": [3, 52, 53, 54, 67, 68, 69, 73, 85, 93, 94, 95, 110, 112, 117], "have": [3, 30, 34, 36, 51, 52, 53, 107, 108, 110, 111, 112, 117], "provid": [3, 105, 106, 117], "want": [3, 112], "self": [3, 10, 15, 51, 52, 53, 54, 56, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 82, 83, 84, 85, 87, 92, 93, 94, 95, 97, 107, 110, 112], "To": [3, 34], "read": 3, "more": [3, 16, 34, 105, 108, 112, 115, 117], "about": [3, 36, 111, 117], "detail": [3, 16, 115, 117], "how": [3, 16], "custom": [3, 16, 54, 55, 56, 69, 70, 71, 72, 73, 74, 75, 76, 77, 85, 86, 87, 95, 96, 97, 105, 112, 117, 118], "pleas": [3, 105, 107, 117], "refer": [3, 24, 32, 33, 34, 37, 105, 110], "thi": [3, 10, 16, 30, 34, 35, 36, 51, 56, 66, 71, 74, 77, 87, 97, 105, 107, 108, 110, 111, 112, 117, 118], "page": 3, "although": 3, "ship": [3, 117], "numer": 3, "optim": [3, 112, 117, 118], "work": [3, 16, 20, 105, 112, 118], "linearili": [3, 105], "space": [3, 105, 106, 110, 117], "written": 3, "c": [3, 105, 114, 117, 118], "also": [3, 10, 30, 35, 36, 105, 110, 112, 117, 118], "possibl": [3, 110, 117, 118], "class": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 106, 110, 112, 113, 117, 118], "attribut": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 20, 21, 23, 24, 25, 27, 28, 29, 36], "method": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 56, 66, 71, 74, 77, 87, 97, 112, 117], "mean": [10, 30, 32, 33, 107, 108, 110, 111, 112, 113, 117], "0": [10, 32, 33, 34, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118], "covari": [10, 51, 110], "inact": 10, "invari": [10, 117], "some": [10, 54, 55, 69, 70, 72, 73, 75, 76, 85, 86, 95, 96, 108, 111, 117, 118], "dimens": [10, 24, 30, 37, 51, 52, 53, 107, 108, 117], "input": [10, 51, 52, 53, 54, 55, 56, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 82, 83, 84, 85, 86, 87, 92, 93, 94, 95, 96, 97, 117], "vector": [10, 30, 31, 35, 51, 52, 53, 54, 55, 56, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 82, 83, 84, 85, 86, 87, 92, 93, 94, 95, 96, 97, 112, 117], "As": [10, 118], "exampl": [10, 105, 107, 108, 111, 112], "one": [10, 34, 112], "dimension": [10, 24, 54, 55, 69, 70, 72, 73, 75, 76, 85, 86, 95, 96, 106, 107, 111], "squar": [10, 106], "exponenti": 10, "function": [10, 16, 20, 24, 30, 32, 35, 52, 53, 67, 68, 105, 110, 112, 117, 118], "two": [10, 32, 34, 36, 107, 110], "variabl": 10, "x_1": [10, 111], "x_2": 10, "2": [10, 32, 106, 107, 108, 110, 111, 112, 113], "under": 10, "second": [10, 36, 109], "sai": 10, "compon": [10, 15, 67, 68, 117], "degener": 10, "multivari": [10, 51, 52, 53, 117], "regular": 10, "n": [10, 15, 30, 31, 32, 33, 34, 51, 52, 53, 54, 55, 56, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 82, 83, 84, 85, 86, 87, 95, 96, 97, 106, 108, 110, 111], "k": [10, 32, 51, 52, 53, 108, 113], "ha": [10, 34, 36, 51, 52, 53, 107, 108, 110, 112, 117, 118], "its": [10, 15, 108, 112], "ar": [10, 15, 16, 30, 32, 33, 34, 36, 106, 107, 110, 112, 117, 118], "technic": [10, 110], "realiz": 10, "remov": [10, 30, 37, 107], "row": [10, 30, 54, 55, 69, 70, 72, 73, 75, 76, 85, 86, 95, 96, 106], "column": [10, 106], "matrix": [10, 30, 31, 35, 51, 55, 70, 72, 76, 86, 92, 96, 117], "correspond": [10, 118], "basic": [10, 32], "construct": [10, 14, 110], "unlik": [10, 110], "still": [10, 16, 32, 51, 52, 53, 112], "onli": [10, 32, 33, 34, 105, 106, 107, 108, 109, 112, 113], "pass": [10, 14, 20, 31, 32, 33, 34, 36, 107, 110, 117], "empti": 10, "list": [10, 14, 15, 36, 107], "common": [10, 111, 117], "paramet": [10, 15, 30, 31, 32, 33, 34, 35, 36, 37, 51, 52, 53, 54, 55, 66, 67, 68, 69, 70, 72, 73, 75, 76, 82, 83, 84, 85, 86, 92, 93, 94, 95, 96, 106, 107, 108, 109, 110, 112, 113], "numpi": [10, 30, 31, 32, 33, 34, 36, 51, 52, 53, 54, 55, 56, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 82, 83, 84, 85, 86, 87, 92, 93, 94, 95, 96, 97, 106, 107, 108, 109, 110, 112, 113, 118], "ndarrai": [10, 30, 31, 32, 33, 34, 36, 51, 52, 53, 54, 55, 56, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 82, 83, 84, 85, 86, 87, 92, 93, 94, 95, 96, 97, 118], "int": [10, 30, 32, 33, 34, 36, 110], "so": [10, 15, 16, 32, 33, 34], "entri": 10, "should": [10, 16, 30, 31, 34, 35, 37, 56, 71, 74, 77, 87, 97, 112, 117, 118], "between": [10, 34], "propos": [14, 16, 36, 54, 55, 69, 70, 72, 73, 75, 76, 85, 86, 95, 96, 105, 107, 108, 110, 111, 112, 113], "gaussianhitandrun": 14, "starting_point": [14, 105, 106, 107, 108, 109, 110, 111, 112, 113], "none": [14, 15, 32, 33, 34, 36, 66, 107, 113, 118], "given": [14, 15, 20, 110, 111], "object": [14, 15, 20, 105, 112, 117], "markov": [14, 33, 36, 105, 108, 110, 111, 112, 115], "chain": [14, 32, 33, 34, 36, 105, 107, 108, 110, 111, 112, 113, 115], "keep": 14, "track": 14, "intern": [14, 118], "state": [14, 36, 108, 110, 111, 117, 118], "select": [14, 32, 33, 34, 107], "mechan": [14, 16], "see": [14, 16, 32, 34, 108], "argument": 14, "sever": 14, "them": [14, 112], "weight": [15, 67, 68, 117], "sum": [15, 67, 68, 106], "unnorm": [15, 52, 53, 54, 67, 68, 69, 73, 75, 85, 93, 94, 95], "densiti": [15, 52, 53, 67, 68, 108, 110, 112, 113, 114], "sum_": [15, 32, 67, 68], "w_i": [15, 67, 68], "f_i": [15, 67, 68], "mai": [15, 30, 117], "arbitrari": [15, 20, 106, 117], "implement": [15, 16, 20, 32, 56, 66, 71, 74, 77, 87, 97, 105, 107, 110, 112, 117, 118], "requir": [15, 16, 20, 37, 56, 71, 74, 77, 87, 97, 107, 118], "pymodel": [15, 117], "": [15, 30, 32, 35, 36, 105, 110, 117, 118], "float": [15, 30, 32, 33, 53, 56, 68, 71, 74, 77, 84, 87, 94, 97, 118], "If": [15, 30, 34, 36, 54, 55, 69, 70, 72, 73, 75, 76, 85, 86, 95, 96, 105, 112], "thei": [15, 16, 112], "all": [15, 16, 30, 34, 36, 108, 110, 112, 118], "base": [16, 105, 110, 112], "while": 16, "inherit": 16, "allow": [20, 105, 110], "interfac": [20, 112, 117], "correctli": 20, "compute_negative_log_likelihood": [20, 110, 112, 113, 117], "compute_log_likelihood_gradi": [20, 54, 69, 85, 95, 117], "compute_expected_fisher_inform": [20, 55, 70, 86, 96, 117], "multi": [24, 110], "2n": [24, 30, 92, 93, 94], "doi": 24, "org": [24, 32, 34, 117], "10": [24, 105, 107, 108, 109, 110, 111, 112, 113], "1162": 24, "evco": 24, "2009": 24, "17": 24, "3": [24, 106, 107, 108, 109, 111, 112, 113], "437": 24, "lower_bound": 30, "_supportsarrai": 30, "dtype": 30, "_nestedsequ": 30, "bool": [30, 32, 36], "complex": 30, "str": [30, 32, 33, 34, 36, 110, 113, 114, 118], "byte": 30, "upper_bound": 30, "simplifi": 30, "true": [30, 107, 110, 112, 113, 114], "add": 30, "box": [30, 108], "constraint": [30, 35, 37, 112], "extend": 30, "b": [30, 31, 35, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117], "return": [30, 31, 32, 33, 34, 35, 36, 37, 51, 52, 53, 54, 55, 56, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 82, 83, 84, 85, 86, 87, 92, 93, 94, 95, 96, 97, 107, 110, 112, 117, 118], "m": [30, 32, 53, 106, 111], "ad": 30, "naiv": 30, "do": [30, 111, 118], "neither": 30, "check": [30, 112], "whether": 30, "alreadi": [30, 107, 117], "somehow": 30, "bound": 30, "nor": 30, "veri": [30, 108, 110, 111], "same": [30, 108, 110], "exist": [30, 66], "redund": [30, 35, 37], "effici": [30, 37, 105, 110, 112], "polyround": [30, 35, 37, 117], "toolbox": [30, 117], "round": [30, 37, 106, 112, 117], "both": 30, "everi": [30, 32, 33, 34, 36, 112], "lb": 30, "leq": [30, 31, 35, 105, 111, 117], "x_i": 30, "ub": 30, "appropri": 30, "length": 30, "lb_i": 30, "ub_i": 30, "ax": [30, 31, 35, 105, 110, 111, 112, 117], "float64": [30, 31, 55, 56, 70, 71, 72, 74, 76, 77, 82, 83, 84, 86, 87, 92, 93, 94, 96, 97], "specifi": 30, "lower": 30, "upper": 30, "type": [30, 31, 32, 33, 34, 35, 36, 37, 51, 52, 53, 54, 55, 56, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 82, 83, 84, 85, 86, 87, 92, 93, 94, 95, 96, 97, 112, 117], "chebyshev": [31, 112], "center": [31, 111], "midpoint": 31, "non": [31, 106, 108, 109, 112, 113, 117], "uniqu": 31, "largest": 31, "inscrib": 31, "ball": 31, "data": [32, 33, 34, 107], "seri": [32, 33, 34, 111], "bulk": 32, "rel": [32, 34], "fals": [32, 36, 107], "prob": [32, 33], "dask_kwarg": [32, 33, 34], "calcul": [32, 33, 34], "estim": [32, 34], "effect": [32, 34, 37, 108, 110, 112], "size": [32, 36, 106, 112], "mcmc": [32, 33, 34, 36, 107, 110, 111, 112], "shape": [32, 33, 34, 36, 106, 112, 113, 118], "n_chain": [32, 33, 34, 36, 106, 107, 111], "n_draw": [32, 33, 34, 36], "dim": [32, 33, 34, 36, 108, 113], "rang": [32, 33, 34, 106, 107, 108, 110, 111, 112, 114], "default": [32, 33, 34, 107], "valu": [32, 33, 34, 36, 55, 56, 70, 71, 72, 74, 76, 77, 82, 83, 84, 86, 87, 96, 97, 112], "onc": [32, 33, 34, 110], "whole": [32, 33, 34], "valid": [32, 33, 34], "tail": 32, "option": [32, 33, 36, 118], "quantil": [32, 33], "old": 32, "sd": [32, 33], "median": [32, 33], "mad": 32, "absolut": 32, "devianc": 32, "z_scale": [32, 34], "fold": [32, 34], "ident": [32, 34, 108], "local": [32, 107], "ress": 32, "tupl": [32, 36, 107], "n_proc": [32, 33, 34, 36, 106, 107], "combin": [32, 33, 34, 105, 117], "subprocess": [32, 33, 34, 110], "dict": [32, 33, 34, 36, 107], "dask": [32, 33, 34], "relat": [32, 33, 34], "kwarg": [32, 33, 34], "wrap_xarray_ufunc": [32, 33, 34], "hat": [32, 34, 111], "_": [32, 107, 108, 109, 110, 112, 113], "eff": 32, "n_": [32, 111], "mathit": 32, "diagnost": [32, 34, 105], "mn": 32, "tau": 32, "t": [32, 35, 107, 112, 113], "p": [32, 105, 117, 118], "number": [32, 36, 54, 55, 69, 70, 72, 73, 75, 76, 85, 86, 95, 96, 110, 111, 112, 117], "rho": 32, "_t": 32, "_autocorrel": 32, "lag": 32, "last": [32, 107], "integ": 32, "2k": 32, "posit": 32, "current": [32, 118], "similar": 32, "stan": 32, "geyer": 32, "initi": [32, 34], "monoton": 32, "sequenc": [32, 110], "1992": [32, 34], "2011": 32, "vehtari": [32, 34], "et": [32, 34], "al": [32, 34], "2019": [32, 34], "arxiv": [32, 34], "ab": [32, 34], "1903": [32, 34], "08008": [32, 34], "arviz": [32, 33, 34, 106, 107], "dev": [32, 33, 34], "io": [32, 33, 34], "api": [32, 33, 34, 105, 117], "html": [32, 33, 34], "mc": [32, 106, 108, 109, 110, 112, 113], "doc": [32, 107], "2_18": 32, "manual": 32, "section": [32, 105, 118], "15": [32, 107, 110], "4": [32, 51, 52, 53, 54, 55, 66, 67, 68, 69, 70, 72, 73, 74, 82, 83, 84, 85, 86, 92, 93, 94, 95, 96, 106, 107, 108, 110, 111, 112, 113], "gelman": [32, 34], "bda": [32, 34], "2014": [32, 34], "formula": 32, "11": [32, 106, 107, 108, 109, 110, 112, 113], "8": [32, 107, 110, 112, 113, 114], "error": 33, "statist": [33, 34, 105, 110, 111], "inform": [33, 36, 51, 55, 66, 70, 72, 76, 86, 92, 96, 105], "msce": 33, "dataset": [33, 34], "rank": [34, 110], "normal": 34, "splitr": 34, "set": [34, 37, 106, 108, 109, 110, 111, 112, 113, 117, 118], "trace": 34, "r": [34, 108, 110, 111], "test": [34, 105, 107, 117, 118], "lack": 34, "converg": [34, 54, 55, 69, 70, 72, 73, 75, 76, 85, 86, 95, 96, 106, 110, 111, 112], "compar": [34, 112, 113, 115], "varianc": 34, "multipl": [34, 107, 110], "within": [34, 110], "each": [34, 36, 55, 70, 72, 76, 86, 96, 110], "been": [34, 112], "achiev": [34, 36], "most": [34, 107, 111, 112, 117], "detect": 34, "evid": 34, "nonconverg": 34, "start": [34, 105, 107, 108, 110, 111, 112], "dispers": 34, "recommend": [34, 117], "split": 34, "potenti": [34, 111], "scale": [34, 111], "reduct": [34, 111], "factor": [34, 111], "v": 34, "w": 34, "posterior": [34, 107, 110], "pool": [34, 36, 110], "uniti": 34, "greater": 34, "than": [34, 37], "indic": [34, 111], "yet": 34, "over": [34, 112], "scipi": [34, 106], "stat": 34, "rankdata": 34, "transform": [34, 35], "follow": [34, 107, 110, 111], "brook": 34, "1998": 34, "rubin": 34, "inequ": [35, 37, 111, 112, 117], "strip": 35, "unround": [35, 117], "shift": [35, 117], "store": [35, 107, 118], "uniformproblem": 35, "Its": [35, 105], "left": 35, "hand": [35, 118], "side": 35, "oper": 35, "right": [35, 107], "math": 35, "markov_chain": [36, 110, 112], "rng": [36, 105, 106, 107, 108, 109, 110, 111, 112, 113], "n_sampl": [36, 105, 106, 107, 109, 110, 111, 112], "thin": [36, 105, 106, 107, 109, 111, 112], "respect": 36, "random": [36, 105, 107, 111], "thu": [36, 108, 117, 118], "len": [36, 108, 113], "match": 36, "markovchain": [36, 105, 106, 107, 108, 109, 110, 111, 112, 113], "simul": [36, 105, 112, 117], "randomnumbergener": [36, 105, 106, 107, 108, 109, 110, 111, 112, 113], "singl": [36, 110], "wa": [36, 117], "must": [36, 110], "discard": 36, "inbetween": 36, "save": [36, 107], "increas": [36, 108], "n_thread": [36, 112], "deprec": [36, 51, 52, 53, 54, 55, 66, 67, 68, 69, 70, 72, 73, 74, 82, 83, 84, 85, 86, 92, 93, 94, 95, 96, 118], "process": [36, 105, 110, 115], "multiprocess": [36, 110], "worker": 36, "record_meta": 36, "string": 36, "acceptance_r": [36, 112], "record": 36, "here": [36, 110, 112], "e": [36, 110, 118], "g": [36, 110, 118], "state_negative_log_likelihood": 36, "in_memori": [36, 107], "flag": 36, "enabl": [36, 110], "disabl": 36, "memori": [36, 107], "metadata": [36, 107], "callback": 36, "deriv": [36, 106], "observ": 36, "dure": [36, 107], "run": [36, 107, 108, 110, 112], "write": [36, 107], "obtain": 36, "onlin": 36, "perman": 36, "storag": [36, 107], "analysi": [36, 105], "hold": 36, "meta": [36, 106, 107], "without": 36, "rate": [36, 107, 108, 111, 112], "found": [36, 105, 110], "becaus": [36, 37, 110, 112], "typo": 36, "Will": 36, "refunct": 37, "equal": [37, 54, 55, 69, 70, 72, 73, 75, 76, 85, 86, 95, 96, 106, 110], "case": [37, 107, 108, 110, 111, 112, 118], "width": 37, "less": [37, 110], "thresh": 37, "lp": 37, "singleton": 37, "simplif": 37, "typic": 37, "step": [37, 105, 112, 113, 115], "befor": [37, 110], "It": [37, 105, 106, 108], "call": [37, 107, 110, 112, 118], "automat": 37, "hessian": [51, 66, 72, 82, 92], "instead": [51, 52, 53, 54, 55, 66, 67, 68, 69, 70, 72, 73, 74, 82, 83, 84, 85, 86, 92, 93, 94, 95, 96, 118], "expect": [51, 55, 66, 70, 72, 76, 86, 92, 96, 108, 112], "fisher": [51, 55, 66, 70, 72, 76, 86, 92, 96], "turn": [51, 107], "out": 51, "just": [51, 54, 55, 69, 70, 72, 73, 75, 76, 85, 86, 95, 96], "reduc": 51, "narrai": 51, "grad_log_dens": [52, 67, 73, 83, 93], "gradient": [52, 54, 55, 67, 69, 70, 72, 73, 75, 76, 85, 86, 93, 95, 96], "logarithm": [52, 53, 67, 68, 118], "log_dens": [53, 68, 74, 75, 84, 94], "help": [54, 55, 69, 70, 72, 73, 75, 76, 85, 86, 95, 96, 105], "faster": [54, 55, 69, 70, 72, 73, 75, 76, 85, 86, 95, 96, 110], "long": [54, 55, 69, 70, 72, 73, 75, 76, 85, 86, 95, 96, 108, 112], "too": [54, 55, 69, 70, 72, 73, 75, 76, 85, 86, 95, 96, 112], "slow": [54, 55, 69, 70, 72, 73, 75, 76, 85, 86, 95, 96], "fast": [54, 55, 69, 70, 72, 73, 75, 76, 85, 86, 95, 96, 107], "enough": [54, 55, 69, 70, 72, 73, 75, 76, 85, 86, 95, 96], "zero": [54, 55, 69, 70, 72, 73, 75, 76, 85, 86, 95, 96, 107, 108, 109, 113], "correct": [54, 55, 69, 70, 72, 73, 75, 76, 85, 86, 95, 96, 112, 117], "col": [55, 70, 72, 76, 86, 96], "param": [55, 56, 70, 71, 72, 74, 76, 77, 86, 87, 96, 97, 107], "rtype": [55, 56, 70, 71, 72, 74, 76, 77, 86, 87, 96, 97], "ani": [56, 71, 74, 77, 87, 97, 112, 118], "close": [66, 107, 108, 112], "form": [66, 105, 117, 118], "solut": 66, "nabla": 67, "compute_negative_log_likelihod": [74, 84], "scientif": 105, "tool": 105, "mont": [105, 115], "carlo": [105, 115], "convex": 105, "mathcal": [105, 117], "often": [105, 117], "aris": [105, 106], "bayesian": 105, "metabol": 105, "flux": 105, "built": 105, "pybind11": 105, "power": 105, "goal": 105, "backend": [105, 107], "languag": 105, "whilst": 105, "maintain": 105, "comprehens": 105, "interoper": 105, "other": [105, 110, 112, 113], "librari": 105, "offer": [105, 107], "magnitud": 105, "special": [105, 108, 112], "sampler": [105, 108, 113, 118], "similarili": [105, 118], "besid": 105, "few": [105, 111], "user": 105, "includ": [105, 111], "13": [105, 107], "mathrm": 105, "bioreactor": 105, "kinet": 105, "physic": 105, "sir": 105, "import": [105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "task": 105, "especi": [105, 110], "expens": 105, "evalu": 105, "tune": [105, 112, 115], "hyperparamet": [105, 111], "thompson": 105, "approach": [105, 110], "perform": [105, 112, 118], "differ": [105, 110, 112], "chapter": 105, "encount": 105, "bug": 105, "feel": [105, 112], "free": [105, 112], "open": 105, "issu": 105, "find": 105, "question": 105, "feedback": 105, "regard": 105, "visit": 105, "u": [105, 112], "gitter": 105, "pip3": 105, "matplotlib": [105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "pyplot": [105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "plt": [105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "5": [105, 108, 110, 112, 113, 114], "seed": [105, 106, 107, 108, 110, 111, 112, 113], "42": [105, 106, 107, 108, 109, 110, 111, 112, 113], "accrat": [105, 108, 111, 113], "1000": [105, 108, 111, 113], "content": 105, "descript": [105, 115], "post": [105, 115], "popular": [106, 117], "structur": 106, "mathemat": 106, "matric": 106, "time": [106, 107, 108, 110, 111], "whose": 106, "conveni": [106, 107, 112], "np": [106, 107, 108, 109, 110, 112, 113], "uniform": 106, "bp": 106, "birkhoffpolytop": 106, "compute_chebyshev_cent": [106, 112], "usernam": [106, 108, 109, 112, 113], "academ": [106, 108, 109, 112, 113], "licens": [106, 108, 109, 112, 113], "commerci": [106, 108, 109, 112, 113], "expir": [106, 108, 109, 112, 113], "2023": [106, 108, 109, 112, 113], "30": [106, 108, 109, 112, 113], "verifi": 106, "5000": [106, 113], "uniformcoordinatehitandrunpropos": [106, 113], "stream": [106, 107, 111], "6": [106, 107, 110, 112, 113, 114], "rhat": [106, 107, 110, 111, 112], "ess": [106, 107, 110, 112], "arrai": [106, 107, 108, 109, 110, 112, 113], "00034304": 106, "00039326": 106, "00091834": 106, "00156559": 106, "5256": 106, "24117096": 106, "5350": 106, "23984171": 106, "4018": 106, "57055206": 106, "4524": 106, "92053992": 106, "convert": 106, "back": 106, "full": [106, 117], "plot": [106, 107, 108, 110, 111, 113], "samples_ful": 106, "convert_to_full_spac": 106, "reshap": [106, 110, 112], "plot_pair": [106, 107], "convert_to_inference_data": 106, "size_squar": 106, "show": [106, 107, 108, 109, 110, 111, 112, 114], "By": [107, 110], "small": 107, "usual": [107, 111], "fine": 107, "larg": [107, 110], "lot": 107, "becom": 107, "therefor": 107, "off": 107, "mcbackend": 107, "like": [107, 110], "databas": 107, "clickhouse_driv": 107, "hagelkorn": 107, "perfect": 107, "fly": 107, "directli": 107, "order": [107, 112, 117], "server": 107, "quickli": [107, 108], "purpos": 107, "command": [107, 110], "curl": 107, "sh": 107, "block": 107, "port": 107, "8123": 107, "9000": 107, "caution": 107, "wai": [107, 110], "product": 107, "robust": 107, "establish": 107, "connect": 107, "creat": [107, 109, 111, 112], "Then": 107, "36": [107, 109], "db_host": 107, "localhost": 107, "db_pass": 107, "db_port": 107, "db_kwarg": 107, "host": 107, "password": 107, "client_main": 107, "client": 107, "db_name": 107, "testing_": 107, "execut": 107, "client_sampl": 107, "fail": 107, "traceback": 107, "recent": 107, "file": [107, 110], "34": [107, 109], "home": 107, "jadebeck": 107, "lib": 107, "python3": 107, "site": 107, "py": 107, "line": [107, 110], "395": 107, "_init_connect": 107, "325": 107, "socket": 107, "_create_socket": 107, "297": 107, "rais": 107, "err": 107, "288": 107, "sock": 107, "sa": 107, "connectionrefusederror": 107, "errno": 107, "111": 107, "refus": 107, "networkerror": 107, "tmp": 107, "ipykernel_19928": 107, "577530699": 107, "lt": [107, 110, 112, 113], "modul": [107, 110], "gt": [107, 110, 112, 113], "7": [107, 109, 110, 111, 112, 114], "9": [107, 110, 112], "queri": 107, "with_column_typ": 107, "external_t": 107, "query_id": 107, "types_check": 107, "columnar": 107, "359": 107, "start_tim": 107, "360": 107, "361": 107, "disconnect_on_error": 107, "362": 107, "insert": 107, "363": 107, "now": [107, 111], "usr": 107, "contextlib": 107, "__enter__": 107, "133": 107, "del": 107, "arg": 107, "kwd": 107, "func": 107, "134": 107, "try": [107, 112], "135": 107, "next": [107, 112], "gen": 107, "136": 107, "except": 107, "stopiter": 107, "137": 107, "runtimeerror": 107, "didn": 107, "39": [107, 109, 110, 113], "yield": 107, "303": 107, "def": [107, 110, 112], "304": 107, "305": 107, "establish_connect": 107, "306": 107, "307": 107, "290": 107, "get_connect": 107, "291": 107, "make_query_set": 107, "292": 107, "force_connect": 107, "293": 107, "last_queri": 107, "queryinfo": 107, "294": 107, "252": 107, "253": 107, "254": 107, "255": 107, "256": 107, "elif": 107, "ping": 107, "414": 107, "415": 107, "416": 107, "417": 107, "418": 107, "reset_st": 107, "210": 107, "clickhousebackend": 107, "mcbackendcallback": 107, "id": 107, "tey6cf": 107, "simpl": [107, 108, 112, 117], "gaussian": [107, 108, 110, 111, 112, 113, 117], "notic": [107, 110], "500": 107, "gaussianpropos": [107, 108, 111, 113], "stepsiz": [107, 110, 111, 112, 118], "result": [107, 110], "due": 107, "assert": [107, 112], "retriev": 107, "12": [107, 110, 111, 112], "chain_idx": [107, 110], "get_run": 107, "run_id": 107, "get_chain": 107, "chain_metadata": 107, "j": [107, 110], "get_draw": 107, "variable_": 107, "append": [107, 114], "sample_stat": 107, "00624689": 107, "00092455": 107, "00055598": 107, "860": 107, "58608515": 107, "803": 107, "39300557": 107, "880": 107, "30937015": 107, "14": [107, 108, 109, 111], "dict_to_dataset": 107, "flatten": [107, 110, 113], "kind": 107, "kde": 107, "margin": 107, "disconnect": 107, "drop": 107, "illustr": [108, 110], "1e5": 108, "d": [108, 118], "origin": [108, 111], "classic": 108, "isotrop": 108, "approxim": 108, "locat": 108, "outsid": [108, 118], "region": 108, "li": 108, "insid": 108, "geometr": 108, "easi": [108, 110], "vanish": 108, "henc": 108, "leav": 108, "stuck": 108, "precis": 108, "remain": 108, "contrast": 108, "hit": [108, 112], "never": 108, "seen": 108, "monitor": 108, "lambda": [108, 110, 113], "add_box_constraint": [108, 112, 113], "1e3": [108, 112], "gaussianhitandrunpropos": [108, 113], "enumer": [108, 113], "001": [108, 113], "els": [108, 113], "analyt": 108, "figur": [108, 109, 112, 113, 114], "dpi": [108, 112], "300": [108, 112], "label": [108, 110, 111, 112, 113, 114], "linestyl": [108, 111], "dash": [108, 111], "color": [108, 111], "grai": [108, 111], "xlabel": [108, 112], "ylabel": [108, 112], "legend": [108, 110, 111, 112, 113, 114], "3d": 109, "35": 109, "20000": 109, "print": [109, 111, 112, 113], "26653144": 109, "11889648": 109, "17080836": 109, "9418255": 109, "33957506": 109, "98207648": 109, "80278535": 109, "47749555": 109, "12280485": 109, "8399288": 109, "11007866": 109, "90024278": 109, "88967784": 109, "61249626": 109, "00471622": 109, "87693032": 109, "54067729": 109, "94710096": 109, "titl": [109, 112], "hist": [109, 110, 112, 113, 114], "38": 109, "a_eq": 109, "b_eq": 109, "constrained_rectangl": 109, "add_equality_constraint": 109, "43": 109, "constrained_sampl": 109, "41": 109, "techniqu": 110, "improv": 110, "modal": 110, "core": [110, 113, 118], "idea": [110, 118], "prior": 110, "end": [110, 111], "difficult": 110, "pi_0": 110, "temperatur": 110, "beta": 110, "pi_": 110, "cdot": [110, 111], "cold": 110, "hot": 110, "ascend": 110, "beta_0": 110, "beta_1": 110, "dot": [110, 113], "beta_n": 110, "theses": 110, "hast": 110, "simpler": 110, "properti": [110, 112], "hotter": 110, "explor": 110, "notebook": 110, "mixtur": [110, 117], "distinct": 110, "mode": 110, "point": [110, 112], "vanilla": 110, "troubl": 110, "captur": 110, "better": 110, "broadli": 110, "colder": 110, "ipyparallel": 110, "ipp": 110, "later": 110, "mpi": 110, "commun": 110, "definit": 110, "synchron": 110, "exchang": 110, "reason": 110, "replica": 110, "shown": 110, "below": 110, "run_tempered_chain": 110, "mpi4pi": 110, "gaussianmixtur": 110, "__init__": 110, "mu1": 110, "mu2": 110, "epsilon": 110, "05": [110, 111], "cov": [110, 112], "ey": 110, "model1": 110, "model2": 110, "ones": [110, 113], "comm": 110, "comm_world": 110, "get_rank": 110, "syncrng": 110, "gaussiancoordinatehitandrunpropos": [110, 112], "paralleltemperingsyncrng": 110, "exchangeattemptprob": 110, "25": [110, 112, 113], "acc_rat": 110, "strategi": 110, "would": 110, "place": 110, "invok": 110, "mpiexec": 110, "n_temp": 110, "cluster": 110, "engin": 110, "rc": 110, "view": [110, 115], "broadcast_view": 110, "apply_sync": 110, "sort": 110, "kei": 110, "hard": 110, "debug": 110, "good": [110, 111], "instanc": 110, "short": [110, 112], "launcher": 110, "mpienginesetlaunch": 110, "100": [110, 113, 114], "00": 110, "09": 110, "stop": 110, "1686395190": 110, "exit_cod": 110, "pid": 110, "15143": 110, "identifi": [110, 117], "ipengin": 110, "1686395189": 110, "mxy1": 110, "13460": 110, "control": 110, "15084": 110, "ipcontrol": 110, "simpli": 110, "done": 110, "spawn": 110, "550000": 110, "n_replica": 110, "starmap": 110, "1686395200": 110, "assembl": 110, "00129537": 110, "00123599": 110, "2691": 110, "51743799": 110, "2614": 110, "77034169": 110, "seem": 110, "fig": [110, 111], "subplot": [110, 111], "sharei": 110, "figsiz": [110, 111, 113], "20": 110, "set_titl": 110, "245": [110, 114], "beta_": 110, "bin": [110, 112, 113, 114], "tight_layout": 110, "truncat": 111, "restrict": 111, "simplex": [111, 112], "begin": 111, "pmatrix": 111, "vdot": 111, "x_n": 111, "mathbb": 111, "sinc": 111, "worri": [111, 112], "further": [111, 117], "up": [111, 115], "adjust": 111, "being": 111, "deviat": 111, "fun": 111, "assess": 111, "per": [111, 112], "1010": 111, "threshold": 111, "set_xlabel": 111, "fontsiz": 111, "set_ylabel": 111, "2878": 111, "2892": 111, "2938": 111, "2862": 111, "new": [112, 118], "suggest": 112, "coordin": 112, "chrr": 112, "cheap": 112, "iter": 112, "overli": 112, "sensit": 112, "won": 112, "custommodel": 112, "determin": 112, "domain": [112, 117], "adapt": 112, "doe": 112, "NOT": 112, "inheret": 112, "anyth": 112, "accord": 112, "dummi": 112, "mu": 112, "linalg": 112, "inv": 112, "mandatori": 112, "put": 112, "2d": 112, "intial": 112, "__main__": 112, "0x7f09d89bdae0": 112, "preprocess": 112, "computation": 112, "influenc": 112, "strong": 112, "contact": 112, "abl": 112, "give": 112, "concret": 112, "advic": 112, "need": [112, 118], "gain": 112, "after": 112, "previou": 112, "centr": 112, "could": 112, "even": 112, "take": 112, "care": 112, "tuning_target": 112, "acceptanceratetarget": 112, "thompsonsamplingtun": 112, "tuning_posterior": 112, "thread": 112, "Of": 112, "cours": 112, "vari": 112, "cpu": 112, "10000": 112, "50": [112, 113], "rather": 112, "what": 112, "were": 112, "23018200000000003": 112, "230638": 112, "22964800000000005": 112, "231132": 112, "reach": 112, "strict": 112, "limit": 112, "01": 112, "400": 112, "minimum": 112, "00004714": 112, "9999576": 112, "35364": 112, "96731354": 112, "37847": 112, "86539577": 112, "count": 112, "truncatedgaussianpropos": 113, "csmmalapropos": 113, "billiardmalapropos": 113, "dikinwalkpropos": 113, "250_000": 113, "16": 113, "item": 113, "scatter": 113, "histtyp": 113, "stepfil": 113, "std": 113, "ddof": 113, "arang": 113, "theori": 113, "003717328432895571": 113, "9993054829707392": 113, "0007920047053880569": 113, "9989467812622056": 113, "00407619332020888": 113, "9984964219897617": 113, "004213253764616939": 113, "9990148075099534": 113, "0035644886495046573": 113, "0030206724358808": 113, "panda": 114, "pd": 114, "num_chain": 114, "read_csv": 114, "test_data": 114, "samples_": 114, "csv": 114, "x0": 114, "part": 115, "known": 117, "togeth": [117, 118], "ignor": 117, "interest": 117, "rosenbrock": 117, "banana": 117, "least": 117, "aim": [117, 118], "might": [117, 118], "necessari": [117, 118], "signatur": 117, "consist": 117, "mainli": 117, "desir": [117, 118], "appli": 117, "precondit": 117, "untransform": 117, "lie": [117, 118], "xyz": 117, "pypi": 117, "project": 117, "particulari": 118, "design": 118, "develop": 118, "avail": 118, "usabl": 118, "practition": 118, "filter": 118, "believ": 118, "sake": 118, "itself": 118, "nevertheless": 118, "rapid": 118, "prototyp": 118, "promis": 118, "instruct": 118, "ultim": 118, "those": 118, "wrap": 118, "pypropos": 118, "deleg": 118, "obvious": 118, "AND": 118, "TO": 118, "BE": 118, "rewritten": 118, "accept_propos": 118, "calculate_log_acceptance_prob": 118, "symmetr": 118, "infeas": 118, "infti": 118, "get_stat": 118, "set_stat": 118, "new_stat": 118, "get_propos": 118, "get_steps": 118, "set_steps": 118, "new_steps": 118, "get": 118, "get_nam": 118, "name": 118}, "objects": {"hopsy": [[4, 0, 1, "", "AcceptanceRateTarget"], [5, 0, 1, "", "AdaptiveMetropolisProposal"], [6, 0, 1, "", "BallWalkProposal"], [7, 0, 1, "", "CSmMALAProposal"], [8, 0, 1, "", "DikinWalkProposal"], [9, 0, 1, "", "ExpectedSquaredJumpDistanceTarget"], [10, 0, 1, "", "Gaussian"], [11, 0, 1, "", "GaussianCoordinateHitAndRunProposal"], [12, 0, 1, "", "GaussianHitAndRunProposal"], [13, 0, 1, "", "GaussianProposal"], [14, 0, 1, "", "MarkovChain"], [15, 0, 1, "", "Mixture"], [16, 0, 1, "", "Model"], [17, 0, 1, "", "Normal"], [18, 0, 1, "", "Problem"], [19, 0, 1, "", "Proposal"], [20, 0, 1, "", "PyModel"], [21, 0, 1, "", "PyProposal"], [22, 0, 1, "", "PyTuningTarget"], [23, 0, 1, "", "RandomNumberGenerator"], [24, 0, 1, "", "Rosenbrock"], [25, 0, 1, "", "ThompsonSamplingTuning"], [26, 0, 1, "", "TuningTarget"], [27, 0, 1, "", "Uniform"], [28, 0, 1, "", "UniformCoordinateHitAndRunProposal"], [29, 0, 1, "", "UniformHitAndRunProposal"], [30, 0, 1, "", "add_box_constraints"], [31, 0, 1, "", "compute_chebyshev_center"], [32, 0, 1, "", "ess"], [33, 0, 1, "", "mcse"], [34, 0, 1, "", "rhat"], [35, 0, 1, "", "round"], [36, 0, 1, "", "sample"], [37, 0, 1, "", "simplify"], [38, 0, 1, "", "tune"]], "hopsy.AdaptiveMetropolisProposal": [[39, 1, 1, "", "accept_proposal"], [40, 1, 1, "", "deepcopy"], [41, 1, 1, "", "propose"]], "hopsy.BallWalkProposal": [[42, 1, 1, "", "accept_proposal"], [43, 1, 1, "", "deepcopy"], [44, 1, 1, "", "propose"]], "hopsy.CSmMALAProposal": [[45, 1, 1, "", "accept_proposal"], [46, 1, 1, "", "deepcopy"], [47, 1, 1, "", "propose"]], "hopsy.DikinWalkProposal": [[48, 1, 1, "", "accept_proposal"], [49, 1, 1, "", "deepcopy"], [50, 1, 1, "", "propose"]], "hopsy.Gaussian": [[51, 1, 1, "", "compute_expected_fisher_information"], [52, 1, 1, "", "compute_log_likelihood_gradient"], [53, 1, 1, "", "compute_negative_log_likelihood"], [54, 1, 1, "", "grad_log_density"], [55, 1, 1, "", "hessian"], [56, 1, 1, "", "log_density"]], "hopsy.GaussianCoordinateHitAndRunProposal": [[57, 1, 1, "", "accept_proposal"], [58, 1, 1, "", "deepcopy"], [59, 1, 1, "", "propose"]], "hopsy.GaussianHitAndRunProposal": [[60, 1, 1, "", "accept_proposal"], [61, 1, 1, "", "deepcopy"], [62, 1, 1, "", "propose"]], "hopsy.GaussianProposal": [[63, 1, 1, "", "accept_proposal"], [64, 1, 1, "", "deepcopy"], [65, 1, 1, "", "propose"]], "hopsy.Mixture": [[66, 1, 1, "", "compute_expected_fisher_information"], [67, 1, 1, "", "compute_log_likelihood_gradient"], [68, 1, 1, "", "compute_negative_log_likelihood"], [69, 1, 1, "", "grad_log_density"], [70, 1, 1, "", "hessian"], [71, 1, 1, "", "log_density"]], "hopsy.Model": [[72, 1, 1, "", "compute_expected_fisher_information"], [73, 1, 1, "", "compute_log_likelihood_gradient"], [74, 1, 1, "", "compute_negative_log_likelihood"], [75, 1, 1, "", "grad_log_density"], [76, 1, 1, "", "hessian"], [77, 1, 1, "", "log_density"]], "hopsy.Normal": [[78, 1, 1, "", "__call__"]], "hopsy.PyModel": [[82, 1, 1, "", "compute_expected_fisher_information"], [83, 1, 1, "", "compute_log_likelihood_gradient"], [84, 1, 1, "", "compute_negative_log_likelihood"], [85, 1, 1, "", "grad_log_density"], [86, 1, 1, "", "hessian"], [87, 1, 1, "", "log_density"]], "hopsy.PyProposal": [[88, 1, 1, "", "accept_proposal"], [89, 1, 1, "", "deepcopy"], [90, 1, 1, "", "propose"]], "hopsy.RandomNumberGenerator": [[91, 1, 1, "", "__call__"]], "hopsy.Rosenbrock": [[92, 1, 1, "", "compute_expected_fisher_information"], [93, 1, 1, "", "compute_log_likelihood_gradient"], [94, 1, 1, "", "compute_negative_log_likelihood"], [95, 1, 1, "", "grad_log_density"], [96, 1, 1, "", "hessian"], [97, 1, 1, "", "log_density"]], "hopsy.Uniform": [[98, 1, 1, "", "__call__"]], "hopsy.UniformCoordinateHitAndRunProposal": [[99, 1, 1, "", "accept_proposal"], [100, 1, 1, "", "deepcopy"], [101, 1, 1, "", "propose"]], "hopsy.UniformHitAndRunProposal": [[102, 1, 1, "", "accept_proposal"], [103, 1, 1, "", "deepcopy"], [104, 1, 1, "", "propose"]]}, "objtypes": {"0": "py:class", "1": "py:method"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"]}, "titleterms": {"exampl": [0, 118], "first": [1, 109, 112], "step": 1, "instal": 2, "introduct": 3, "python": [3, 105], "implement": 3, "propos": [3, 19, 41, 44, 47, 50, 59, 62, 65, 79, 80, 81, 90, 101, 104, 118, 120], "model": [3, 16, 72, 73, 74, 75, 76, 77, 112, 117, 120], "hopsi": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 112], "acceptanceratetarget": 4, "adaptivemetropolispropos": [5, 39, 40, 41], "ballwalkpropos": [6, 42, 43, 44], "csmmalapropos": [7, 45, 46, 47], "dikinwalkpropos": [8, 48, 49, 50], "expectedsquaredjumpdistancetarget": 9, "gaussian": [10, 51, 52, 53, 54, 55, 56], "gaussiancoordinatehitandrunpropos": [11, 57, 58, 59], "gaussianhitandrunpropos": [12, 60, 61, 62], "gaussianpropos": [13, 63, 64, 65], "markovchain": 14, "mixtur": [15, 66, 67, 68, 69, 70, 71], "normal": [17, 78], "problem": [18, 117, 120], "pymodel": [20, 82, 83, 84, 85, 86, 87], "pypropos": [21, 88, 89, 90], "pytuningtarget": 22, "randomnumbergener": [23, 91], "rosenbrock": [24, 92, 93, 94, 95, 96, 97], "thompsonsamplingtun": 25, "tuningtarget": 26, "uniform": [27, 98], "uniformcoordinatehitandrunpropos": [28, 99, 100, 101], "uniformhitandrunpropos": [29, 102, 103, 104], "add_box_constraint": 30, "compute_chebyshev_cent": 31, "ess": 32, "mcse": 33, "rhat": 34, "round": 35, "sampl": [36, 105, 108, 109, 112, 113, 118], "simplifi": 37, "tune": [38, 119, 120], "accept_propos": [39, 42, 45, 48, 57, 60, 63, 79, 88, 99, 102], "deepcopi": [40, 43, 46, 49, 58, 61, 64, 80, 89, 100, 103], "compute_expected_fisher_inform": [51, 66, 72, 82, 92], "compute_log_likelihood_gradi": [52, 67, 73, 83, 93], "compute_negative_log_likelihood": [53, 68, 74, 84, 94], "grad_log_dens": [54, 69, 75, 85, 95], "hessian": [55, 70, 76, 86, 96], "log_dens": [56, 71, 77, 87, 97], "__call__": [78, 91, 98], "highli": 105, "optim": 105, "polytop": [105, 106], "further": 105, "resourc": 105, "birkhoff": 106, "callback": 107, "set": 107, "up": 107, "clickhous": 107, "constrain": 108, "without": 109, "equal": 109, "constraint": 109, "now": 109, "rectangl": 109, "2d": 109, "fix": 109, "third": 109, "dimens": 109, "2": 109, "5": 109, "parallel": 110, "temper": 110, "A": [111, 112], "quick": 111, "tutori": 111, "guid": [112, 115], "your": 112, "With": 112, "tmvn": 113, "user": 115, "post": 116, "process": 116, "refer": [116, 117, 118, 119, 120], "diagnost": [116, 120], "descript": 117, "linear": 117, "transform": 117, "markov": [118, 120], "chain": [118, 120], "mont": 118, "carlo": 118, "distribut": 118, "code": 118, "random": [118, 120]}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"Examples": [[0, "examples"], [0, null]], "First Steps": [[1, "first-steps"], [1, null]], "Installation": [[2, "installation"]], "Introduction": [[3, "introduction"]], "Python-implemented proposals & models": [[3, "python-implemented-proposals-models"]], "hopsy.AcceptanceRateTarget": [[4, "hopsy-acceptanceratetarget"]], "hopsy.AdaptiveMetropolisProposal": [[5, "hopsy-adaptivemetropolisproposal"]], "hopsy.BallWalkProposal": [[6, "hopsy-ballwalkproposal"]], "hopsy.CSmMALAProposal": [[7, "hopsy-csmmalaproposal"]], "hopsy.DikinWalkProposal": [[8, "hopsy-dikinwalkproposal"]], "hopsy.ExpectedSquaredJumpDistanceTarget": [[9, "hopsy-expectedsquaredjumpdistancetarget"]], "hopsy.Gaussian": [[10, "hopsy-gaussian"]], "hopsy.GaussianCoordinateHitAndRunProposal": [[11, "hopsy-gaussiancoordinatehitandrunproposal"]], "hopsy.GaussianHitAndRunProposal": [[12, "hopsy-gaussianhitandrunproposal"]], "hopsy.GaussianProposal": [[13, "hopsy-gaussianproposal"]], "hopsy.MarkovChain": [[14, "hopsy-markovchain"]], "hopsy.Mixture": [[15, "hopsy-mixture"]], "hopsy.Model": [[16, "hopsy-model"]], "hopsy.Normal": [[17, "hopsy-normal"]], "hopsy.Problem": [[18, "hopsy-problem"]], "hopsy.Proposal": [[19, "hopsy-proposal"]], "hopsy.PyModel": [[20, "hopsy-pymodel"]], "hopsy.PyProposal": [[21, "hopsy-pyproposal"]], "hopsy.PyTuningTarget": [[22, "hopsy-pytuningtarget"]], "hopsy.RandomNumberGenerator": [[23, "hopsy-randomnumbergenerator"]], "hopsy.Rosenbrock": [[24, "hopsy-rosenbrock"]], "hopsy.ThompsonSamplingTuning": [[25, "hopsy-thompsonsamplingtuning"]], "hopsy.TuningTarget": [[26, "hopsy-tuningtarget"]], "hopsy.Uniform": [[27, "hopsy-uniform"]], "hopsy.UniformCoordinateHitAndRunProposal": [[28, "hopsy-uniformcoordinatehitandrunproposal"]], "hopsy.UniformHitAndRunProposal": [[29, "hopsy-uniformhitandrunproposal"]], "hopsy.add_box_constraints": [[30, "hopsy-add-box-constraints"]], "hopsy.compute_chebyshev_center": [[31, "hopsy-compute-chebyshev-center"]], "hopsy.ess": [[32, "hopsy-ess"]], "hopsy.mcse": [[33, "hopsy-mcse"]], "hopsy.rhat": [[34, "hopsy-rhat"]], "hopsy.round": [[35, "hopsy-round"]], "hopsy.sample": [[36, "hopsy-sample"]], "hopsy.simplify": [[37, "hopsy-simplify"]], "hopsy.tune": [[38, "hopsy-tune"]], "hopsy.AdaptiveMetropolisProposal.accept_proposal": [[39, "hopsy-adaptivemetropolisproposal-accept-proposal"]], "hopsy.AdaptiveMetropolisProposal.deepcopy": [[40, "hopsy-adaptivemetropolisproposal-deepcopy"]], "hopsy.AdaptiveMetropolisProposal.propose": [[41, "hopsy-adaptivemetropolisproposal-propose"]], "hopsy.BallWalkProposal.accept_proposal": [[42, "hopsy-ballwalkproposal-accept-proposal"]], "hopsy.BallWalkProposal.deepcopy": [[43, "hopsy-ballwalkproposal-deepcopy"]], "hopsy.BallWalkProposal.propose": [[44, "hopsy-ballwalkproposal-propose"]], "hopsy.CSmMALAProposal.accept_proposal": [[45, "hopsy-csmmalaproposal-accept-proposal"]], "hopsy.CSmMALAProposal.deepcopy": [[46, "hopsy-csmmalaproposal-deepcopy"]], "hopsy.CSmMALAProposal.propose": [[47, "hopsy-csmmalaproposal-propose"]], "hopsy.DikinWalkProposal.accept_proposal": [[48, "hopsy-dikinwalkproposal-accept-proposal"]], "hopsy.DikinWalkProposal.deepcopy": [[49, "hopsy-dikinwalkproposal-deepcopy"]], "hopsy.DikinWalkProposal.propose": [[50, "hopsy-dikinwalkproposal-propose"]], "hopsy.Gaussian.compute_expected_fisher_information": [[51, "hopsy-gaussian-compute-expected-fisher-information"]], "hopsy.Gaussian.compute_log_likelihood_gradient": [[52, "hopsy-gaussian-compute-log-likelihood-gradient"]], "hopsy.Gaussian.compute_negative_log_likelihood": [[53, "hopsy-gaussian-compute-negative-log-likelihood"]], "hopsy.Gaussian.grad_log_density": [[54, "hopsy-gaussian-grad-log-density"]], "hopsy.Gaussian.hessian": [[55, "hopsy-gaussian-hessian"]], "hopsy.Gaussian.log_density": [[56, "hopsy-gaussian-log-density"]], "hopsy.GaussianCoordinateHitAndRunProposal.accept_proposal": [[57, "hopsy-gaussiancoordinatehitandrunproposal-accept-proposal"]], "hopsy.GaussianCoordinateHitAndRunProposal.deepcopy": [[58, "hopsy-gaussiancoordinatehitandrunproposal-deepcopy"]], "hopsy.GaussianCoordinateHitAndRunProposal.propose": [[59, "hopsy-gaussiancoordinatehitandrunproposal-propose"]], "hopsy.GaussianHitAndRunProposal.accept_proposal": [[60, "hopsy-gaussianhitandrunproposal-accept-proposal"]], "hopsy.GaussianHitAndRunProposal.deepcopy": [[61, "hopsy-gaussianhitandrunproposal-deepcopy"]], "hopsy.GaussianHitAndRunProposal.propose": [[62, "hopsy-gaussianhitandrunproposal-propose"]], "hopsy.GaussianProposal.accept_proposal": [[63, "hopsy-gaussianproposal-accept-proposal"]], "hopsy.GaussianProposal.deepcopy": [[64, "hopsy-gaussianproposal-deepcopy"]], "hopsy.GaussianProposal.propose": [[65, "hopsy-gaussianproposal-propose"]], "hopsy.Mixture.compute_expected_fisher_information": [[66, "hopsy-mixture-compute-expected-fisher-information"]], "hopsy.Mixture.compute_log_likelihood_gradient": [[67, "hopsy-mixture-compute-log-likelihood-gradient"]], "hopsy.Mixture.compute_negative_log_likelihood": [[68, "hopsy-mixture-compute-negative-log-likelihood"]], "hopsy.Mixture.grad_log_density": [[69, "hopsy-mixture-grad-log-density"]], "hopsy.Mixture.hessian": [[70, "hopsy-mixture-hessian"]], "hopsy.Mixture.log_density": [[71, "hopsy-mixture-log-density"]], "hopsy.Model.compute_expected_fisher_information": [[72, "hopsy-model-compute-expected-fisher-information"]], "hopsy.Model.compute_log_likelihood_gradient": [[73, "hopsy-model-compute-log-likelihood-gradient"]], "hopsy.Model.compute_negative_log_likelihood": [[74, "hopsy-model-compute-negative-log-likelihood"]], "hopsy.Model.grad_log_density": [[75, "hopsy-model-grad-log-density"]], "hopsy.Model.hessian": [[76, "hopsy-model-hessian"]], "hopsy.Model.log_density": [[77, "hopsy-model-log-density"]], "hopsy.Normal.__call__": [[78, "hopsy-normal-call"]], "hopsy.Proposal.accept_proposal": [[79, "hopsy-proposal-accept-proposal"]], "hopsy.Proposal.deepcopy": [[80, "hopsy-proposal-deepcopy"]], "hopsy.Proposal.propose": [[81, "hopsy-proposal-propose"]], "hopsy.PyModel.compute_expected_fisher_information": [[82, "hopsy-pymodel-compute-expected-fisher-information"]], "hopsy.PyModel.compute_log_likelihood_gradient": [[83, "hopsy-pymodel-compute-log-likelihood-gradient"]], "hopsy.PyModel.compute_negative_log_likelihood": [[84, "hopsy-pymodel-compute-negative-log-likelihood"]], "hopsy.PyModel.grad_log_density": [[85, "hopsy-pymodel-grad-log-density"]], "hopsy.PyModel.hessian": [[86, "hopsy-pymodel-hessian"]], "hopsy.PyModel.log_density": [[87, "hopsy-pymodel-log-density"]], "hopsy.PyProposal.accept_proposal": [[88, "hopsy-pyproposal-accept-proposal"]], "hopsy.PyProposal.deepcopy": [[89, "hopsy-pyproposal-deepcopy"]], "hopsy.PyProposal.propose": [[90, "hopsy-pyproposal-propose"]], "hopsy.RandomNumberGenerator.__call__": [[91, "hopsy-randomnumbergenerator-call"]], "hopsy.Rosenbrock.compute_expected_fisher_information": [[92, "hopsy-rosenbrock-compute-expected-fisher-information"]], "hopsy.Rosenbrock.compute_log_likelihood_gradient": [[93, "hopsy-rosenbrock-compute-log-likelihood-gradient"]], "hopsy.Rosenbrock.compute_negative_log_likelihood": [[94, "hopsy-rosenbrock-compute-negative-log-likelihood"]], "hopsy.Rosenbrock.grad_log_density": [[95, "hopsy-rosenbrock-grad-log-density"]], "hopsy.Rosenbrock.hessian": [[96, "hopsy-rosenbrock-hessian"]], "hopsy.Rosenbrock.log_density": [[97, "hopsy-rosenbrock-log-density"]], "hopsy.Uniform.__call__": [[98, "hopsy-uniform-call"]], "hopsy.UniformCoordinateHitAndRunProposal.accept_proposal": [[99, "hopsy-uniformcoordinatehitandrunproposal-accept-proposal"]], "hopsy.UniformCoordinateHitAndRunProposal.deepcopy": [[100, "hopsy-uniformcoordinatehitandrunproposal-deepcopy"]], "hopsy.UniformCoordinateHitAndRunProposal.propose": [[101, "hopsy-uniformcoordinatehitandrunproposal-propose"]], "hopsy.UniformHitAndRunProposal.accept_proposal": [[102, "hopsy-uniformhitandrunproposal-accept-proposal"]], "hopsy.UniformHitAndRunProposal.deepcopy": [[103, "hopsy-uniformhitandrunproposal-deepcopy"]], "hopsy.UniformHitAndRunProposal.propose": [[104, "hopsy-uniformhitandrunproposal-propose"]], "hopsy - Highly Optimized Polytope Sampling in Python": [[105, "hopsy-highly-optimized-polytope-sampling-in-python"]], "Further resources": [[105, "further-resources"]], "Birkhoff polytope": [[106, "Birkhoff-polytope"]], "Callbacks": [[107, "Callbacks"]], "Setting up Clickhouse": [[107, "Setting-up-Clickhouse"]], "Constrained Sampling": [[108, "Constrained-Sampling"]], "First sample without equality constraints": [[109, "First-sample-without-equality-constraints"]], "Now constraint rectangle to 2D by fixing third dimension at 2.5": [[109, "Now-constraint-rectangle-to-2D-by-fixing-third-dimension-at-2.5"]], "Parallel Tempering": [[110, "Parallel-Tempering"]], "A Quick Tutorial": [[111, "A-Quick-Tutorial"]], "A Guide to Sampling Your First Model With hopsy": [[112, "A-Guide-to-Sampling-Your-First-Model-With-hopsy"]], "TMVN Sampling": [[113, "TMVN-Sampling"]], "User Guide": [[115, "user-guide"], [115, null]], "Post-Processing": [[116, "post-processing"]], "Reference": [[116, "reference"], [117, "reference"], [118, "reference"], [119, "reference"], [120, "reference"]], "Diagnostics": [[116, "diagnostics"], [120, "diagnostics"]], "Problem Description": [[117, "problem-description"]], "Problem": [[117, "problem"], [117, "id2"], [120, "problem"]], "Linear Transformations": [[117, "linear-transformations"]], "Models": [[117, "models"], [120, "models"]], "Markov Chain Monte Carlo Sampling": [[118, "markov-chain-monte-carlo-sampling"]], "Markov Chains": [[118, "markov-chains"]], "Proposal Distributions": [[118, "proposal-distributions"]], "Example code": [[118, "example-code"]], "Proposals": [[118, "proposals"], [120, "proposals"]], "Markov Chain": [[118, "markov-chain"], [120, "markov-chain"]], "Random": [[118, "random"], [120, "random"]], "Tuning": [[119, "tuning"], [119, "id1"], [120, "tuning"]]}, "indexentries": {"acceptanceratetarget (class in hopsy)": [[4, "hopsy.AcceptanceRateTarget"]], "adaptivemetropolisproposal (class in hopsy)": [[5, "hopsy.AdaptiveMetropolisProposal"]], "ballwalkproposal (class in hopsy)": [[6, "hopsy.BallWalkProposal"]], "csmmalaproposal (class in hopsy)": [[7, "hopsy.CSmMALAProposal"]], "dikinwalkproposal (class in hopsy)": [[8, "hopsy.DikinWalkProposal"]], "expectedsquaredjumpdistancetarget (class in hopsy)": [[9, "hopsy.ExpectedSquaredJumpDistanceTarget"]], "gaussian (class in hopsy)": [[10, "hopsy.Gaussian"]], "gaussiancoordinatehitandrunproposal (class in hopsy)": [[11, "hopsy.GaussianCoordinateHitAndRunProposal"]], "gaussianhitandrunproposal (class in hopsy)": [[12, "hopsy.GaussianHitAndRunProposal"]], "gaussianproposal (class in hopsy)": [[13, "hopsy.GaussianProposal"]], "markovchain (class in hopsy)": [[14, "hopsy.MarkovChain"]], "mixture (class in hopsy)": [[15, "hopsy.Mixture"]], "model (class in hopsy)": [[16, "hopsy.Model"]], "normal (class in hopsy)": [[17, "hopsy.Normal"]], "problem (class in hopsy)": [[18, "hopsy.Problem"]], "proposal (class in hopsy)": [[19, "hopsy.Proposal"]], "pymodel (class in hopsy)": [[20, "hopsy.PyModel"]], "pyproposal (class in hopsy)": [[21, "hopsy.PyProposal"]], "pytuningtarget (class in hopsy)": [[22, "hopsy.PyTuningTarget"]], "randomnumbergenerator (class in hopsy)": [[23, "hopsy.RandomNumberGenerator"]], "rosenbrock (class in hopsy)": [[24, "hopsy.Rosenbrock"]], "thompsonsamplingtuning (class in hopsy)": [[25, "hopsy.ThompsonSamplingTuning"]], "tuningtarget (class in hopsy)": [[26, "hopsy.TuningTarget"]], "uniform (class in hopsy)": [[27, "hopsy.Uniform"]], "uniformcoordinatehitandrunproposal (class in hopsy)": [[28, "hopsy.UniformCoordinateHitAndRunProposal"]], "uniformhitandrunproposal (class in hopsy)": [[29, "hopsy.UniformHitAndRunProposal"]], "add_box_constraints (class in hopsy)": [[30, "hopsy.add_box_constraints"]], "compute_chebyshev_center (class in hopsy)": [[31, "hopsy.compute_chebyshev_center"]], "ess (class in hopsy)": [[32, "hopsy.ess"]], "mcse (class in hopsy)": [[33, "hopsy.mcse"]], "rhat (class in hopsy)": [[34, "hopsy.rhat"]], "round (class in hopsy)": [[35, "hopsy.round"]], "sample (class in hopsy)": [[36, "hopsy.sample"]], "simplify (class in hopsy)": [[37, "hopsy.simplify"]], "tune (class in hopsy)": [[38, "hopsy.tune"]], "accept_proposal() (hopsy.adaptivemetropolisproposal method)": [[39, "hopsy.AdaptiveMetropolisProposal.accept_proposal"]], "deepcopy() (hopsy.adaptivemetropolisproposal method)": [[40, "hopsy.AdaptiveMetropolisProposal.deepcopy"]], "propose() (hopsy.adaptivemetropolisproposal method)": [[41, "hopsy.AdaptiveMetropolisProposal.propose"]], "accept_proposal() (hopsy.ballwalkproposal method)": [[42, "hopsy.BallWalkProposal.accept_proposal"]], "deepcopy() (hopsy.ballwalkproposal method)": [[43, "hopsy.BallWalkProposal.deepcopy"]], "propose() (hopsy.ballwalkproposal method)": [[44, "hopsy.BallWalkProposal.propose"]], "accept_proposal() (hopsy.csmmalaproposal method)": [[45, "hopsy.CSmMALAProposal.accept_proposal"]], "deepcopy() (hopsy.csmmalaproposal method)": [[46, "hopsy.CSmMALAProposal.deepcopy"]], "propose() (hopsy.csmmalaproposal method)": [[47, "hopsy.CSmMALAProposal.propose"]], "accept_proposal() (hopsy.dikinwalkproposal method)": [[48, "hopsy.DikinWalkProposal.accept_proposal"]], "deepcopy() (hopsy.dikinwalkproposal method)": [[49, "hopsy.DikinWalkProposal.deepcopy"]], "propose() (hopsy.dikinwalkproposal method)": [[50, "hopsy.DikinWalkProposal.propose"]], "compute_expected_fisher_information() (hopsy.gaussian method)": [[51, "hopsy.Gaussian.compute_expected_fisher_information"]], "compute_log_likelihood_gradient() (hopsy.gaussian method)": [[52, "hopsy.Gaussian.compute_log_likelihood_gradient"]], "compute_negative_log_likelihood() (hopsy.gaussian method)": [[53, "hopsy.Gaussian.compute_negative_log_likelihood"]], "grad_log_density() (hopsy.gaussian method)": [[54, "hopsy.Gaussian.grad_log_density"]], "hessian() (hopsy.gaussian method)": [[55, "hopsy.Gaussian.hessian"]], "log_density() (hopsy.gaussian method)": [[56, "hopsy.Gaussian.log_density"]], "accept_proposal() (hopsy.gaussiancoordinatehitandrunproposal method)": [[57, "hopsy.GaussianCoordinateHitAndRunProposal.accept_proposal"]], "deepcopy() (hopsy.gaussiancoordinatehitandrunproposal method)": [[58, "hopsy.GaussianCoordinateHitAndRunProposal.deepcopy"]], "propose() (hopsy.gaussiancoordinatehitandrunproposal method)": [[59, "hopsy.GaussianCoordinateHitAndRunProposal.propose"]], "accept_proposal() (hopsy.gaussianhitandrunproposal method)": [[60, "hopsy.GaussianHitAndRunProposal.accept_proposal"]], "deepcopy() (hopsy.gaussianhitandrunproposal method)": [[61, "hopsy.GaussianHitAndRunProposal.deepcopy"]], "propose() (hopsy.gaussianhitandrunproposal method)": [[62, "hopsy.GaussianHitAndRunProposal.propose"]], "accept_proposal() (hopsy.gaussianproposal method)": [[63, "hopsy.GaussianProposal.accept_proposal"]], "deepcopy() (hopsy.gaussianproposal method)": [[64, "hopsy.GaussianProposal.deepcopy"]], "propose() (hopsy.gaussianproposal method)": [[65, "hopsy.GaussianProposal.propose"]], "compute_expected_fisher_information() (hopsy.mixture method)": [[66, "hopsy.Mixture.compute_expected_fisher_information"]], "compute_log_likelihood_gradient() (hopsy.mixture method)": [[67, "hopsy.Mixture.compute_log_likelihood_gradient"]], "compute_negative_log_likelihood() (hopsy.mixture method)": [[68, "hopsy.Mixture.compute_negative_log_likelihood"]], "grad_log_density() (hopsy.mixture method)": [[69, "hopsy.Mixture.grad_log_density"]], "hessian() (hopsy.mixture method)": [[70, "hopsy.Mixture.hessian"]], "log_density() (hopsy.mixture method)": [[71, "hopsy.Mixture.log_density"]], "compute_expected_fisher_information() (hopsy.model method)": [[72, "hopsy.Model.compute_expected_fisher_information"]], "compute_log_likelihood_gradient() (hopsy.model method)": [[73, "hopsy.Model.compute_log_likelihood_gradient"]], "compute_negative_log_likelihood() (hopsy.model method)": [[74, "hopsy.Model.compute_negative_log_likelihood"]], "grad_log_density() (hopsy.model method)": [[75, "hopsy.Model.grad_log_density"]], "hessian() (hopsy.model method)": [[76, "hopsy.Model.hessian"]], "log_density() (hopsy.model method)": [[77, "hopsy.Model.log_density"]], "__call__() (hopsy.normal method)": [[78, "hopsy.Normal.__call__"]], "compute_expected_fisher_information() (hopsy.pymodel method)": [[82, "hopsy.PyModel.compute_expected_fisher_information"]], "compute_log_likelihood_gradient() (hopsy.pymodel method)": [[83, "hopsy.PyModel.compute_log_likelihood_gradient"]], "compute_negative_log_likelihood() (hopsy.pymodel method)": [[84, "hopsy.PyModel.compute_negative_log_likelihood"]], "grad_log_density() (hopsy.pymodel method)": [[85, "hopsy.PyModel.grad_log_density"]], "hessian() (hopsy.pymodel method)": [[86, "hopsy.PyModel.hessian"]], "log_density() (hopsy.pymodel method)": [[87, "hopsy.PyModel.log_density"]], "accept_proposal() (hopsy.pyproposal method)": [[88, "hopsy.PyProposal.accept_proposal"]], "deepcopy() (hopsy.pyproposal method)": [[89, "hopsy.PyProposal.deepcopy"]], "propose() (hopsy.pyproposal method)": [[90, "hopsy.PyProposal.propose"]], "__call__() (hopsy.randomnumbergenerator method)": [[91, "hopsy.RandomNumberGenerator.__call__"]], "compute_expected_fisher_information() (hopsy.rosenbrock method)": [[92, "hopsy.Rosenbrock.compute_expected_fisher_information"]], "compute_log_likelihood_gradient() (hopsy.rosenbrock method)": [[93, "hopsy.Rosenbrock.compute_log_likelihood_gradient"]], "compute_negative_log_likelihood() (hopsy.rosenbrock method)": [[94, "hopsy.Rosenbrock.compute_negative_log_likelihood"]], "grad_log_density() (hopsy.rosenbrock method)": [[95, "hopsy.Rosenbrock.grad_log_density"]], "hessian() (hopsy.rosenbrock method)": [[96, "hopsy.Rosenbrock.hessian"]], "log_density() (hopsy.rosenbrock method)": [[97, "hopsy.Rosenbrock.log_density"]], "__call__() (hopsy.uniform method)": [[98, "hopsy.Uniform.__call__"]], "accept_proposal() (hopsy.uniformcoordinatehitandrunproposal method)": [[99, "hopsy.UniformCoordinateHitAndRunProposal.accept_proposal"]], "deepcopy() (hopsy.uniformcoordinatehitandrunproposal method)": [[100, "hopsy.UniformCoordinateHitAndRunProposal.deepcopy"]], "propose() (hopsy.uniformcoordinatehitandrunproposal method)": [[101, "hopsy.UniformCoordinateHitAndRunProposal.propose"]], "accept_proposal() (hopsy.uniformhitandrunproposal method)": [[102, "hopsy.UniformHitAndRunProposal.accept_proposal"]], "deepcopy() (hopsy.uniformhitandrunproposal method)": [[103, "hopsy.UniformHitAndRunProposal.deepcopy"]], "propose() (hopsy.uniformhitandrunproposal method)": [[104, "hopsy.UniformHitAndRunProposal.propose"]]}})