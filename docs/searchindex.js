Search.setIndex({"docnames": ["examples", "firststeps", "firststeps/installation", "firststeps/introduction", "generated/hopsy.AcceptanceRateTarget", "generated/hopsy.AdaptiveMetropolisProposal", "generated/hopsy.BallWalkProposal", "generated/hopsy.CSmMALAProposal", "generated/hopsy.DikinWalkProposal", "generated/hopsy.ExpectedSquaredJumpDistanceTarget", "generated/hopsy.Gaussian", "generated/hopsy.GaussianCoordinateHitAndRunProposal", "generated/hopsy.GaussianHitAndRunProposal", "generated/hopsy.GaussianProposal", "generated/hopsy.MarkovChain", "generated/hopsy.Mixture", "generated/hopsy.Model", "generated/hopsy.Normal", "generated/hopsy.Problem", "generated/hopsy.Proposal", "generated/hopsy.PyModel", "generated/hopsy.PyProposal", "generated/hopsy.PyTuningTarget", "generated/hopsy.RandomNumberGenerator", "generated/hopsy.Rosenbrock", "generated/hopsy.ThompsonSamplingTuning", "generated/hopsy.TuningTarget", "generated/hopsy.Uniform", "generated/hopsy.UniformCoordinateHitAndRunProposal", "generated/hopsy.UniformHitAndRunProposal", "generated/hopsy.add_box_constraints", "generated/hopsy.compute_chebyshev_center", "generated/hopsy.ess", "generated/hopsy.mcse", "generated/hopsy.rhat", "generated/hopsy.round", "generated/hopsy.sample", "generated/hopsy.simplify", "generated/hopsy.tune", "generated/objname/hopsy.AdaptiveMetropolisProposal.accept_proposal", "generated/objname/hopsy.AdaptiveMetropolisProposal.deepcopy", "generated/objname/hopsy.AdaptiveMetropolisProposal.propose", "generated/objname/hopsy.BallWalkProposal.accept_proposal", "generated/objname/hopsy.BallWalkProposal.deepcopy", "generated/objname/hopsy.BallWalkProposal.propose", "generated/objname/hopsy.CSmMALAProposal.accept_proposal", "generated/objname/hopsy.CSmMALAProposal.deepcopy", "generated/objname/hopsy.CSmMALAProposal.propose", "generated/objname/hopsy.DikinWalkProposal.accept_proposal", "generated/objname/hopsy.DikinWalkProposal.deepcopy", "generated/objname/hopsy.DikinWalkProposal.propose", "generated/objname/hopsy.Gaussian.compute_expected_fisher_information", "generated/objname/hopsy.Gaussian.compute_log_likelihood_gradient", "generated/objname/hopsy.Gaussian.compute_negative_log_likelihood", "generated/objname/hopsy.Gaussian.log_curvature", "generated/objname/hopsy.Gaussian.log_density", "generated/objname/hopsy.Gaussian.log_gradient", "generated/objname/hopsy.GaussianCoordinateHitAndRunProposal.accept_proposal", "generated/objname/hopsy.GaussianCoordinateHitAndRunProposal.deepcopy", "generated/objname/hopsy.GaussianCoordinateHitAndRunProposal.propose", "generated/objname/hopsy.GaussianHitAndRunProposal.accept_proposal", "generated/objname/hopsy.GaussianHitAndRunProposal.deepcopy", "generated/objname/hopsy.GaussianHitAndRunProposal.propose", "generated/objname/hopsy.GaussianProposal.accept_proposal", "generated/objname/hopsy.GaussianProposal.deepcopy", "generated/objname/hopsy.GaussianProposal.propose", "generated/objname/hopsy.Mixture.compute_expected_fisher_information", "generated/objname/hopsy.Mixture.compute_log_likelihood_gradient", "generated/objname/hopsy.Mixture.compute_negative_log_likelihood", "generated/objname/hopsy.Mixture.log_curvature", "generated/objname/hopsy.Mixture.log_density", "generated/objname/hopsy.Mixture.log_gradient", "generated/objname/hopsy.Model.compute_expected_fisher_information", "generated/objname/hopsy.Model.compute_log_likelihood_gradient", "generated/objname/hopsy.Model.compute_negative_log_likelihood", "generated/objname/hopsy.Model.log_curvature", "generated/objname/hopsy.Model.log_density", "generated/objname/hopsy.Model.log_gradient", "generated/objname/hopsy.Normal.__call__", "generated/objname/hopsy.Problem.slacks", "generated/objname/hopsy.PyModel.compute_expected_fisher_information", "generated/objname/hopsy.PyModel.compute_log_likelihood_gradient", "generated/objname/hopsy.PyModel.compute_negative_log_likelihood", "generated/objname/hopsy.PyModel.log_curvature", "generated/objname/hopsy.PyModel.log_density", "generated/objname/hopsy.PyModel.log_gradient", "generated/objname/hopsy.PyProposal.accept_proposal", "generated/objname/hopsy.PyProposal.deepcopy", "generated/objname/hopsy.PyProposal.propose", "generated/objname/hopsy.RandomNumberGenerator.__call__", "generated/objname/hopsy.Rosenbrock.compute_expected_fisher_information", "generated/objname/hopsy.Rosenbrock.compute_log_likelihood_gradient", "generated/objname/hopsy.Rosenbrock.compute_negative_log_likelihood", "generated/objname/hopsy.Rosenbrock.log_curvature", "generated/objname/hopsy.Rosenbrock.log_density", "generated/objname/hopsy.Rosenbrock.log_gradient", "generated/objname/hopsy.Uniform.__call__", "generated/objname/hopsy.UniformCoordinateHitAndRunProposal.accept_proposal", "generated/objname/hopsy.UniformCoordinateHitAndRunProposal.deepcopy", "generated/objname/hopsy.UniformCoordinateHitAndRunProposal.propose", "generated/objname/hopsy.UniformHitAndRunProposal.accept_proposal", "generated/objname/hopsy.UniformHitAndRunProposal.deepcopy", "generated/objname/hopsy.UniformHitAndRunProposal.propose", "index", "notebooks/BenchmarkingMultiphaseMonteCarloSampling", "notebooks/BirkhoffPolytope", "notebooks/Callbacks", "notebooks/CheckIfPolytopeIsEmpty", "notebooks/ConstrainedSampling", "notebooks/EqualityConstraints", "notebooks/MultiphaseMonteCarlo", "notebooks/ParallelTempering", "notebooks/QuickTutorial", "notebooks/SamplingAdvice", "notebooks/TruncatedGaussianProposal", "notebooks/eval_pt_samples", "userguide", "userguide/postprocessing", "userguide/problem", "userguide/sampling", "userguide/tuning", "zreference"], "filenames": ["examples.rst", "firststeps.rst", "firststeps/installation.rst", "firststeps/introduction.rst", "generated/hopsy.AcceptanceRateTarget.rst", "generated/hopsy.AdaptiveMetropolisProposal.rst", "generated/hopsy.BallWalkProposal.rst", "generated/hopsy.CSmMALAProposal.rst", "generated/hopsy.DikinWalkProposal.rst", "generated/hopsy.ExpectedSquaredJumpDistanceTarget.rst", "generated/hopsy.Gaussian.rst", "generated/hopsy.GaussianCoordinateHitAndRunProposal.rst", "generated/hopsy.GaussianHitAndRunProposal.rst", "generated/hopsy.GaussianProposal.rst", "generated/hopsy.MarkovChain.rst", "generated/hopsy.Mixture.rst", "generated/hopsy.Model.rst", "generated/hopsy.Normal.rst", "generated/hopsy.Problem.rst", "generated/hopsy.Proposal.rst", "generated/hopsy.PyModel.rst", "generated/hopsy.PyProposal.rst", "generated/hopsy.PyTuningTarget.rst", "generated/hopsy.RandomNumberGenerator.rst", "generated/hopsy.Rosenbrock.rst", "generated/hopsy.ThompsonSamplingTuning.rst", "generated/hopsy.TuningTarget.rst", "generated/hopsy.Uniform.rst", "generated/hopsy.UniformCoordinateHitAndRunProposal.rst", "generated/hopsy.UniformHitAndRunProposal.rst", "generated/hopsy.add_box_constraints.rst", "generated/hopsy.compute_chebyshev_center.rst", "generated/hopsy.ess.rst", "generated/hopsy.mcse.rst", "generated/hopsy.rhat.rst", "generated/hopsy.round.rst", "generated/hopsy.sample.rst", "generated/hopsy.simplify.rst", "generated/hopsy.tune.rst", "generated/objname/hopsy.AdaptiveMetropolisProposal.accept_proposal.rst", "generated/objname/hopsy.AdaptiveMetropolisProposal.deepcopy.rst", "generated/objname/hopsy.AdaptiveMetropolisProposal.propose.rst", "generated/objname/hopsy.BallWalkProposal.accept_proposal.rst", "generated/objname/hopsy.BallWalkProposal.deepcopy.rst", "generated/objname/hopsy.BallWalkProposal.propose.rst", "generated/objname/hopsy.CSmMALAProposal.accept_proposal.rst", "generated/objname/hopsy.CSmMALAProposal.deepcopy.rst", "generated/objname/hopsy.CSmMALAProposal.propose.rst", "generated/objname/hopsy.DikinWalkProposal.accept_proposal.rst", "generated/objname/hopsy.DikinWalkProposal.deepcopy.rst", "generated/objname/hopsy.DikinWalkProposal.propose.rst", "generated/objname/hopsy.Gaussian.compute_expected_fisher_information.rst", "generated/objname/hopsy.Gaussian.compute_log_likelihood_gradient.rst", "generated/objname/hopsy.Gaussian.compute_negative_log_likelihood.rst", "generated/objname/hopsy.Gaussian.log_curvature.rst", "generated/objname/hopsy.Gaussian.log_density.rst", "generated/objname/hopsy.Gaussian.log_gradient.rst", "generated/objname/hopsy.GaussianCoordinateHitAndRunProposal.accept_proposal.rst", "generated/objname/hopsy.GaussianCoordinateHitAndRunProposal.deepcopy.rst", "generated/objname/hopsy.GaussianCoordinateHitAndRunProposal.propose.rst", "generated/objname/hopsy.GaussianHitAndRunProposal.accept_proposal.rst", "generated/objname/hopsy.GaussianHitAndRunProposal.deepcopy.rst", "generated/objname/hopsy.GaussianHitAndRunProposal.propose.rst", "generated/objname/hopsy.GaussianProposal.accept_proposal.rst", "generated/objname/hopsy.GaussianProposal.deepcopy.rst", "generated/objname/hopsy.GaussianProposal.propose.rst", "generated/objname/hopsy.Mixture.compute_expected_fisher_information.rst", "generated/objname/hopsy.Mixture.compute_log_likelihood_gradient.rst", "generated/objname/hopsy.Mixture.compute_negative_log_likelihood.rst", "generated/objname/hopsy.Mixture.log_curvature.rst", "generated/objname/hopsy.Mixture.log_density.rst", "generated/objname/hopsy.Mixture.log_gradient.rst", "generated/objname/hopsy.Model.compute_expected_fisher_information.rst", "generated/objname/hopsy.Model.compute_log_likelihood_gradient.rst", "generated/objname/hopsy.Model.compute_negative_log_likelihood.rst", "generated/objname/hopsy.Model.log_curvature.rst", "generated/objname/hopsy.Model.log_density.rst", "generated/objname/hopsy.Model.log_gradient.rst", "generated/objname/hopsy.Normal.__call__.rst", "generated/objname/hopsy.Problem.slacks.rst", "generated/objname/hopsy.PyModel.compute_expected_fisher_information.rst", "generated/objname/hopsy.PyModel.compute_log_likelihood_gradient.rst", "generated/objname/hopsy.PyModel.compute_negative_log_likelihood.rst", "generated/objname/hopsy.PyModel.log_curvature.rst", "generated/objname/hopsy.PyModel.log_density.rst", "generated/objname/hopsy.PyModel.log_gradient.rst", "generated/objname/hopsy.PyProposal.accept_proposal.rst", "generated/objname/hopsy.PyProposal.deepcopy.rst", "generated/objname/hopsy.PyProposal.propose.rst", "generated/objname/hopsy.RandomNumberGenerator.__call__.rst", "generated/objname/hopsy.Rosenbrock.compute_expected_fisher_information.rst", "generated/objname/hopsy.Rosenbrock.compute_log_likelihood_gradient.rst", "generated/objname/hopsy.Rosenbrock.compute_negative_log_likelihood.rst", "generated/objname/hopsy.Rosenbrock.log_curvature.rst", "generated/objname/hopsy.Rosenbrock.log_density.rst", "generated/objname/hopsy.Rosenbrock.log_gradient.rst", "generated/objname/hopsy.Uniform.__call__.rst", "generated/objname/hopsy.UniformCoordinateHitAndRunProposal.accept_proposal.rst", "generated/objname/hopsy.UniformCoordinateHitAndRunProposal.deepcopy.rst", "generated/objname/hopsy.UniformCoordinateHitAndRunProposal.propose.rst", "generated/objname/hopsy.UniformHitAndRunProposal.accept_proposal.rst", "generated/objname/hopsy.UniformHitAndRunProposal.deepcopy.rst", "generated/objname/hopsy.UniformHitAndRunProposal.propose.rst", "index.rst", "notebooks/BenchmarkingMultiphaseMonteCarloSampling.ipynb", "notebooks/BirkhoffPolytope.ipynb", "notebooks/Callbacks.ipynb", "notebooks/CheckIfPolytopeIsEmpty.ipynb", "notebooks/ConstrainedSampling.ipynb", "notebooks/EqualityConstraints.ipynb", "notebooks/MultiphaseMonteCarlo.ipynb", "notebooks/ParallelTempering.ipynb", "notebooks/QuickTutorial.ipynb", "notebooks/SamplingAdvice.ipynb", "notebooks/TruncatedGaussianProposal.ipynb", "notebooks/eval_pt_samples.ipynb", "userguide.rst", "userguide/postprocessing.rst", "userguide/problem.rst", "userguide/sampling.rst", "userguide/tuning.rst", "zreference.rst"], "titles": ["Examples", "First Steps", "Installation", "Introduction", "hopsy.AcceptanceRateTarget", "hopsy.AdaptiveMetropolisProposal", "hopsy.BallWalkProposal", "hopsy.CSmMALAProposal", "hopsy.DikinWalkProposal", "hopsy.ExpectedSquaredJumpDistanceTarget", "hopsy.Gaussian", "hopsy.GaussianCoordinateHitAndRunProposal", "hopsy.GaussianHitAndRunProposal", "hopsy.GaussianProposal", "hopsy.MarkovChain", "hopsy.Mixture", "hopsy.Model", "hopsy.Normal", "hopsy.Problem", "hopsy.Proposal", "hopsy.PyModel", "hopsy.PyProposal", "hopsy.PyTuningTarget", "hopsy.RandomNumberGenerator", "hopsy.Rosenbrock", "hopsy.ThompsonSamplingTuning", "hopsy.TuningTarget", "hopsy.Uniform", "hopsy.UniformCoordinateHitAndRunProposal", "hopsy.UniformHitAndRunProposal", "hopsy.add_box_constraints", "hopsy.compute_chebyshev_center", "hopsy.ess", "hopsy.mcse", "hopsy.rhat", "hopsy.round", "hopsy.sample", "hopsy.simplify", "hopsy.tune", "hopsy.AdaptiveMetropolisProposal.accept_proposal", "hopsy.AdaptiveMetropolisProposal.deepcopy", "hopsy.AdaptiveMetropolisProposal.propose", "hopsy.BallWalkProposal.accept_proposal", "hopsy.BallWalkProposal.deepcopy", "hopsy.BallWalkProposal.propose", "hopsy.CSmMALAProposal.accept_proposal", "hopsy.CSmMALAProposal.deepcopy", "hopsy.CSmMALAProposal.propose", "hopsy.DikinWalkProposal.accept_proposal", "hopsy.DikinWalkProposal.deepcopy", "hopsy.DikinWalkProposal.propose", "hopsy.Gaussian.compute_expected_fisher_information", "hopsy.Gaussian.compute_log_likelihood_gradient", "hopsy.Gaussian.compute_negative_log_likelihood", "hopsy.Gaussian.log_curvature", "hopsy.Gaussian.log_density", "hopsy.Gaussian.log_gradient", "hopsy.GaussianCoordinateHitAndRunProposal.accept_proposal", "hopsy.GaussianCoordinateHitAndRunProposal.deepcopy", "hopsy.GaussianCoordinateHitAndRunProposal.propose", "hopsy.GaussianHitAndRunProposal.accept_proposal", "hopsy.GaussianHitAndRunProposal.deepcopy", "hopsy.GaussianHitAndRunProposal.propose", "hopsy.GaussianProposal.accept_proposal", "hopsy.GaussianProposal.deepcopy", "hopsy.GaussianProposal.propose", "hopsy.Mixture.compute_expected_fisher_information", "hopsy.Mixture.compute_log_likelihood_gradient", "hopsy.Mixture.compute_negative_log_likelihood", "hopsy.Mixture.log_curvature", "hopsy.Mixture.log_density", "hopsy.Mixture.log_gradient", "hopsy.Model.compute_expected_fisher_information", "hopsy.Model.compute_log_likelihood_gradient", "hopsy.Model.compute_negative_log_likelihood", "hopsy.Model.log_curvature", "hopsy.Model.log_density", "hopsy.Model.log_gradient", "hopsy.Normal.__call__", "hopsy.Problem.slacks", "hopsy.PyModel.compute_expected_fisher_information", "hopsy.PyModel.compute_log_likelihood_gradient", "hopsy.PyModel.compute_negative_log_likelihood", "hopsy.PyModel.log_curvature", "hopsy.PyModel.log_density", "hopsy.PyModel.log_gradient", "hopsy.PyProposal.accept_proposal", "hopsy.PyProposal.deepcopy", "hopsy.PyProposal.propose", "hopsy.RandomNumberGenerator.__call__", "hopsy.Rosenbrock.compute_expected_fisher_information", "hopsy.Rosenbrock.compute_log_likelihood_gradient", "hopsy.Rosenbrock.compute_negative_log_likelihood", "hopsy.Rosenbrock.log_curvature", "hopsy.Rosenbrock.log_density", "hopsy.Rosenbrock.log_gradient", "hopsy.Uniform.__call__", "hopsy.UniformCoordinateHitAndRunProposal.accept_proposal", "hopsy.UniformCoordinateHitAndRunProposal.deepcopy", "hopsy.UniformCoordinateHitAndRunProposal.propose", "hopsy.UniformHitAndRunProposal.accept_proposal", "hopsy.UniformHitAndRunProposal.deepcopy", "hopsy.UniformHitAndRunProposal.propose", "hopsy - Highly Optimized Polytope Sampling in Python", "Benchmarking Multiphase Monte Carlo Sampling", "Birkhoff polytope", "Callbacks", "Checking polytope feasibility", "Constrained Sampling", "First sample without equality constraints", "Demo for Multiphase Monte Carlo in hopsy", "Parallel Tempering", "A Quick Tutorial", "A Guide to Sampling Your First Model With hopsy", "TMVN Sampling", "&lt;no title&gt;", "User Guide", "Post-Processing", "Problem Description", "Markov Chain Monte Carlo Sampling", "Tuning", "Reference"], "terms": {"A": [0, 1, 24, 30, 31, 35, 79, 103, 104, 105, 106, 108, 109, 110, 111, 114, 118], "guid": [0, 1, 103], "sampl": [0, 1, 3, 14, 32, 33, 34, 37, 105, 106, 107, 111, 112, 115, 116, 118], "your": [0, 1, 2, 72, 73, 75, 77, 103, 111], "first": [0, 36, 37, 103, 116], "model": [0, 1, 10, 15, 20, 51, 52, 53, 54, 55, 56, 66, 67, 68, 69, 70, 71, 80, 81, 82, 83, 84, 85, 103, 104, 105, 106, 107, 111, 112, 114, 119], "With": [0, 1, 103, 111], "hopsi": [0, 1, 2, 3, 104, 105, 106, 107, 108, 109, 111, 112, 114, 116, 118, 119], "constrain": [0, 3, 30, 103, 109], "birkhoff": [0, 103, 104], "polytop": [0, 30, 31, 35, 37, 79, 104, 112, 113, 118, 119], "parallel": [0, 14, 32, 33, 34, 36, 103, 112, 113], "temper": [0, 103], "The": [1, 10, 14, 15, 20, 31, 32, 34, 35, 36, 51, 52, 53, 54, 55, 56, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 90, 91, 92, 93, 94, 95, 104, 105, 108, 111, 112, 113, 118, 119], "contain": [1, 30, 31, 35, 36, 116, 118], "quick": [1, 103], "instal": [1, 103], "an": [1, 10, 103, 104, 111], "introduct": [1, 103], "problem": [1, 14, 30, 31, 35, 37, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119], "solv": [1, 119], "tutori": [1, 103], "can": [2, 10, 14, 30, 36, 72, 73, 75, 77, 103, 104, 106, 108, 111, 113, 118], "easili": [2, 119], "from": [2, 3, 10, 16, 34, 36, 104, 105, 106, 110, 111, 113, 115], "python": [2, 15, 20, 111, 118, 119], "packag": 2, "index": 2, "us": [2, 3, 30, 31, 32, 33, 34, 35, 36, 51, 52, 53, 66, 67, 68, 72, 73, 74, 75, 77, 80, 81, 82, 90, 91, 92, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119], "pip": [2, 103], "altern": [2, 75], "you": [2, 3, 20, 30, 72, 73, 75, 77, 103, 104, 113, 118], "download": 2, "sourc": [2, 103], "code": [2, 103, 111, 113], "our": [2, 103, 104], "github": [2, 32, 33, 34, 103], "repositori": 2, "git": 2, "clone": 2, "http": [2, 24, 32, 33, 34, 104, 106, 110, 118], "com": [2, 106], "modsim": 2, "recurs": 2, "compil": 2, "either": 2, "binari": 2, "wheel": 2, "dep": 2, "standard": [2, 10, 33, 112], "cmake": 2, "routin": 2, "mkdir": 2, "build": [2, 104, 111], "releas": 2, "cd": 2, "make": [2, 116, 119], "note": [2, 31, 32, 34, 51, 52, 53, 54, 55, 56, 79, 113], "howev": [2, 10, 104, 106, 118], "produc": [2, 36, 118], "actual": [2, 36], "dist": 2, "x": [2, 3, 15, 51, 52, 53, 54, 55, 56, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 90, 91, 92, 93, 94, 95, 103, 104, 105, 106, 111, 112, 114, 118, 119], "y": [2, 104, 110, 119], "z": [2, 34], "tag": 2, "whl": 2, "where": [2, 3, 10, 32, 34, 103, 104], "version": 2, "depend": [2, 111, 118], "verison": 2, "environ": [2, 106], "For": [3, 32, 33, 34, 36, 72, 73, 75, 77, 103, 106, 107, 110, 111, 113, 118, 119], "high": [3, 106, 111], "flexibl": [3, 103, 104, 110], "when": [3, 34, 37, 103, 106, 107, 112, 113], "hop": [3, 20, 103, 104, 111, 118, 119], "we": [3, 10, 30, 54, 104, 107, 112, 113, 118, 119], "made": 3, "algorithm": [3, 103, 104, 108, 110, 113, 118, 119], "well": [3, 104, 110, 111, 113], "defin": [3, 10, 31, 35, 36, 37, 69, 104, 111, 113], "likelihood": [3, 52, 53, 67, 68, 73, 91, 92, 113, 118, 119], "consid": [3, 10, 108], "metropoli": [3, 111, 119], "criterion": [3, 32], "alpha": [3, 104, 108, 110, 111, 113, 114, 115], "theta": 3, "min": [3, 36, 104], "big": [3, 10], "1": [3, 10, 15, 30, 31, 32, 33, 34, 36, 51, 52, 53, 54, 55, 56, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 90, 91, 92, 93, 94, 95, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 118, 119], "frac": [3, 32, 34, 104, 108, 119], "pi": [3, 111], "q": 3, "which": [3, 10, 30, 31, 32, 34, 35, 36, 37, 54, 75, 79, 103, 104, 106, 107, 108, 110, 113, 118, 119], "comput": [3, 31, 32, 33, 34, 51, 52, 53, 54, 55, 56, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 79, 106, 111, 113, 118, 119], "accept": [3, 10, 36, 106, 108, 112, 113], "probabl": [3, 32, 52, 53, 55, 56, 67, 68, 70, 71, 108, 111], "move": [3, 108], "gener": [3, 32, 33, 34, 36, 66, 69, 105, 108, 111, 112, 113, 119], "i": [3, 10, 15, 30, 31, 32, 34, 36, 37, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 118, 119], "distribut": [3, 34, 106, 108, 111, 112, 118], "target": [3, 34, 103, 106, 111, 113, 118], "wish": 3, "draw": [3, 32, 36], "In": [3, 32, 33, 34, 104, 106, 108, 110, 112, 113, 118], "assum": [3, 15, 108, 118], "exp": [3, 10, 111, 114], "f": [3, 10, 15, 67, 68, 70, 71, 104, 105, 106, 110, 111], "neg": [3, 53, 68, 92, 113, 118], "log": [3, 52, 53, 67, 68, 69, 70, 71, 73, 91, 92, 93, 111, 113, 118], "have": [3, 30, 34, 36, 51, 52, 53, 54, 55, 56, 79, 106, 108, 111, 112, 113, 118], "provid": [3, 103, 104, 105, 107, 118], "want": [3, 104, 113], "self": [3, 10, 15, 51, 52, 53, 54, 55, 56, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 90, 91, 92, 93, 94, 95, 104, 111, 113], "To": [3, 31, 34], "read": 3, "more": [3, 16, 34, 103, 108, 113, 116, 118], "about": [3, 36, 112, 118], "detail": [3, 16, 116, 118], "how": [3, 16, 104, 110], "custom": [3, 16, 72, 73, 74, 75, 76, 77, 103, 110, 113, 118, 119], "pleas": [3, 103, 106, 118], "refer": [3, 24, 32, 33, 34, 37, 103, 110, 111], "thi": [3, 10, 16, 30, 34, 35, 36, 51, 54, 66, 69, 74, 76, 93, 103, 104, 106, 107, 108, 110, 111, 112, 113, 118, 119], "page": 3, "although": 3, "ship": [3, 118], "numer": 3, "optim": [3, 113, 118, 119], "work": [3, 16, 20, 31, 103, 104, 110, 113, 119], "linearili": [3, 103], "space": [3, 31, 79, 103, 104, 105, 111, 118], "written": 3, "c": [3, 103, 104, 115, 118, 119], "also": [3, 10, 30, 35, 36, 103, 104, 111, 113, 118, 119], "possibl": [3, 104, 111, 118, 119], "class": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 104, 105, 111, 113, 114, 118, 119], "attribut": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 20, 21, 23, 24, 25, 27, 28, 29, 36], "method": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 66, 69, 74, 76, 104, 113, 118], "mean": [10, 30, 32, 33, 104, 106, 108, 111, 112, 113, 114, 118], "0": [10, 32, 33, 34, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 119], "covari": [10, 51, 54, 111], "inact": 10, "invari": [10, 118], "some": [10, 72, 73, 75, 77, 104, 108, 110, 112, 118, 119], "dimens": [10, 24, 30, 37, 51, 52, 53, 54, 55, 56, 106, 108, 110, 118], "input": [10, 51, 52, 53, 54, 55, 56, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 90, 91, 92, 93, 94, 95, 118], "vector": [10, 30, 31, 35, 51, 52, 53, 54, 55, 56, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 90, 91, 92, 93, 94, 95, 113, 118], "As": [10, 104, 119], "exampl": [10, 75, 103, 104, 106, 108, 112, 113], "one": [10, 34, 75, 104, 113], "dimension": [10, 24, 72, 73, 75, 77, 105, 106, 112], "squar": [10, 75, 105], "exponenti": 10, "function": [10, 16, 20, 24, 30, 32, 35, 52, 53, 55, 56, 67, 68, 71, 103, 107, 111, 113, 118, 119], "two": [10, 32, 34, 36, 104, 106, 111], "variabl": 10, "x_1": [10, 112], "x_2": 10, "2": [10, 32, 104, 105, 106, 108, 110, 111, 112, 113, 114], "under": 10, "second": [10, 36, 109], "sai": 10, "compon": [10, 15, 67, 68, 70, 71, 118], "degener": 10, "multivari": [10, 51, 52, 53, 54, 55, 56, 118], "regular": 10, "n": [10, 15, 30, 31, 32, 33, 34, 51, 52, 53, 54, 55, 56, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 104, 105, 108, 111, 112], "k": [10, 32, 51, 52, 53, 54, 55, 56, 108, 114], "ha": [10, 31, 34, 36, 51, 52, 53, 54, 55, 56, 104, 106, 108, 111, 113, 118, 119], "its": [10, 15, 108, 113], "ar": [10, 15, 16, 30, 31, 32, 33, 34, 36, 79, 104, 105, 106, 107, 111, 113, 118, 119], "technic": [10, 111], "realiz": 10, "remov": [10, 30, 37, 106], "row": [10, 30, 72, 73, 75, 77, 105], "column": [10, 104, 105], "matrix": [10, 30, 31, 35, 51, 54, 72, 75, 90, 93, 118], "correspond": [10, 119], "basic": [10, 32], "construct": [10, 14, 104, 111], "unlik": [10, 111], "still": [10, 16, 32, 51, 52, 53, 54, 55, 56, 113], "onli": [10, 31, 32, 33, 34, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114], "pass": [10, 14, 20, 31, 32, 33, 34, 36, 106, 107, 111, 118], "empti": 10, "list": [10, 14, 15, 36, 104], "common": [10, 112, 118], "paramet": [10, 15, 30, 31, 32, 33, 34, 35, 36, 37, 51, 52, 53, 54, 55, 56, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 80, 81, 82, 83, 84, 85, 90, 91, 92, 93, 94, 95, 105, 107, 108, 109, 110, 111, 113, 114], "numpi": [10, 30, 31, 32, 33, 34, 36, 51, 52, 53, 54, 55, 56, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 90, 91, 92, 93, 94, 95, 104, 105, 106, 107, 108, 109, 111, 113, 114, 119], "ndarrai": [10, 30, 31, 32, 33, 34, 36, 51, 52, 53, 54, 55, 56, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 90, 91, 92, 93, 94, 95, 104, 119], "int": [10, 30, 32, 33, 34, 36, 104, 110, 111], "so": [10, 15, 16, 32, 33, 34, 75], "entri": 10, "should": [10, 16, 30, 31, 34, 35, 37, 74, 76, 113, 118, 119], "between": [10, 34], "propos": [14, 16, 36, 72, 73, 75, 77, 103, 106, 108, 111, 112, 113, 114], "gaussianhitandrun": 14, "starting_point": [14, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114], "none": [14, 15, 32, 33, 34, 36, 66, 69, 104, 106, 110, 114, 119], "given": [14, 15, 20, 79, 104, 111, 112], "object": [14, 15, 20, 103, 113, 118], "markov": [14, 33, 36, 103, 104, 108, 111, 112, 113, 116], "chain": [14, 32, 33, 34, 36, 103, 104, 106, 108, 110, 111, 112, 113, 114, 116], "keep": 14, "track": 14, "intern": [14, 119], "state": [14, 36, 104, 107, 108, 111, 112, 118, 119], "select": [14, 32, 33, 34], "mechan": [14, 16], "see": [14, 16, 32, 34, 104, 107, 108], "argument": 14, "sever": 14, "them": [14, 104, 113], "weight": [15, 67, 68, 71, 118], "sum": [15, 67, 68, 71, 105], "unnorm": [15, 52, 53, 55, 56, 67, 68, 70, 71, 73, 77, 91, 92, 94, 95], "densiti": [15, 52, 53, 55, 56, 67, 68, 70, 71, 104, 108, 110, 111, 113, 114, 115], "sum_": [15, 32, 67, 68, 70, 71], "w_i": [15, 67, 68, 70, 71], "f_i": [15, 67, 68, 70, 71], "mai": [15, 30, 118], "arbitrari": [15, 20, 105, 118], "implement": [15, 16, 20, 32, 66, 69, 74, 75, 76, 103, 104, 106, 110, 111, 113, 118, 119], "requir": [15, 16, 20, 31, 37, 74, 76, 106, 107, 119], "pymodel": [15, 118], "": [15, 30, 32, 35, 36, 103, 104, 110, 111, 118, 119], "float": [15, 30, 32, 33, 53, 55, 68, 70, 74, 76, 82, 84, 92, 94, 104, 119], "If": [15, 30, 31, 34, 36, 72, 73, 75, 77, 103, 113], "thei": [15, 16, 107, 113], "all": [15, 16, 30, 34, 36, 104, 108, 111, 113, 119], "base": [16, 103, 104, 111, 113], "while": [16, 104], "inherit": 16, "allow": [20, 103, 104, 111], "interfac": [20, 104, 113, 118], "correctli": 20, "compute_negative_log_likelihood": [20, 111, 113, 114, 118], "compute_log_likelihood_gradi": [20, 118], "compute_expected_fisher_inform": [20, 118], "multi": [24, 111], "2n": [24, 30, 90, 91, 92, 93, 94, 95], "doi": 24, "org": [24, 32, 34, 118], "10": [24, 103, 104, 106, 108, 109, 111, 112, 113, 114], "1162": 24, "evco": 24, "2009": 24, "17": [24, 104], "3": [24, 104, 105, 106, 108, 109, 110, 112, 113, 114], "437": 24, "lower_bound": 30, "_supportsarrai": 30, "dtype": 30, "_nestedsequ": 30, "bool": [30, 31, 32, 36], "complex": 30, "str": [30, 32, 33, 34, 36, 104, 111, 114, 115, 119], "byte": 30, "upper_bound": 30, "simplifi": [30, 107], "true": [30, 31, 104, 106, 107, 110, 111, 113, 114, 115], "add": [30, 107], "box": [30, 108], "constraint": [30, 35, 37, 107, 113], "extend": 30, "b": [30, 31, 35, 79, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 118], "return": [30, 31, 32, 33, 34, 35, 36, 37, 51, 52, 53, 54, 55, 56, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 90, 91, 92, 93, 94, 95, 104, 111, 113, 118, 119], "m": [30, 32, 53, 55, 105, 112], "ad": [30, 107], "naiv": 30, "do": [30, 75, 112, 119], "neither": 30, "check": [30, 104, 113], "whether": [30, 107], "alreadi": [30, 104, 106, 118], "somehow": 30, "bound": 30, "nor": 30, "veri": [30, 108, 111, 112], "same": [30, 104, 108, 111], "exist": [30, 66, 69, 104], "redund": [30, 35, 37], "effici": [30, 37, 103, 104, 111, 113], "polyround": [30, 35, 37, 104, 107, 118], "toolbox": [30, 118], "round": [30, 31, 37, 79, 104, 105, 113, 118], "both": [30, 104], "everi": [30, 32, 33, 34, 36, 113], "lb": 30, "leq": [30, 31, 35, 103, 112, 118], "x_i": 30, "ub": 30, "appropri": 30, "length": 30, "lb_i": 30, "ub_i": 30, "ax": [30, 31, 35, 103, 111, 112, 113, 118], "float64": [30, 31, 72, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 90, 91, 92, 93, 94, 95], "specifi": 30, "lower": 30, "upper": 30, "type": [30, 31, 32, 33, 34, 35, 36, 37, 51, 52, 53, 54, 55, 56, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 90, 91, 92, 93, 94, 95, 104, 113, 118], "original_spac": 31, "fals": [31, 32, 36, 104, 106, 107], "chebyshev": [31, 113], "center": [31, 104, 112], "midpoint": 31, "non": [31, 104, 105, 107, 108, 109, 110, 113, 114, 118], "uniqu": 31, "largest": 31, "inscrib": 31, "ball": 31, "transform": [31, 34, 35, 79, 104], "e": [31, 36, 79, 104, 111, 119], "g": [31, 36, 79, 111, 119], "trigger": 31, "backtransform": 31, "been": [31, 34, 79, 104, 113], "default": [31, 32, 33, 34, 106], "origin": [31, 108, 112], "shift": [31, 35, 104, 118], "store": [31, 35, 106, 119], "data": [32, 33, 34, 106], "seri": [32, 33, 34, 112], "bulk": 32, "rel": [32, 34], "prob": [32, 33], "dask_kwarg": [32, 33, 34], "calcul": [32, 33, 34], "estim": [32, 34], "effect": [32, 34, 37, 108, 111, 113], "size": [32, 36, 105, 113], "mcmc": [32, 33, 34, 36, 106, 111, 112, 113], "shape": [32, 33, 34, 36, 104, 105, 110, 113, 114, 119], "n_chain": [32, 33, 34, 36, 105, 106, 112], "n_draw": [32, 33, 34, 36], "dim": [32, 33, 34, 36, 104, 108, 110, 114], "rang": [32, 33, 34, 104, 105, 106, 108, 110, 111, 112, 113, 115], "valu": [32, 33, 34, 36, 72, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 104, 113], "onc": [32, 33, 34, 111], "whole": [32, 33, 34], "valid": [32, 33, 34], "tail": 32, "option": [32, 33, 36, 107, 119], "quantil": [32, 33], "old": 32, "sd": [32, 33], "median": [32, 33], "mad": 32, "absolut": 32, "devianc": 32, "z_scale": [32, 34], "fold": [32, 34], "ident": [32, 34, 104, 108], "local": 32, "ress": 32, "tupl": [32, 36], "n_proc": [32, 33, 34, 36, 104, 105, 106, 110], "combin": [32, 33, 34, 103, 118], "subprocess": [32, 33, 34, 111], "dict": [32, 33, 34, 36, 104, 106], "dask": [32, 33, 34], "relat": [32, 33, 34], "kwarg": [32, 33, 34], "wrap_xarray_ufunc": [32, 33, 34], "hat": [32, 34, 112], "_": [32, 104, 106, 108, 109, 110, 111, 113, 114], "eff": 32, "n_": [32, 112], "mathit": [32, 104], "diagnost": [32, 34, 103, 104], "mn": 32, "tau": 32, "t": [32, 35, 104, 113, 114], "p": [32, 103, 104, 118, 119], "number": [32, 36, 72, 73, 75, 77, 111, 112, 113, 118], "rho": 32, "_t": 32, "_autocorrel": 32, "lag": 32, "last": [32, 104], "integ": 32, "2k": 32, "posit": [32, 75], "current": [32, 104, 119], "similar": 32, "stan": 32, "geyer": 32, "initi": [32, 34], "monoton": 32, "sequenc": [32, 111], "1992": [32, 34], "2011": 32, "vehtari": [32, 34], "et": [32, 34], "al": [32, 34], "2019": [32, 34], "arxiv": [32, 34], "ab": [32, 34, 104], "1903": [32, 34], "08008": [32, 34], "arviz": [32, 33, 34, 105, 106], "dev": [32, 33, 34], "io": [32, 33, 34], "api": [32, 33, 34, 103, 104, 118], "html": [32, 33, 34], "mc": [32, 105, 108, 109, 111, 113, 114], "doc": [32, 106], "2_18": 32, "manual": 32, "section": [32, 103, 104, 119], "15": [32, 104, 111], "4": [32, 51, 52, 53, 66, 67, 68, 72, 73, 74, 80, 81, 82, 90, 91, 92, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114], "gelman": [32, 34], "bda": [32, 34], "2014": [32, 34], "formula": 32, "11": [32, 104, 105, 107, 108, 109, 110, 111, 113, 114], "8": [32, 104, 106, 111, 113, 114, 115], "error": 33, "statist": [33, 34, 103, 111, 112], "inform": [33, 36, 51, 54, 66, 69, 72, 75, 90, 93, 103], "msce": 33, "dataset": [33, 34], "rank": [34, 111], "normal": [34, 104], "splitr": 34, "set": [34, 37, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119], "trace": 34, "r": [34, 104, 108, 111, 112], "test": [34, 103, 104, 106, 118, 119], "lack": 34, "converg": [34, 72, 73, 75, 77, 104, 105, 111, 112, 113], "compar": [34, 104, 113, 114, 116], "varianc": 34, "multipl": [34, 106, 111], "within": [34, 111], "each": [34, 36, 72, 75, 111], "achiev": [34, 36], "most": [34, 112, 113, 118], "detect": 34, "evid": 34, "nonconverg": 34, "start": [34, 103, 104, 106, 108, 111, 112, 113], "dispers": 34, "recommend": [34, 118], "split": 34, "potenti": [34, 112], "scale": [34, 112], "reduct": [34, 112], "factor": [34, 112], "v": 34, "w": 34, "posterior": [34, 106, 111], "pool": [34, 36, 111], "uniti": 34, "greater": [34, 104], "than": [34, 37, 104], "indic": [34, 112], "yet": 34, "over": [34, 113], "scipi": [34, 105], "stat": 34, "rankdata": 34, "follow": [34, 106, 111, 112], "brook": 34, "1998": 34, "rubin": 34, "inequ": [35, 37, 112, 113, 118], "strip": 35, "unround": [35, 118], "uniformproblem": 35, "Its": [35, 103], "left": 35, "hand": [35, 119], "side": 35, "oper": [35, 104], "right": 35, "math": 35, "markov_chain": [36, 104, 111, 113], "rng": [36, 103, 104, 105, 106, 108, 109, 111, 112, 113, 114], "n_sampl": [36, 103, 104, 105, 106, 109, 111, 112, 113], "thin": [36, 103, 104, 105, 106, 109, 112, 113], "respect": 36, "random": [36, 103, 104, 106, 112], "thu": [36, 108, 118, 119], "len": [36, 104, 108, 110, 114], "match": 36, "markovchain": [36, 103, 104, 105, 106, 108, 109, 111, 112, 113, 114], "simul": [36, 103, 113, 118], "randomnumbergener": [36, 103, 104, 105, 106, 108, 109, 111, 112, 113, 114], "singl": [36, 111], "wa": [36, 118], "must": [36, 111], "discard": 36, "inbetween": 36, "save": [36, 106], "increas": [36, 108], "n_thread": [36, 113], "deprec": [36, 51, 52, 53, 66, 67, 68, 72, 73, 74, 80, 81, 82, 90, 91, 92, 119], "process": [36, 103, 111, 116], "multiprocess": [36, 111], "worker": 36, "record_meta": 36, "string": 36, "acceptance_r": [36, 104, 113], "record": 36, "here": [36, 110, 111, 113], "state_negative_log_likelihood": 36, "in_memori": [36, 106], "flag": 36, "enabl": [36, 111], "disabl": 36, "memori": [36, 106], "metadata": [36, 106], "callback": 36, "deriv": [36, 105], "observ": 36, "dure": [36, 104, 106], "run": [36, 104, 106, 108, 111, 113], "write": [36, 106, 110], "obtain": 36, "onlin": 36, "perman": 36, "storag": [36, 106], "analysi": [36, 103], "hold": 36, "meta": [36, 105, 106], "without": 36, "rate": [36, 106, 108, 112, 113], "found": [36, 103, 104, 111], "becaus": [36, 37, 104, 107, 111, 113], "typo": 36, "Will": 36, "refunct": 37, "equal": [37, 72, 73, 75, 77, 105, 107, 111], "case": [37, 93, 104, 106, 108, 111, 112, 113, 119], "width": 37, "less": [37, 111], "thresh": 37, "lp": [37, 107], "singleton": 37, "simplif": 37, "typic": [37, 69], "step": [37, 103, 113, 114, 116], "befor": [37, 104, 107, 111], "It": [37, 103, 104, 105, 107, 108], "call": [37, 54, 104, 111, 113, 119], "automat": 37, "log_curvatur": [51, 66, 72, 80, 90], "instead": [51, 52, 53, 66, 67, 68, 72, 73, 74, 80, 81, 82, 90, 91, 92, 104, 119], "expect": [51, 54, 66, 69, 72, 90, 93, 108, 113], "fisher": [51, 54, 66, 69, 72, 75, 90, 93], "turn": [51, 54, 106], "out": [51, 54], "just": [51, 54, 72, 73, 75, 77], "reduc": [51, 54, 104], "narrai": [51, 54], "log_gradi": [52, 67, 73, 81, 91], "gradient": [52, 56, 67, 71, 72, 73, 75, 77, 91, 95], "logarithm": [52, 53, 56, 67, 68, 71, 119], "log_dens": [53, 56, 68, 71, 74, 77, 82, 92, 95], "context": 54, "close": [66, 69, 106, 108, 113], "form": [66, 69, 103, 118, 119], "solut": [66, 69], "nabla": [67, 71], "curvatur": [69, 75, 93], "help": [72, 73, 75, 77, 103], "faster": [72, 73, 75, 77, 111], "long": [72, 73, 75, 77, 108, 113], "too": [72, 73, 75, 77, 113], "slow": [72, 73, 75, 77], "fast": [72, 73, 75, 77, 106], "enough": [72, 73, 75, 77, 104], "zero": [72, 73, 75, 77, 104, 106, 108, 109, 114], "correct": [72, 73, 75, 77, 113, 118], "col": [72, 75], "param": [72, 74, 75, 76, 79], "rtype": [72, 74, 75, 76, 79], "ani": [74, 76, 113, 119], "compute_negative_log_likelihod": [74, 82], "semi": 75, "definit": [75, 111], "hessian": 75, "linear": 75, "approxim": [75, 108], "point": [79, 104, 111, 113], "after": [79, 113], "scientif": 103, "tool": 103, "mont": [103, 116], "carlo": [103, 116], "convex": 103, "mathcal": [103, 118], "often": [103, 104, 118], "aris": [103, 105], "bayesian": 103, "metabol": 103, "flux": 103, "built": 103, "pybind11": 103, "power": 103, "goal": 103, "backend": [103, 106], "languag": 103, "whilst": 103, "maintain": 103, "comprehens": 103, "interoper": 103, "other": [103, 111, 113, 114], "librari": 103, "offer": [103, 106], "magnitud": 103, "special": [103, 108, 113], "sampler": [103, 104, 108, 114, 119], "similarili": [103, 119], "besid": 103, "few": [103, 112], "user": 103, "includ": [103, 112], "13": [103, 104], "mathrm": 103, "bioreactor": 103, "kinet": 103, "physic": 103, "sir": 103, "import": [103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "task": 103, "especi": [103, 111], "expens": 103, "evalu": 103, "tune": [103, 113, 116], "hyperparamet": [103, 112], "thompson": 103, "approach": [103, 111], "perform": [103, 104, 113, 119], "differ": [103, 111, 113], "chapter": 103, "encount": [103, 107], "bug": 103, "feel": [103, 113], "free": [103, 113], "open": 103, "issu": [103, 107], "find": 103, "question": 103, "feedback": 103, "regard": 103, "visit": 103, "u": [103, 104, 113], "gitter": 103, "pip3": 103, "matplotlib": [103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115], "pyplot": [103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115], "plt": [103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115], "5": [103, 104, 106, 108, 110, 111, 113, 114, 115], "seed": [103, 104, 105, 106, 108, 110, 111, 112, 113, 114], "42": [103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114], "accrat": [103, 108, 112, 114], "1000": [103, 104, 108, 112, 114], "content": 103, "descript": [103, 116], "post": [103, 116], "research": 104, "interest": [104, 118], "new": [104, 113, 119], "togeth": [104, 118, 119], "art": 104, "framework": 104, "conduct": 104, "comparison": 104, "focu": 104, "scaffold": 104, "o": 104, "show": [104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115], "notebook": [104, 107, 110, 111], "adapt": [104, 113], "plugin": 104, "avail": [104, 119], "multiphasemontecarlo": 104, "ipynb": [104, 110], "short": [104, 110, 111, 113], "report": 104, "strategi": [104, 111], "underli": 104, "idea": [104, 111, 119], "previou": [104, 113], "artifici": 104, "coordin": [104, 113], "hit": [104, 108, 113], "optgp": 104, "stabl": 104, "pubm": 104, "ncbi": 104, "nlm": 104, "nih": 104, "gov": 104, "28158334": 104, "those": [104, 119], "resurrect": 104, "shown": [104, 111], "better": [104, 111], "drop": [104, 106, 110], "dagstuhl": [104, 110], "de": [104, 110], "opu": [104, 110], "volltext": [104, 110], "2021": [104, 110], "13820": [104, 110], "pdf": [104, 110], "lipic": [104, 110], "socg": [104, 110], "21": [104, 110], "np": [104, 105, 106, 107, 108, 109, 111, 113, 114], "time": [104, 105, 108, 111, 112], "yourself": 104, "small": [104, 106], "seamlessi": 104, "integr": 104, "workflow": 104, "overrelax": 104, "ui": 104, "adsab": 104, "harvard": 104, "edu": 104, "2015ijmpc": 104, "2650010d": 104, "abstract": 104, "overrelaxedhitandrunpropos": 104, "def": [104, 111, 113], "__init__": [104, 111], "epsilon": [104, 111], "1e": 104, "direct": 104, "randn": 104, "linalg": [104, 113], "norm": 104, "axi": 104, "inverse_dist": 104, "nan_to_num": 104, "divid": 104, "forward_dist": 104, "max": 104, "backward_dist": 104, "l": 104, "t_1": 104, "sqrt": 104, "uniform": [104, 105, 110], "t_0": 104, "addit": 104, "billiard": 104, "walk": 104, "suggest": [104, 113], "svd_round": 104, "concaten": 104, "n_dim": [104, 110], "n_iter": 104, "stacked_sampl": 104, "vstack": 104, "vh": 104, "svd": 104, "rescal": 104, "mention": 104, "s_ratio": 104, "els": [104, 108, 110, 114], "ones": [104, 111, 114], "rounding_matrix": 104, "transpos": 104, "dot": [104, 111, 114], "diag": 104, "sub_problem": 104, "apply_shift": 104, "apply_transform": 104, "execut": [104, 106], "run_multiphase_sampl": [104, 110], "target_ess": 104, "steps_per_phas": [104, 110], "limit_singular_ratio_valu": 104, "assert": [104, 106, 107, 113], "ess": [104, 105, 106, 110, 111, 113], "iter": [104, 110, 113], "sampling_tim": 104, "last_iteration_did_round": 104, "print": [104, 109, 112, 113, 114], "titer": 104, "internal_polytop": 104, "_sampl": 104, "end": [104, 111, 112], "measur": 104, "ts_ratio": 104, "next": [104, 113], "j": [104, 106, 111], "tess": 104, "100": [104, 110, 111, 114, 115], "back": [104, 105], "full": [104, 105, 118], "back_transform": 104, "run_sampl": 104, "6": [104, 105, 106, 111, 113, 114, 115], "rounded_problem": 104, "generate_polytop": 104, "name": [104, 119], "bp5": 104, "bp": [104, 105, 110], "birkhoffpolytop": [104, 105, 110], "mutable_class": 104, "parameter_nam": 104, "5d": 104, "elif": 104, "e_coli": 104, "original_polytop": 104, "static_class": 104, "parse_sbml_stoichiometri": 104, "stoichiometrypars": 104, "parse_sbml_cobrapi": 104, "extern": 104, "resourc": 104, "e_coli_cor": 104, "xml": 104, "polyroundapi": 104, "simplify_polytop": 104, "transform_polytop": 104, "up": [104, 112, 116], "proposaltyp": 104, "billiardwalkpropos": 104, "chrrt": 104, "uniformcoordinatehitandrunpropos": [104, 105, 114], "ohrr": 104, "problems_to_benchmark": 104, "loop": 104, "ess_t": 104, "problem_select": 104, "item": [104, 114], "tpropos": 104, "reset": [104, 107], "preprocessed_polytop": 104, "problem_nam": 104, "20": [104, 110, 111], "chebi": [104, 110], "compute_chebyshev_cent": [104, 105, 110, 113], "flatten": [104, 106, 111, 114], "rhat": [104, 105, 106, 111, 112, 113], "ttime": 104, "usernam": [104, 105, 107, 108, 109, 110, 113, 114], "academ": [104, 105, 107, 108, 109, 110, 113, 114], "licens": [104, 105, 107, 108, 109, 110, 113, 114], "commerci": [104, 105, 107, 108, 109, 110, 113, 114], "expir": [104, 105, 107, 108, 109, 110, 113, 114], "2023": [104, 105, 107, 108, 109, 110, 113, 114], "30": [104, 105, 107, 108, 109, 110, 113, 114], "3847452299003395": 104, "231": 104, "4835868364245": 104, "627": 104, "6793244654275": 104, "990": 104, "5612889618237": 104, "1583": 104, "2881720652492": 104, "447": 104, "64227280442987": 104, "320": 104, "863": 104, "8258778056024": 104, "640": 104, "1324": 104, "526979068286": 104, "960": 104, "7": [104, 106, 109, 111, 112, 113, 115], "066940654698069": 104, "978791384060571": 104, "822526600431221": 104, "14": [104, 108, 109, 112], "644470085574461": 104, "1280": 104, "18": 104, "35148293619599": 104, "1600": 104, "16": [104, 110, 114], "62222639251434": 104, "1920": 104, "23": 104, "833699742670035": 104, "2240": 104, "41": [104, 109], "20876776311011": 104, "2560": 104, "9": [104, 106, 111, 113], "57": 104, "886912910344414": 104, "2880": 104, "37": 104, "382289849801055": 104, "3200": 104, "62": 104, "344564915244966": 104, "3520": 104, "12": [104, 111, 112, 113], "79": 104, "15850821798082": 104, "3840": 104, "74": 104, "36071172518442": 104, "4160": 104, "95342031751828": 104, "4480": 104, "113": 104, "47926517779857": 104, "4800": 104, "121": 104, "72186371924973": 104, "5120": 104, "3492478009126": 104, "5440": 104, "127": 104, "77424100111836": 104, "5760": 104, "19": 104, "136": 104, "9696137423155": 104, "6080": 104, "144": 104, "16940525794976": 104, "6400": 104, "139": 104, "2192539731686": 104, "6720": 104, "22": 104, "156": 104, "53500273176687": 104, "7040": 104, "175": 104, "14217193906293": 104, "7360": 104, "24": [104, 110], "182": 104, "43273042583925": 104, "7680": 104, "25": [104, 111, 113, 114], "191": 104, "5815328961723": 104, "8000": 104, "26": 104, "210": 104, "41931304680313": 104, "8320": 104, "27": 104, "224": 104, "31970085590208": 104, "8640": 104, "28": 104, "226": 104, "62768566905982": 104, "8960": 104, "29": 104, "237": 104, "75902910720876": 104, "9280": 104, "243": 104, "67493216855976": 104, "9600": 104, "31": 104, "257": 104, "3021980390406": 104, "9920": 104, "32": 104, "273": 104, "8199561717506": 104, "10240": 104, "33": 104, "294": 104, "20112361746465": 104, "10560": 104, "34": [104, 109], "293": 104, "48158227555297": 104, "10880": 104, "35": [104, 109], "300": [104, 108, 113], "45975910082853": 104, "11200": 104, "36": [104, 109], "317": 104, "7535136265973": 104, "11520": 104, "336": 104, "3692862259476": 104, "11840": 104, "38": [104, 109], "331": 104, "9082473463359": 104, "12160": 104, "39": [104, 109, 111, 114], "346": 104, "2916329510095": 104, "12480": 104, "40": 104, "357": 104, "96934334556954": 104, "12800": 104, "363": 104, "54227418015665": 104, "13120": 104, "383": 104, "5858067647125": 104, "13440": 104, "43": [104, 109, 110], "382": 104, "0381927501071": 104, "13760": 104, "44": [104, 110], "401": 104, "5143488947238": 104, "14080": 104, "45": [104, 110], "420": 104, "64939968763684": 104, "14400": 104, "46": 104, "449": 104, "08326901564647": 104, "14720": 104, "47": 104, "452": 104, "80046753169904": 104, "15040": 104, "48": 104, "450": 104, "12839321675506": 104, "15360": 104, "49": 104, "462": 104, "2771927927099": 104, "15680": 104, "50": [104, 113, 114], "461": 104, "9902539847381": 104, "16000": 104, "51": 104, "481": 104, "53977928686703": 104, "16320": 104, "52": 104, "508": 104, "6649066292897": 104, "16640": 104, "53": 104, "504": 104, "20807661962795": 104, "16960": 104, "54": 104, "521": 104, "5147013905246": 104, "17280": 104, "55": 104, "544": 104, "7993417778594": 104, "17600": 104, "56": 104, "535": 104, "5840942302711": 104, "17920": 104, "551": 104, "2635026918439": 104, "18240": 104, "58": 104, "569": 104, "2310737012456": 104, "18560": 104, "59": 104, "588": 104, "0058452604753": 104, "18880": 104, "60": 104, "593": 104, "8488910778029": 104, "19200": 104, "61": 104, "615": 104, "6596139884347": 104, "19520": 104, "635": 104, "4306913517988": 104, "19840": 104, "63": 104, "646": 104, "0405907460345": 104, "20160": 104, "64": 104, "644": 104, "4425753035002": 104, "20480": 104, "65": 104, "8043239236227": 104, "20800": 104, "66": 104, "664": 104, "2919147742286": 104, "21120": 104, "67": 104, "674": 104, "3680356181259": 104, "21440": 104, "68": 104, "680": 104, "3837001518382": 104, "21760": 104, "69": 104, "698": 104, "4208197353897": 104, "22080": 104, "70": 104, "709": 104, "8115678575414": 104, "22400": 104, "71": 104, "722": 104, "2190007599912": 104, "22720": 104, "72": 104, "729": 104, "2378725295657": 104, "23040": 104, "73": 104, "749": 104, "2232824472641": 104, "23360": 104, "750": 104, "6074062950678": 104, "23680": 104, "75": [104, 110], "779": 104, "3189674698466": 104, "24000": 104, "76": 104, "793": 104, "5895044612517": 104, "24320": 104, "77": 104, "788": 104, "1310770304416": 104, "24640": 104, "78": 104, "813": 104, "4174519025988": 104, "24960": 104, "818": 104, "7102630963842": 104, "25280": 104, "80": 104, "825": 104, "1911302157964": 104, "25600": 104, "81": 104, "824": 104, "4797274295319": 104, "25920": 104, "82": 104, "832": 104, "4798666785565": 104, "26240": 104, "83": 104, "834": 104, "0921425432099": 104, "26560": 104, "84": 104, "856": 104, "1355113591557": 104, "26880": 104, "85": 104, "854": 104, "4998018509373": 104, "27200": 104, "86": 104, "870": 104, "6301466142817": 104, "27520": 104, "87": 104, "875": 104, "9356221946373": 104, "27840": 104, "88": 104, "891": 104, "1700748102612": 104, "28160": 104, "89": 104, "903": 104, "7960059093062": 104, "28480": 104, "90": 104, "886": 104, "178835961187": 104, "28800": 104, "91": 104, "867": 104, "117458057039": 104, "29120": 104, "92": 104, "881": 104, "9490684846811": 104, "29440": 104, "93": 104, "890": 104, "5241990028626": 104, "29760": 104, "94": 104, "913": 104, "5607895586063": 104, "30080": 104, "95": [104, 110], "932": 104, "2398882121701": 104, "30400": 104, "96": 104, "951": 104, "138292074147": 104, "30720": 104, "97": 104, "964": 104, "61299347187": 104, "31040": 104, "98": 104, "983": 104, "6391765927045": 104, "31360": 104, "99": 104, "979": 104, "9236321935331": 104, "31680": 104, "1003": 104, "9031482727333": 104, "32000": 104, "0061219415504485": 104, "006207630257062": 104, "0070773467273284": 104, "07052469253540039": 104, "0217652320861816": 104, "2099902629852295": 104, "22450": 104, "12512845066": 104, "1296": 104, "3124379990331": 104, "161": 104, "65937558010646": 104, "963156850679276": 104, "872243577042705": 104, "96780496221293": 104, "133013163411473": 104, "92514821624308": 104, "03213882586069": 104, "480721222145224": 104, "114165738738418": 104, "3472103720655264": 104, "652": 104, "8113104108883": 104, "1462979782508014": 104, "957": 104, "7149285139645": 104, "2013": 104, "7358952432155": 104, "524": 104, "5375595198544": 104, "480": 104, "1188": 104, "850821488119": 104, "269631083291744": 104, "323446416265532": 104, "888495302103292": 104, "1440": 104, "891013536977999": 104, "43496232034734": 104, "2400": 104, "882887827988935": 104, "49037801963015": 104, "3360": 104, "348358594863743": 104, "099764817877734": 104, "4320": 104, "0052664057525": 104, "11942312187279": 104, "5280": 104, "189888275506522": 104, "00693166294697": 104, "6240": 104, "89547451072042": 104, "45378494069976": 104, "7200": 104, "2195031632737": 104, "91470052686886": 104, "8160": 104, "54628640266824": 104, "120": 104, "38209736486483": 104, "9120": 104, "117": 104, "68114663878684": 104, "124": 104, "75070422853102": 104, "10080": 104, "116": 104, "34655760555961": 104, "18592232344665": 104, "11040": 104, "123": 104, "19323837905226": 104, "46386173862024": 104, "12000": 104, "148": 104, "09968539854086": 104, "147": 104, "95311563377672": 104, "12960": 104, "145": 104, "98511902334084": 104, "158": 104, "51895860514378": 104, "13920": 104, "169": 104, "69689177481715": 104, "174": 104, "49127005693168": 104, "14880": 104, "180": 104, "42261318891497": 104, "192": 104, "96616757403754": 104, "15840": 104, "189": 104, "6869567126621": 104, "185": 104, "9907738397535": 104, "16800": 104, "82170148987922": 104, "204": 104, "65635395883973": 104, "17760": 104, "207": 104, "05551739174868": 104, "216": 104, "1649396014175": 104, "18720": 104, "218": 104, "65560668780427": 104, "67365262048054": 104, "19680": 104, "233": 104, "2337269481389": 104, "245": [104, 111, 115], "04918297452195": 104, "20640": 104, "253": 104, "35676743095638": 104, "268": 104, "2333892323007": 104, "21600": 104, "180948810766": 104, "272": 104, "81001761513676": 104, "22560": 104, "916065225228": 104, "42112849368127": 104, "23520": 104, "254": 104, "7582764932103": 104, "258": 104, "4069792053966": 104, "24480": 104, "86342243004873": 104, "284": 104, "17271357899097": 104, "25440": 104, "297": 104, "20253324691765": 104, "302": 104, "52499273424024": 104, "26400": 104, "286": 104, "611087547339": 104, "280": 104, "915655001863": 104, "27360": 104, "288": 104, "3164101913765": 104, "42292722611387": 104, "28320": 104, "310": 104, "9952497255533": 104, "313": 104, "1100359628566": 104, "29280": 104, "289": 104, "67804817589433": 104, "2058222243669": 104, "30240": 104, "40643896165045": 104, "8918695327726": 104, "31200": 104, "312": 104, "2361613765037": 104, "322": 104, "9219106586677": 104, "32160": 104, "323": 104, "7545394540001": 104, "32640": 104, "32520571689747": 104, "33120": 104, "345": 104, "85424928547764": 104, "33600": 104, "358": 104, "3048911770299": 104, "34080": 104, "361": 104, "084743896345": 104, "34560": 104, "365": 104, "47086073740763": 104, "35040": 104, "39780160630573": 104, "35520": 104, "392": 104, "63094158894984": 104, "36000": 104, "398": 104, "9072807479651": 104, "36480": 104, "384": 104, "2964391944638": 104, "36960": 104, "7667317498958": 104, "37440": 104, "391": 104, "4770094651921": 104, "37920": 104, "386": 104, "190724216923": 104, "38400": 104, "85858663180676": 104, "38880": 104, "399": 104, "76548583077005": 104, "39360": 104, "406": 104, "45084635182735": 104, "39840": 104, "414": 104, "13634315764835": 104, "40320": 104, "424": 104, "17051913321086": 104, "40800": 104, "431": 104, "3602734254215": 104, "41280": 104, "422": 104, "556096368053": 104, "41760": 104, "432": 104, "7105172995434": 104, "42240": 104, "442": 104, "42073630007786": 104, "42720": 104, "451": 104, "6280904320013": 104, "43200": 104, "454": 104, "8288496773367": 104, "43680": 104, "459": 104, "7049865712104": 104, "44160": 104, "463": 104, "64262501125734": 104, "44640": 104, "3284616055022": 104, "45120": 104, "458": 104, "5231384856301": 104, "45600": 104, "467": 104, "2708211331568": 104, "46080": 104, "483": 104, "29399688389447": 104, "46560": 104, "489": 104, "9114233381726": 104, "47040": 104, "482": 104, "25565920814455": 104, "47520": 104, "488": 104, "76061956249976": 104, "48000": 104, "101": 104, "501": 104, "2216755056666": 104, "48480": 104, "102": 104, "509": 104, "151199607025": 104, "48960": 104, "103": 104, "512": 104, "2207523382951": 104, "49440": 104, "104": 104, "522": 104, "8707944154959": 104, "49920": 104, "105": 104, "530": 104, "9119480393842": 104, "50400": 104, "106": 104, "534": 104, "6566181063171": 104, "50880": 104, "107": 104, "537": 104, "3787114531068": 104, "51360": 104, "108": 104, "549": 104, "4299895513893": 104, "51840": 104, "109": 104, "545": 104, "6206413795908": 104, "52320": 104, "110": 104, "554": 104, "906174875836": 104, "52800": 104, "111": 104, "573": 104, "7119220600656": 104, "53280": 104, "112": 104, "4093051480813": 104, "53760": 104, "582": 104, "5343562401797": 104, "54240": 104, "114": 104, "592": 104, "634209761512": 104, "54720": 104, "115": 104, "601": 104, "744572032569": 104, "55200": 104, "605": 104, "1492755287037": 104, "55680": 104, "609": 104, "6353624312007": 104, "56160": 104, "118": 104, "613": 104, "5433468342083": 104, "56640": 104, "119": 104, "612": 104, "6171354877015": 104, "57120": 104, "618": 104, "69924574814": 104, "57600": 104, "628": 104, "4239828653435": 104, "58080": 104, "122": 104, "639": 104, "0665758373954": 104, "58560": 104, "8951662610747": 104, "59040": 104, "658": 104, "5648101217669": 104, "59520": 104, "125": 104, "672": 104, "2232482053716": 104, "60000": 104, "126": 104, "692": 104, "9192879813564": 104, "60480": 104, "701": 104, "1431658990771": 104, "60960": 104, "128": 104, "702": 104, "7340761365899": 104, "61440": 104, "129": 104, "707": 104, "3541719676651": 104, "61920": 104, "130": 104, "0297752389649": 104, "62400": 104, "131": 104, "706": 104, "8995244779946": 104, "62880": 104, "132": 104, "4908108847167": 104, "63360": 104, "133": 104, "689": 104, "3472197901951": 104, "63840": 104, "134": 104, "703": 104, "0003376779357": 104, "64320": 104, "135": 104, "708": 104, "2335934188095": 104, "64800": 104, "725": 104, "1838266734792": 104, "65280": 104, "137": 104, "735": 104, "3205579025181": 104, "65760": 104, "138": 104, "737": 104, "0318459845154": 104, "66240": 104, "754": 104, "6120288318377": 104, "66720": 104, "140": 104, "599634946338": 104, "67200": 104, "141": 104, "752": 104, "9040639999432": 104, "67680": 104, "142": 104, "766": 104, "2687113077193": 104, "68160": 104, "143": 104, "781": 104, "7276660620391": 104, "68640": 104, "790": 104, "6849726861673": 104, "69120": 104, "795": 104, "7596388427546": 104, "69600": 104, "146": 104, "799": 104, "5584972022341": 104, "70080": 104, "798": 104, "8247767068805": 104, "70560": 104, "797": 104, "1372057741078": 104, "71040": 104, "149": 104, "794": 104, "4879887657187": 104, "71520": 104, "150": 104, "4262537658255": 104, "72000": 104, "151": 104, "821": 104, "3439821865887": 104, "72480": 104, "152": 104, "836": 104, "785381934779": 104, "72960": 104, "153": 104, "833": 104, "192533643803": 104, "73440": 104, "154": 104, "2367310967214": 104, "73920": 104, "155": 104, "027337432633": 104, "74400": 104, "847": 104, "6213170291394": 104, "74880": 104, "157": 104, "883": 104, "55387018975": 104, "75360": 104, "888": 104, "4084908886016": 104, "75840": 104, "159": 104, "878": 104, "3560544642794": 104, "76320": 104, "160": 104, "8099320680594": 104, "76800": 104, "865": 104, "3342989956125": 104, "77280": 104, "162": 104, "868": 104, "7924805999716": 104, "77760": 104, "163": 104, "879": 104, "929282710091": 104, "78240": 104, "164": 104, "2971775291669": 104, "78720": 104, "165": 104, "906": 104, "4353233136444": 104, "79200": 104, "166": 104, "889": 104, "0828926155659": 104, "79680": 104, "167": 104, "873": 104, "9690238366554": 104, "80160": 104, "168": 104, "877": 104, "7212806671587": 104, "80640": 104, "894": 104, "2714684714002": 104, "81120": 104, "170": 104, "904": 104, "8308346920122": 104, "81600": 104, "171": 104, "912": 104, "2855347087361": 104, "82080": 104, "172": 104, "909": 104, "33882150071": 104, "82560": 104, "173": 104, "897": 104, "4864706687231": 104, "83040": 104, "899": 104, "1382480787717": 104, "83520": 104, "4533159265078": 104, "84000": 104, "176": 104, "910": 104, "0445241340408": 104, "84480": 104, "177": 104, "922": 104, "005723922873": 104, "84960": 104, "178": 104, "928": 104, "7932859860817": 104, "85440": 104, "179": 104, "908": 104, "783058613329": 104, "85920": 104, "895": 104, "3797915865479": 104, "86400": 104, "181": 104, "859": 104, "4890207031966": 104, "86880": 104, "845": 104, "2343124097703": 104, "87360": 104, "183": 104, "839": 104, "1122789551176": 104, "87840": 104, "184": 104, "844": 104, "7127039219682": 104, "88320": 104, "846": 104, "3151169334295": 104, "88800": 104, "186": 104, "842": 104, "6175583860781": 104, "89280": 104, "187": 104, "5348864903817": 104, "89760": 104, "188": 104, "649272511435": 104, "90240": 104, "850": 104, "4409680273976": 104, "90720": 104, "190": 104, "5363180594184": 104, "91200": 104, "864": 104, "6976297034453": 104, "91680": 104, "1598273380728": 104, "92160": 104, "193": 104, "8863528631218": 104, "92640": 104, "194": 104, "880": [104, 106], "6299643478253": 104, "93120": 104, "195": 104, "887": 104, "41821530269": 104, "93600": 104, "196": 104, "893": 104, "1249868133013": 104, "94080": 104, "197": 104, "896": 104, "4293587625341": 104, "94560": 104, "198": 104, "194064688584": 104, "95040": 104, "199": 104, "901": 104, "6836008572618": 104, "95520": 104, "200": 104, "905": 104, "9720995421688": 104, "96000": 104, "201": 104, "915": 104, "0415219542131": 104, "96480": 104, "202": 104, "8491612710968": 104, "96960": 104, "203": 104, "5235691609382": 104, "97440": 104, "066821525769": 104, "97920": 104, "205": 104, "6897456054767": 104, "98400": 104, "206": 104, "5696263301422": 104, "98880": 104, "1574968563857": 104, "99360": 104, "208": 104, "914": 104, "8511270258749": 104, "99840": 104, "209": 104, "919": 104, "2598470161788": 104, "100320": 104, "931": 104, "6724515215465": 104, "100800": 104, "211": 104, "938": 104, "2402200850552": 104, "101280": 104, "212": 104, "943": 104, "4875208804775": 104, "101760": 104, "213": 104, "949": 104, "8135147561189": 104, "102240": 104, "214": 104, "955": 104, "7309221867911": 104, "102720": 104, "215": 104, "970": 104, "4592801029347": 104, "103200": 104, "974": 104, "074172962726": 104, "103680": 104, "217": 104, "1099965408358": 104, "104160": 104, "973": 104, "4666570148554": 104, "104640": 104, "219": 104, "7461092409185": 104, "105120": 104, "220": 104, "988": 104, "1624730606339": 104, "105600": 104, "221": 104, "986": 104, "9052574352414": 104, "106080": 104, "222": 104, "65235118233": 104, "106560": 104, "223": 104, "987": 104, "6559013720048": 104, "107040": 104, "992": 104, "0311000409187": 104, "107520": 104, "225": 104, "984": 104, "9431648604796": 104, "108000": 104, "980": 104, "0972109888816": 104, "108480": 104, "227": 104, "1343984234693": 104, "108960": 104, "228": 104, "3988313773265": 104, "109440": 104, "229": 104, "7939674138657": 104, "109920": 104, "230": 104, "997": 104, "9588361482485": 104, "110400": 104, "1004": 104, "1998163525403": 104, "110880": 104, "0024606528800506": 104, "010601159852741": 104, "0063622147724012": 104, "5347769260406494": 104, "9749472141265869": 104, "83063769340515": 104, "1312": 104, "0707387999137": 104, "1219": 104, "400193428071": 104, "63880606756764": 104, "title_f": [104, 110], "label_f": [104, 110], "tick_f": [104, 110], "legend_f": [104, 110], "img_format": [104, 110], "times_to_plot": 104, "ess_t_to_plot": 104, "restructur": 104, "easier": 104, "plot": [104, 105, 106, 108, 111, 112, 114], "figur": [104, 108, 109, 110, 113, 114, 115], "figsiz": [104, 110, 111, 112, 114], "titl": [104, 109, 110, 113], "runtim": [104, 110], "fontsiz": [104, 110, 112], "x_tick": 104, "x_axi": 104, "arang": [104, 114], "bar": 104, "hatch": 104, "label": [104, 108, 110, 111, 112, 113, 114, 115], "ylabel": [104, 108, 113], "xlabel": [104, 108, 113], "xtick": [104, 110], "ytick": [104, 110], "tight_layout": [104, 110, 111], "legend": [104, 108, 111, 112, 113, 114, 115], "savefig": 104, "benchmarkruntimeresult": 104, "benchmarkperformanceresult": 104, "doe": [104, 113], "against": 104, "modern": 104, "furthermor": 104, "dependend": 104, "main": 104, "script": 104, "much": 104, "quickli": [104, 106, 108], "fair": 104, "novel": 104, "access": 104, "via": 104, "kei": [104, 111], "n_col": [104, 110], "n_row": [104, 110], "subplot": [104, 110, 111, 112], "suptitl": [104, 110], "margin": [104, 106, 110], "bin": [104, 110, 111, 113, 114, 115], "hist": [104, 109, 110, 111, 113, 114, 115], "color": [104, 108, 112], "c0": 104, "c1": 104, "c2": 104, "figlegend": [104, 110], "rect": [104, 110], "03": [104, 110], "popular": [105, 118], "structur": 105, "mathemat": 105, "matric": 105, "whose": 105, "conveni": [105, 106, 110, 113], "verifi": 105, "5000": [105, 114], "stream": [105, 106, 112], "arrai": [105, 106, 107, 108, 109, 111, 113, 114], "00034304": 105, "00039326": 105, "00091834": 105, "00156559": 105, "5256": 105, "24117096": 105, "5350": 105, "23984171": 105, "4018": 105, "57055206": 105, "4524": 105, "92053992": 105, "convert": 105, "samples_ful": 105, "convert_to_full_spac": 105, "reshap": [105, 111, 113], "plot_pair": [105, 106], "convert_to_inference_data": 105, "size_squar": 105, "By": [106, 111], "usual": [106, 112], "fine": 106, "larg": [106, 111], "lot": 106, "becom": 106, "therefor": 106, "off": 106, "mcbackend": 106, "like": [106, 111], "databas": 106, "clickhouse_driv": 106, "hagelkorn": 106, "perfect": 106, "fly": 106, "directli": [106, 107], "order": [106, 113, 118], "server": 106, "purpos": [106, 107], "command": [106, 111], "curl": 106, "sh": 106, "block": 106, "port": 106, "8123": 106, "9000": 106, "caution": 106, "wai": [106, 107, 111], "product": 106, "robust": 106, "establish": 106, "connect": 106, "creat": [106, 109, 112, 113], "Then": 106, "db_host": 106, "localhost": 106, "db_pass": 106, "db_port": 106, "db_kwarg": 106, "host": 106, "password": 106, "client_main": 106, "client": 106, "db_name": 106, "testing_": 106, "client_sampl": 106, "clickhousebackend": 106, "mcbackendcallback": 106, "id": 106, "6y5dh7": 106, "simpl": [106, 107, 108, 113, 118], "gaussian": [106, 108, 111, 112, 113, 114, 118], "notic": [106, 111], "500": 106, "gaussianpropos": [106, 108, 112, 114], "stepsiz": [106, 111, 112, 113, 119], "result": [106, 111], "due": 106, "retriev": 106, "chain_idx": [106, 111], "get_run": 106, "run_id": 106, "get_chain": 106, "chain_metadata": 106, "get_draw": 106, "variable_": 106, "append": [106, 115], "sample_stat": 106, "00624689": 106, "00092455": 106, "00055598": 106, "860": 106, "58608515": 106, "803": 106, "39300557": 106, "30937015": 106, "dict_to_dataset": 106, "kind": 106, "kde": 106, "disconnect": 106, "empty_a": 107, "empty_b": 107, "empty_problem": 107, "is_polytope_empti": 107, "is_problem_polytope_empti": 107, "valid_a": 107, "valid_b": 107, "valid_problem": 107, "invalid_equality_constraint_matrix": 107, "invalid_equality_bound": 107, "There": 107, "add_equality_constraint": [107, 109], "rais": 107, "valueerror": 107, "manipul": 107, "try": [107, 113], "invalid_problem": 107, "a_eq": [107, 109], "b_eq": [107, 109], "except": 107, "infeas": [107, 119], "solver": 107, "statu": 107, "illustr": [108, 111], "1e5": 108, "d": [108, 119], "classic": 108, "isotrop": 108, "locat": 108, "outsid": [108, 119], "region": 108, "li": 108, "insid": 108, "geometr": 108, "easi": [108, 111], "vanish": 108, "henc": 108, "leav": 108, "stuck": 108, "precis": 108, "remain": 108, "contrast": [108, 110], "never": 108, "seen": 108, "monitor": 108, "lambda": [108, 111, 114], "add_box_constraint": [108, 113, 114], "1e3": [108, 113], "gaussianhitandrunpropos": [108, 114], "enumer": [108, 114], "001": [108, 114], "analyt": 108, "dpi": [108, 113], "linestyl": [108, 112], "dash": [108, 112], "grai": [108, 112], "3d": 109, "20000": 109, "26653144": 109, "11889648": 109, "17080836": 109, "9418255": 109, "33957506": 109, "98207648": 109, "80278535": 109, "47749555": 109, "12280485": 109, "8399288": 109, "11007866": 109, "90024278": 109, "88967784": 109, "61249626": 109, "00471622": 109, "87693032": 109, "54067729": 109, "94710096": 109, "constrained_rectangl": 109, "constrained_sampl": 109, "benchmarkingmultiphasemontecarlosampl": 110, "demonstr": 110, "preimplement": 110, "variant": 110, "everydai": 110, "techniqu": 111, "improv": 111, "modal": 111, "core": [111, 114, 119], "prior": 111, "difficult": 111, "pi_0": 111, "temperatur": 111, "beta": 111, "pi_": 111, "cdot": [111, 112], "cold": 111, "hot": 111, "ascend": 111, "beta_0": 111, "beta_1": 111, "beta_n": 111, "theses": 111, "hast": 111, "simpler": 111, "properti": [111, 113], "hotter": 111, "explor": 111, "mixtur": [111, 118], "distinct": 111, "mode": 111, "vanilla": 111, "troubl": 111, "captur": 111, "broadli": 111, "colder": 111, "ipyparallel": 111, "ipp": 111, "file": 111, "later": 111, "mpi": 111, "commun": 111, "synchron": 111, "exchang": 111, "reason": 111, "replica": 111, "below": 111, "run_tempered_chain": 111, "mpi4pi": 111, "gaussianmixtur": 111, "mu1": 111, "mu2": 111, "05": [111, 112], "cov": [111, 113], "ey": 111, "model1": 111, "model2": 111, "comm": 111, "comm_world": 111, "get_rank": 111, "syncrng": 111, "gaussiancoordinatehitandrunpropos": [111, 113], "paralleltemperingsyncrng": 111, "exchangeattemptprob": 111, "acc_rat": 111, "would": 111, "place": 111, "invok": 111, "mpiexec": 111, "line": 111, "n_temp": 111, "cluster": 111, "engin": 111, "rc": 111, "view": [111, 116], "broadcast_view": 111, "apply_sync": 111, "sort": 111, "hard": 111, "debug": 111, "good": [111, 112], "instanc": 111, "lt": [111, 113, 114], "launcher": 111, "mpienginesetlaunch": 111, "gt": [111, 113, 114], "00": 111, "09": 111, "stop": 111, "1686395190": 111, "exit_cod": 111, "pid": 111, "15143": 111, "identifi": [111, 118], "ipengin": 111, "1686395189": 111, "mxy1": 111, "13460": 111, "control": 111, "15084": 111, "ipcontrol": 111, "simpli": 111, "done": 111, "modul": 111, "spawn": 111, "550000": 111, "n_replica": 111, "starmap": 111, "1686395200": 111, "assembl": 111, "00129537": 111, "00123599": 111, "2691": 111, "51743799": 111, "2614": 111, "77034169": 111, "seem": 111, "fig": [111, 112], "sharei": 111, "set_titl": 111, "beta_": 111, "truncat": 112, "restrict": 112, "simplex": [112, 113], "begin": 112, "pmatrix": 112, "vdot": 112, "x_n": 112, "mathbb": 112, "sinc": 112, "worri": [112, 113], "further": [112, 118], "adjust": 112, "being": 112, "deviat": 112, "now": 112, "fun": 112, "assess": 112, "per": [112, 113], "1010": 112, "threshold": 112, "set_xlabel": 112, "set_ylabel": 112, "2878": 112, "2892": 112, "2938": 112, "2862": 112, "chrr": 113, "cheap": 113, "overli": 113, "sensit": 113, "won": 113, "custommodel": 113, "determin": 113, "domain": [113, 118], "NOT": 113, "inheret": 113, "anyth": 113, "accord": 113, "dummi": 113, "mu": 113, "inv": 113, "mandatori": 113, "put": 113, "2d": 113, "intial": 113, "__main__": 113, "0x7f09d89bdae0": 113, "preprocess": 113, "computation": 113, "influenc": 113, "strong": 113, "contact": 113, "abl": 113, "give": 113, "concret": 113, "advic": 113, "need": [113, 119], "gain": 113, "centr": 113, "could": 113, "even": 113, "take": 113, "care": 113, "tuning_target": 113, "acceptanceratetarget": 113, "thompsonsamplingtun": 113, "tuning_posterior": 113, "thread": 113, "Of": 113, "cours": 113, "vari": 113, "cpu": 113, "10000": 113, "rather": 113, "what": 113, "were": 113, "23018200000000003": 113, "230638": 113, "22964800000000005": 113, "231132": 113, "reach": 113, "strict": 113, "limit": 113, "01": 113, "400": 113, "minimum": 113, "00004714": 113, "9999576": 113, "35364": 113, "96731354": 113, "37847": 113, "86539577": 113, "count": 113, "truncatedgaussianpropos": 114, "csmmalapropos": 114, "billiardmalapropos": 114, "dikinwalkpropos": 114, "250_000": 114, "scatter": 114, "histtyp": 114, "stepfil": 114, "std": 114, "ddof": 114, "theori": 114, "003717328432895571": 114, "9993054829707392": 114, "0007920047053880569": 114, "9989467812622056": 114, "00407619332020888": 114, "9984964219897617": 114, "004213253764616939": 114, "9990148075099534": 114, "0035644886495046573": 114, "0030206724358808": 114, "panda": 115, "pd": 115, "num_chain": 115, "read_csv": 115, "test_data": 115, "samples_": 115, "csv": 115, "x0": 115, "part": 116, "known": 118, "ignor": 118, "rosenbrock": 118, "banana": 118, "least": 118, "aim": [118, 119], "might": [118, 119], "necessari": [118, 119], "signatur": 118, "consist": 118, "mainli": 118, "desir": [118, 119], "appli": 118, "precondit": 118, "untransform": 118, "lie": [118, 119], "xyz": 118, "pypi": 118, "project": 118, "particulari": 119, "design": 119, "develop": 119, "usabl": 119, "practition": 119, "filter": 119, "believ": 119, "sake": 119, "itself": 119, "nevertheless": 119, "rapid": 119, "prototyp": 119, "promis": 119, "instruct": 119, "ultim": 119, "wrap": 119, "pypropos": 119, "deleg": 119, "obvious": 119, "AND": 119, "TO": 119, "BE": 119, "rewritten": 119, "accept_propos": 119, "calculate_log_acceptance_prob": 119, "symmetr": 119, "infti": 119, "get_stat": 119, "set_stat": 119, "new_stat": 119, "get_propos": 119, "get_steps": 119, "set_steps": 119, "new_steps": 119, "get": 119, "get_nam": 119}, "objects": {"hopsy": [[4, 0, 1, "", "AcceptanceRateTarget"], [5, 0, 1, "", "AdaptiveMetropolisProposal"], [6, 0, 1, "", "BallWalkProposal"], [7, 0, 1, "", "CSmMALAProposal"], [8, 0, 1, "", "DikinWalkProposal"], [9, 0, 1, "", "ExpectedSquaredJumpDistanceTarget"], [10, 0, 1, "", "Gaussian"], [11, 0, 1, "", "GaussianCoordinateHitAndRunProposal"], [12, 0, 1, "", "GaussianHitAndRunProposal"], [13, 0, 1, "", "GaussianProposal"], [14, 0, 1, "", "MarkovChain"], [15, 0, 1, "", "Mixture"], [16, 0, 1, "", "Model"], [17, 0, 1, "", "Normal"], [18, 0, 1, "", "Problem"], [19, 0, 1, "", "Proposal"], [20, 0, 1, "", "PyModel"], [21, 0, 1, "", "PyProposal"], [22, 0, 1, "", "PyTuningTarget"], [23, 0, 1, "", "RandomNumberGenerator"], [24, 0, 1, "", "Rosenbrock"], [25, 0, 1, "", "ThompsonSamplingTuning"], [26, 0, 1, "", "TuningTarget"], [27, 0, 1, "", "Uniform"], [28, 0, 1, "", "UniformCoordinateHitAndRunProposal"], [29, 0, 1, "", "UniformHitAndRunProposal"], [30, 0, 1, "", "add_box_constraints"], [31, 0, 1, "", "compute_chebyshev_center"], [32, 0, 1, "", "ess"], [33, 0, 1, "", "mcse"], [34, 0, 1, "", "rhat"], [35, 0, 1, "", "round"], [36, 0, 1, "", "sample"], [37, 0, 1, "", "simplify"], [38, 0, 1, "", "tune"]], "hopsy.AdaptiveMetropolisProposal": [[39, 1, 1, "", "accept_proposal"], [40, 1, 1, "", "deepcopy"], [41, 1, 1, "", "propose"]], "hopsy.BallWalkProposal": [[42, 1, 1, "", "accept_proposal"], [43, 1, 1, "", "deepcopy"], [44, 1, 1, "", "propose"]], "hopsy.CSmMALAProposal": [[45, 1, 1, "", "accept_proposal"], [46, 1, 1, "", "deepcopy"], [47, 1, 1, "", "propose"]], "hopsy.DikinWalkProposal": [[48, 1, 1, "", "accept_proposal"], [49, 1, 1, "", "deepcopy"], [50, 1, 1, "", "propose"]], "hopsy.Gaussian": [[51, 1, 1, "", "compute_expected_fisher_information"], [52, 1, 1, "", "compute_log_likelihood_gradient"], [53, 1, 1, "", "compute_negative_log_likelihood"], [54, 1, 1, "", "log_curvature"], [55, 1, 1, "", "log_density"], [56, 1, 1, "", "log_gradient"]], "hopsy.GaussianCoordinateHitAndRunProposal": [[57, 1, 1, "", "accept_proposal"], [58, 1, 1, "", "deepcopy"], [59, 1, 1, "", "propose"]], "hopsy.GaussianHitAndRunProposal": [[60, 1, 1, "", "accept_proposal"], [61, 1, 1, "", "deepcopy"], [62, 1, 1, "", "propose"]], "hopsy.GaussianProposal": [[63, 1, 1, "", "accept_proposal"], [64, 1, 1, "", "deepcopy"], [65, 1, 1, "", "propose"]], "hopsy.Mixture": [[66, 1, 1, "", "compute_expected_fisher_information"], [67, 1, 1, "", "compute_log_likelihood_gradient"], [68, 1, 1, "", "compute_negative_log_likelihood"], [69, 1, 1, "", "log_curvature"], [70, 1, 1, "", "log_density"], [71, 1, 1, "", "log_gradient"]], "hopsy.Model": [[72, 1, 1, "", "compute_expected_fisher_information"], [73, 1, 1, "", "compute_log_likelihood_gradient"], [74, 1, 1, "", "compute_negative_log_likelihood"], [75, 1, 1, "", "log_curvature"], [76, 1, 1, "", "log_density"], [77, 1, 1, "", "log_gradient"]], "hopsy.Normal": [[78, 1, 1, "", "__call__"]], "hopsy.Problem": [[79, 1, 1, "", "slacks"]], "hopsy.PyModel": [[80, 1, 1, "", "compute_expected_fisher_information"], [81, 1, 1, "", "compute_log_likelihood_gradient"], [82, 1, 1, "", "compute_negative_log_likelihood"], [83, 1, 1, "", "log_curvature"], [84, 1, 1, "", "log_density"], [85, 1, 1, "", "log_gradient"]], "hopsy.PyProposal": [[86, 1, 1, "", "accept_proposal"], [87, 1, 1, "", "deepcopy"], [88, 1, 1, "", "propose"]], "hopsy.RandomNumberGenerator": [[89, 1, 1, "", "__call__"]], "hopsy.Rosenbrock": [[90, 1, 1, "", "compute_expected_fisher_information"], [91, 1, 1, "", "compute_log_likelihood_gradient"], [92, 1, 1, "", "compute_negative_log_likelihood"], [93, 1, 1, "", "log_curvature"], [94, 1, 1, "", "log_density"], [95, 1, 1, "", "log_gradient"]], "hopsy.Uniform": [[96, 1, 1, "", "__call__"]], "hopsy.UniformCoordinateHitAndRunProposal": [[97, 1, 1, "", "accept_proposal"], [98, 1, 1, "", "deepcopy"], [99, 1, 1, "", "propose"]], "hopsy.UniformHitAndRunProposal": [[100, 1, 1, "", "accept_proposal"], [101, 1, 1, "", "deepcopy"], [102, 1, 1, "", "propose"]]}, "objtypes": {"0": "py:class", "1": "py:method"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"]}, "titleterms": {"exampl": [0, 107, 119], "first": [1, 109, 113], "step": 1, "instal": 2, "introduct": 3, "python": [3, 103], "implement": 3, "propos": [3, 19, 41, 44, 47, 50, 59, 62, 65, 88, 99, 102, 104, 119, 121], "model": [3, 16, 72, 73, 74, 75, 76, 77, 113, 118, 121], "hopsi": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 110, 113], "acceptanceratetarget": 4, "adaptivemetropolispropos": [5, 39, 40, 41], "ballwalkpropos": [6, 42, 43, 44], "csmmalapropos": [7, 45, 46, 47], "dikinwalkpropos": [8, 48, 49, 50], "expectedsquaredjumpdistancetarget": 9, "gaussian": [10, 51, 52, 53, 54, 55, 56], "gaussiancoordinatehitandrunpropos": [11, 57, 58, 59], "gaussianhitandrunpropos": [12, 60, 61, 62], "gaussianpropos": [13, 63, 64, 65], "markovchain": 14, "mixtur": [15, 66, 67, 68, 69, 70, 71], "normal": [17, 78], "problem": [18, 79, 110, 118, 121], "pymodel": [20, 80, 81, 82, 83, 84, 85], "pypropos": [21, 86, 87, 88], "pytuningtarget": 22, "randomnumbergener": [23, 89], "rosenbrock": [24, 90, 91, 92, 93, 94, 95], "thompsonsamplingtun": 25, "tuningtarget": 26, "uniform": [27, 96], "uniformcoordinatehitandrunpropos": [28, 97, 98, 99], "uniformhitandrunpropos": [29, 100, 101, 102], "add_box_constraint": 30, "compute_chebyshev_cent": 31, "ess": 32, "mcse": 33, "rhat": 34, "round": 35, "sampl": [36, 103, 104, 108, 109, 110, 113, 114, 119], "simplifi": 37, "tune": [38, 120, 121], "accept_propos": [39, 42, 45, 48, 57, 60, 63, 86, 97, 100], "deepcopi": [40, 43, 46, 49, 58, 61, 64, 87, 98, 101], "compute_expected_fisher_inform": [51, 66, 72, 80, 90], "compute_log_likelihood_gradi": [52, 67, 73, 81, 91], "compute_negative_log_likelihood": [53, 68, 74, 82, 92], "log_curvatur": [54, 69, 75, 83, 93], "log_dens": [55, 70, 76, 84, 94], "log_gradi": [56, 71, 77, 85, 95], "__call__": [78, 89, 96], "slack": 79, "highli": 103, "optim": 103, "polytop": [103, 105, 107], "further": 103, "resourc": 103, "benchmark": 104, "multiphas": [104, 110], "mont": [104, 110, 119], "carlo": [104, 110, 119], "motiv": 104, "preimplement": 104, "background": 104, "custom": 104, "more": 104, "complex": 104, "scheme": 104, "helper": 104, "function": 104, "paramet": 104, "visual": [104, 110], "result": 104, "conclus": 104, "appendix": 104, "birkhoff": 105, "callback": 106, "set": 106, "up": 106, "clickhous": 106, "check": 107, "feasibl": 107, "1": 107, "empti": 107, "x": 107, "2": [107, 109], "valid": 107, "0": 107, "3": 107, "invalid": 107, "5": [107, 109], "constrain": 108, "without": 109, "equal": 109, "constraint": 109, "now": 109, "rectangl": 109, "2d": 109, "fix": 109, "third": 109, "dimens": 109, "demo": 110, "defin": 110, "run": 110, "parallel": 111, "temper": 111, "A": [112, 113], "quick": 112, "tutori": 112, "guid": [113, 116], "your": 113, "With": 113, "tmvn": 114, "user": 116, "post": 117, "process": 117, "refer": [117, 118, 119, 120, 121], "diagnost": [117, 121], "descript": 118, "linear": 118, "transform": 118, "markov": [119, 121], "chain": [119, 121], "distribut": 119, "code": 119, "random": [119, 121]}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"Examples": [[0, "examples"], [0, null]], "First Steps": [[1, "first-steps"], [1, null]], "Installation": [[2, "installation"]], "Introduction": [[3, "introduction"]], "Python-implemented proposals & models": [[3, "python-implemented-proposals-models"]], "hopsy.AcceptanceRateTarget": [[4, "hopsy-acceptanceratetarget"]], "hopsy.AdaptiveMetropolisProposal": [[5, "hopsy-adaptivemetropolisproposal"]], "hopsy.BallWalkProposal": [[6, "hopsy-ballwalkproposal"]], "hopsy.CSmMALAProposal": [[7, "hopsy-csmmalaproposal"]], "hopsy.DikinWalkProposal": [[8, "hopsy-dikinwalkproposal"]], "hopsy.ExpectedSquaredJumpDistanceTarget": [[9, "hopsy-expectedsquaredjumpdistancetarget"]], "hopsy.Gaussian": [[10, "hopsy-gaussian"]], "hopsy.GaussianCoordinateHitAndRunProposal": [[11, "hopsy-gaussiancoordinatehitandrunproposal"]], "hopsy.GaussianHitAndRunProposal": [[12, "hopsy-gaussianhitandrunproposal"]], "hopsy.GaussianProposal": [[13, "hopsy-gaussianproposal"]], "hopsy.MarkovChain": [[14, "hopsy-markovchain"]], "hopsy.Mixture": [[15, "hopsy-mixture"]], "hopsy.Model": [[16, "hopsy-model"]], "hopsy.Normal": [[17, "hopsy-normal"]], "hopsy.Problem": [[18, "hopsy-problem"]], "hopsy.Proposal": [[19, "hopsy-proposal"]], "hopsy.PyModel": [[20, "hopsy-pymodel"]], "hopsy.PyProposal": [[21, "hopsy-pyproposal"]], "hopsy.PyTuningTarget": [[22, "hopsy-pytuningtarget"]], "hopsy.RandomNumberGenerator": [[23, "hopsy-randomnumbergenerator"]], "hopsy.Rosenbrock": [[24, "hopsy-rosenbrock"]], "hopsy.ThompsonSamplingTuning": [[25, "hopsy-thompsonsamplingtuning"]], "hopsy.TuningTarget": [[26, "hopsy-tuningtarget"]], "hopsy.Uniform": [[27, "hopsy-uniform"]], "hopsy.UniformCoordinateHitAndRunProposal": [[28, "hopsy-uniformcoordinatehitandrunproposal"]], "hopsy.UniformHitAndRunProposal": [[29, "hopsy-uniformhitandrunproposal"]], "hopsy.add_box_constraints": [[30, "hopsy-add-box-constraints"]], "hopsy.compute_chebyshev_center": [[31, "hopsy-compute-chebyshev-center"]], "hopsy.ess": [[32, "hopsy-ess"]], "hopsy.mcse": [[33, "hopsy-mcse"]], "hopsy.rhat": [[34, "hopsy-rhat"]], "hopsy.round": [[35, "hopsy-round"]], "hopsy.sample": [[36, "hopsy-sample"]], "hopsy.simplify": [[37, "hopsy-simplify"]], "hopsy.tune": [[38, "hopsy-tune"]], "hopsy.AdaptiveMetropolisProposal.accept_proposal": [[39, "hopsy-adaptivemetropolisproposal-accept-proposal"]], "hopsy.AdaptiveMetropolisProposal.deepcopy": [[40, "hopsy-adaptivemetropolisproposal-deepcopy"]], "hopsy.AdaptiveMetropolisProposal.propose": [[41, "hopsy-adaptivemetropolisproposal-propose"]], "hopsy.BallWalkProposal.accept_proposal": [[42, "hopsy-ballwalkproposal-accept-proposal"]], "hopsy.BallWalkProposal.deepcopy": [[43, "hopsy-ballwalkproposal-deepcopy"]], "hopsy.BallWalkProposal.propose": [[44, "hopsy-ballwalkproposal-propose"]], "hopsy.CSmMALAProposal.accept_proposal": [[45, "hopsy-csmmalaproposal-accept-proposal"]], "hopsy.CSmMALAProposal.deepcopy": [[46, "hopsy-csmmalaproposal-deepcopy"]], "hopsy.CSmMALAProposal.propose": [[47, "hopsy-csmmalaproposal-propose"]], "hopsy.DikinWalkProposal.accept_proposal": [[48, "hopsy-dikinwalkproposal-accept-proposal"]], "hopsy.DikinWalkProposal.deepcopy": [[49, "hopsy-dikinwalkproposal-deepcopy"]], "hopsy.DikinWalkProposal.propose": [[50, "hopsy-dikinwalkproposal-propose"]], "hopsy.Gaussian.compute_expected_fisher_information": [[51, "hopsy-gaussian-compute-expected-fisher-information"]], "hopsy.Gaussian.compute_log_likelihood_gradient": [[52, "hopsy-gaussian-compute-log-likelihood-gradient"]], "hopsy.Gaussian.compute_negative_log_likelihood": [[53, "hopsy-gaussian-compute-negative-log-likelihood"]], "hopsy.Gaussian.log_curvature": [[54, "hopsy-gaussian-log-curvature"]], "hopsy.Gaussian.log_density": [[55, "hopsy-gaussian-log-density"]], "hopsy.Gaussian.log_gradient": [[56, "hopsy-gaussian-log-gradient"]], "hopsy.GaussianCoordinateHitAndRunProposal.accept_proposal": [[57, "hopsy-gaussiancoordinatehitandrunproposal-accept-proposal"]], "hopsy.GaussianCoordinateHitAndRunProposal.deepcopy": [[58, "hopsy-gaussiancoordinatehitandrunproposal-deepcopy"]], "hopsy.GaussianCoordinateHitAndRunProposal.propose": [[59, "hopsy-gaussiancoordinatehitandrunproposal-propose"]], "hopsy.GaussianHitAndRunProposal.accept_proposal": [[60, "hopsy-gaussianhitandrunproposal-accept-proposal"]], "hopsy.GaussianHitAndRunProposal.deepcopy": [[61, "hopsy-gaussianhitandrunproposal-deepcopy"]], "hopsy.GaussianHitAndRunProposal.propose": [[62, "hopsy-gaussianhitandrunproposal-propose"]], "hopsy.GaussianProposal.accept_proposal": [[63, "hopsy-gaussianproposal-accept-proposal"]], "hopsy.GaussianProposal.deepcopy": [[64, "hopsy-gaussianproposal-deepcopy"]], "hopsy.GaussianProposal.propose": [[65, "hopsy-gaussianproposal-propose"]], "hopsy.Mixture.compute_expected_fisher_information": [[66, "hopsy-mixture-compute-expected-fisher-information"]], "hopsy.Mixture.compute_log_likelihood_gradient": [[67, "hopsy-mixture-compute-log-likelihood-gradient"]], "hopsy.Mixture.compute_negative_log_likelihood": [[68, "hopsy-mixture-compute-negative-log-likelihood"]], "hopsy.Mixture.log_curvature": [[69, "hopsy-mixture-log-curvature"]], "hopsy.Mixture.log_density": [[70, "hopsy-mixture-log-density"]], "hopsy.Mixture.log_gradient": [[71, "hopsy-mixture-log-gradient"]], "hopsy.Model.compute_expected_fisher_information": [[72, "hopsy-model-compute-expected-fisher-information"]], "hopsy.Model.compute_log_likelihood_gradient": [[73, "hopsy-model-compute-log-likelihood-gradient"]], "hopsy.Model.compute_negative_log_likelihood": [[74, "hopsy-model-compute-negative-log-likelihood"]], "hopsy.Model.log_curvature": [[75, "hopsy-model-log-curvature"]], "hopsy.Model.log_density": [[76, "hopsy-model-log-density"]], "hopsy.Model.log_gradient": [[77, "hopsy-model-log-gradient"]], "hopsy.Normal.__call__": [[78, "hopsy-normal-call"]], "hopsy.Problem.slacks": [[79, "hopsy-problem-slacks"]], "hopsy.PyModel.compute_expected_fisher_information": [[80, "hopsy-pymodel-compute-expected-fisher-information"]], "hopsy.PyModel.compute_log_likelihood_gradient": [[81, "hopsy-pymodel-compute-log-likelihood-gradient"]], "hopsy.PyModel.compute_negative_log_likelihood": [[82, "hopsy-pymodel-compute-negative-log-likelihood"]], "hopsy.PyModel.log_curvature": [[83, "hopsy-pymodel-log-curvature"]], "hopsy.PyModel.log_density": [[84, "hopsy-pymodel-log-density"]], "hopsy.PyModel.log_gradient": [[85, "hopsy-pymodel-log-gradient"]], "hopsy.PyProposal.accept_proposal": [[86, "hopsy-pyproposal-accept-proposal"]], "hopsy.PyProposal.deepcopy": [[87, "hopsy-pyproposal-deepcopy"]], "hopsy.PyProposal.propose": [[88, "hopsy-pyproposal-propose"]], "hopsy.RandomNumberGenerator.__call__": [[89, "hopsy-randomnumbergenerator-call"]], "hopsy.Rosenbrock.compute_expected_fisher_information": [[90, "hopsy-rosenbrock-compute-expected-fisher-information"]], "hopsy.Rosenbrock.compute_log_likelihood_gradient": [[91, "hopsy-rosenbrock-compute-log-likelihood-gradient"]], "hopsy.Rosenbrock.compute_negative_log_likelihood": [[92, "hopsy-rosenbrock-compute-negative-log-likelihood"]], "hopsy.Rosenbrock.log_curvature": [[93, "hopsy-rosenbrock-log-curvature"]], "hopsy.Rosenbrock.log_density": [[94, "hopsy-rosenbrock-log-density"]], "hopsy.Rosenbrock.log_gradient": [[95, "hopsy-rosenbrock-log-gradient"]], "hopsy.Uniform.__call__": [[96, "hopsy-uniform-call"]], "hopsy.UniformCoordinateHitAndRunProposal.accept_proposal": [[97, "hopsy-uniformcoordinatehitandrunproposal-accept-proposal"]], "hopsy.UniformCoordinateHitAndRunProposal.deepcopy": [[98, "hopsy-uniformcoordinatehitandrunproposal-deepcopy"]], "hopsy.UniformCoordinateHitAndRunProposal.propose": [[99, "hopsy-uniformcoordinatehitandrunproposal-propose"]], "hopsy.UniformHitAndRunProposal.accept_proposal": [[100, "hopsy-uniformhitandrunproposal-accept-proposal"]], "hopsy.UniformHitAndRunProposal.deepcopy": [[101, "hopsy-uniformhitandrunproposal-deepcopy"]], "hopsy.UniformHitAndRunProposal.propose": [[102, "hopsy-uniformhitandrunproposal-propose"]], "hopsy - Highly Optimized Polytope Sampling in Python": [[103, "hopsy-highly-optimized-polytope-sampling-in-python"]], "Further resources": [[103, "further-resources"]], "Benchmarking Multiphase Monte Carlo Sampling": [[104, "Benchmarking-Multiphase-Monte-Carlo-Sampling"]], "Motivation": [[104, "Motivation"]], "Preimplemented Multiphase sampling": [[104, "Preimplemented-Multiphase-sampling"]], "Background": [[104, "Background"]], "Custom proposals": [[104, "Custom-proposals"]], "More complex custom sampling schemes": [[104, "More-complex-custom-sampling-schemes"]], "Helper functions": [[104, "Helper-functions"]], "Benchmark parameters": [[104, "Benchmark-parameters"]], "Benchmarking": [[104, "Benchmarking"]], "Visualizing the results": [[104, "Visualizing-the-results"]], "Conclusion": [[104, "Conclusion"]], "Appendix": [[104, "Appendix"]], "Birkhoff polytope": [[105, "Birkhoff-polytope"]], "Callbacks": [[106, "Callbacks"]], "Setting up Clickhouse": [[106, "Setting-up-Clickhouse"]], "Checking polytope feasibility": [[107, "Checking-polytope-feasibility"]], "Example 1: empty polytope x < 1 and x > 2": [[107, "Example-1:-empty-polytope-x-<-1-and-x->-2"]], "Example 2: valid polytope x < 1 and x > 0": [[107, "Example-2:-valid-polytope-x-<-1-and-x->-0"]], "Example 3: invalid polytope x < 1 and x > 0 and x=5": [[107, "Example-3:-invalid-polytope-x-<-1-and-x->-0-and-x=5"]], "Constrained Sampling": [[108, "Constrained-Sampling"]], "First sample without equality constraints": [[109, "First-sample-without-equality-constraints"]], "Now constraint rectangle to 2D by fixing third dimension at 2.5": [[109, "Now-constraint-rectangle-to-2D-by-fixing-third-dimension-at-2.5"]], "Demo for Multiphase Monte Carlo in hopsy": [[110, "Demo-for-Multiphase-Monte-Carlo-in-hopsy"]], "define problem and run sampling": [[110, "define-problem-and-run-sampling"]], "visualize samples": [[110, "visualize-samples"]], "Parallel Tempering": [[111, "Parallel-Tempering"]], "A Quick Tutorial": [[112, "A-Quick-Tutorial"]], "A Guide to Sampling Your First Model With hopsy": [[113, "A-Guide-to-Sampling-Your-First-Model-With-hopsy"]], "TMVN Sampling": [[114, "TMVN-Sampling"]], "User Guide": [[116, "user-guide"], [116, null]], "Post-Processing": [[117, "post-processing"]], "Reference": [[117, "reference"], [118, "reference"], [119, "reference"], [120, "reference"], [121, "reference"]], "Diagnostics": [[117, "diagnostics"], [121, "diagnostics"]], "Problem Description": [[118, "problem-description"]], "Problem": [[118, "problem"], [118, "id2"], [121, "problem"]], "Linear Transformations": [[118, "linear-transformations"]], "Models": [[118, "models"], [121, "models"]], "Markov Chain Monte Carlo Sampling": [[119, "markov-chain-monte-carlo-sampling"]], "Markov Chains": [[119, "markov-chains"]], "Proposal Distributions": [[119, "proposal-distributions"]], "Example code": [[119, "example-code"]], "Proposals": [[119, "proposals"], [121, "proposals"]], "Markov Chain": [[119, "markov-chain"], [121, "markov-chain"]], "Random": [[119, "random"], [121, "random"]], "Tuning": [[120, "tuning"], [120, "id1"], [121, "tuning"]]}, "indexentries": {"acceptanceratetarget (class in hopsy)": [[4, "hopsy.AcceptanceRateTarget"]], "adaptivemetropolisproposal (class in hopsy)": [[5, "hopsy.AdaptiveMetropolisProposal"]], "ballwalkproposal (class in hopsy)": [[6, "hopsy.BallWalkProposal"]], "csmmalaproposal (class in hopsy)": [[7, "hopsy.CSmMALAProposal"]], "dikinwalkproposal (class in hopsy)": [[8, "hopsy.DikinWalkProposal"]], "expectedsquaredjumpdistancetarget (class in hopsy)": [[9, "hopsy.ExpectedSquaredJumpDistanceTarget"]], "gaussian (class in hopsy)": [[10, "hopsy.Gaussian"]], "gaussiancoordinatehitandrunproposal (class in hopsy)": [[11, "hopsy.GaussianCoordinateHitAndRunProposal"]], "gaussianhitandrunproposal (class in hopsy)": [[12, "hopsy.GaussianHitAndRunProposal"]], "gaussianproposal (class in hopsy)": [[13, "hopsy.GaussianProposal"]], "markovchain (class in hopsy)": [[14, "hopsy.MarkovChain"]], "mixture (class in hopsy)": [[15, "hopsy.Mixture"]], "model (class in hopsy)": [[16, "hopsy.Model"]], "normal (class in hopsy)": [[17, "hopsy.Normal"]], "problem (class in hopsy)": [[18, "hopsy.Problem"]], "proposal (class in hopsy)": [[19, "hopsy.Proposal"]], "pymodel (class in hopsy)": [[20, "hopsy.PyModel"]], "pyproposal (class in hopsy)": [[21, "hopsy.PyProposal"]], "pytuningtarget (class in hopsy)": [[22, "hopsy.PyTuningTarget"]], "randomnumbergenerator (class in hopsy)": [[23, "hopsy.RandomNumberGenerator"]], "rosenbrock (class in hopsy)": [[24, "hopsy.Rosenbrock"]], "thompsonsamplingtuning (class in hopsy)": [[25, "hopsy.ThompsonSamplingTuning"]], "tuningtarget (class in hopsy)": [[26, "hopsy.TuningTarget"]], "uniform (class in hopsy)": [[27, "hopsy.Uniform"]], "uniformcoordinatehitandrunproposal (class in hopsy)": [[28, "hopsy.UniformCoordinateHitAndRunProposal"]], "uniformhitandrunproposal (class in hopsy)": [[29, "hopsy.UniformHitAndRunProposal"]], "add_box_constraints (class in hopsy)": [[30, "hopsy.add_box_constraints"]], "compute_chebyshev_center (class in hopsy)": [[31, "hopsy.compute_chebyshev_center"]], "ess (class in hopsy)": [[32, "hopsy.ess"]], "mcse (class in hopsy)": [[33, "hopsy.mcse"]], "rhat (class in hopsy)": [[34, "hopsy.rhat"]], "round (class in hopsy)": [[35, "hopsy.round"]], "sample (class in hopsy)": [[36, "hopsy.sample"]], "simplify (class in hopsy)": [[37, "hopsy.simplify"]], "tune (class in hopsy)": [[38, "hopsy.tune"]], "accept_proposal() (hopsy.adaptivemetropolisproposal method)": [[39, "hopsy.AdaptiveMetropolisProposal.accept_proposal"]], "deepcopy() (hopsy.adaptivemetropolisproposal method)": [[40, "hopsy.AdaptiveMetropolisProposal.deepcopy"]], "propose() (hopsy.adaptivemetropolisproposal method)": [[41, "hopsy.AdaptiveMetropolisProposal.propose"]], "accept_proposal() (hopsy.ballwalkproposal method)": [[42, "hopsy.BallWalkProposal.accept_proposal"]], "deepcopy() (hopsy.ballwalkproposal method)": [[43, "hopsy.BallWalkProposal.deepcopy"]], "propose() (hopsy.ballwalkproposal method)": [[44, "hopsy.BallWalkProposal.propose"]], "accept_proposal() (hopsy.csmmalaproposal method)": [[45, "hopsy.CSmMALAProposal.accept_proposal"]], "deepcopy() (hopsy.csmmalaproposal method)": [[46, "hopsy.CSmMALAProposal.deepcopy"]], "propose() (hopsy.csmmalaproposal method)": [[47, "hopsy.CSmMALAProposal.propose"]], "accept_proposal() (hopsy.dikinwalkproposal method)": [[48, "hopsy.DikinWalkProposal.accept_proposal"]], "deepcopy() (hopsy.dikinwalkproposal method)": [[49, "hopsy.DikinWalkProposal.deepcopy"]], "propose() (hopsy.dikinwalkproposal method)": [[50, "hopsy.DikinWalkProposal.propose"]], "compute_expected_fisher_information() (hopsy.gaussian method)": [[51, "hopsy.Gaussian.compute_expected_fisher_information"]], "compute_log_likelihood_gradient() (hopsy.gaussian method)": [[52, "hopsy.Gaussian.compute_log_likelihood_gradient"]], "compute_negative_log_likelihood() (hopsy.gaussian method)": [[53, "hopsy.Gaussian.compute_negative_log_likelihood"]], "log_curvature() (hopsy.gaussian method)": [[54, "hopsy.Gaussian.log_curvature"]], "log_density() (hopsy.gaussian method)": [[55, "hopsy.Gaussian.log_density"]], "log_gradient() (hopsy.gaussian method)": [[56, "hopsy.Gaussian.log_gradient"]], "accept_proposal() (hopsy.gaussiancoordinatehitandrunproposal method)": [[57, "hopsy.GaussianCoordinateHitAndRunProposal.accept_proposal"]], "deepcopy() (hopsy.gaussiancoordinatehitandrunproposal method)": [[58, "hopsy.GaussianCoordinateHitAndRunProposal.deepcopy"]], "propose() (hopsy.gaussiancoordinatehitandrunproposal method)": [[59, "hopsy.GaussianCoordinateHitAndRunProposal.propose"]], "accept_proposal() (hopsy.gaussianhitandrunproposal method)": [[60, "hopsy.GaussianHitAndRunProposal.accept_proposal"]], "deepcopy() (hopsy.gaussianhitandrunproposal method)": [[61, "hopsy.GaussianHitAndRunProposal.deepcopy"]], "propose() (hopsy.gaussianhitandrunproposal method)": [[62, "hopsy.GaussianHitAndRunProposal.propose"]], "accept_proposal() (hopsy.gaussianproposal method)": [[63, "hopsy.GaussianProposal.accept_proposal"]], "deepcopy() (hopsy.gaussianproposal method)": [[64, "hopsy.GaussianProposal.deepcopy"]], "propose() (hopsy.gaussianproposal method)": [[65, "hopsy.GaussianProposal.propose"]], "compute_expected_fisher_information() (hopsy.mixture method)": [[66, "hopsy.Mixture.compute_expected_fisher_information"]], "compute_log_likelihood_gradient() (hopsy.mixture method)": [[67, "hopsy.Mixture.compute_log_likelihood_gradient"]], "compute_negative_log_likelihood() (hopsy.mixture method)": [[68, "hopsy.Mixture.compute_negative_log_likelihood"]], "log_curvature() (hopsy.mixture method)": [[69, "hopsy.Mixture.log_curvature"]], "log_density() (hopsy.mixture method)": [[70, "hopsy.Mixture.log_density"]], "log_gradient() (hopsy.mixture method)": [[71, "hopsy.Mixture.log_gradient"]], "compute_expected_fisher_information() (hopsy.model method)": [[72, "hopsy.Model.compute_expected_fisher_information"]], "compute_log_likelihood_gradient() (hopsy.model method)": [[73, "hopsy.Model.compute_log_likelihood_gradient"]], "compute_negative_log_likelihood() (hopsy.model method)": [[74, "hopsy.Model.compute_negative_log_likelihood"]], "log_curvature() (hopsy.model method)": [[75, "hopsy.Model.log_curvature"]], "log_density() (hopsy.model method)": [[76, "hopsy.Model.log_density"]], "log_gradient() (hopsy.model method)": [[77, "hopsy.Model.log_gradient"]], "__call__() (hopsy.normal method)": [[78, "hopsy.Normal.__call__"]], "slacks() (hopsy.problem method)": [[79, "hopsy.Problem.slacks"]], "compute_expected_fisher_information() (hopsy.pymodel method)": [[80, "hopsy.PyModel.compute_expected_fisher_information"]], "compute_log_likelihood_gradient() (hopsy.pymodel method)": [[81, "hopsy.PyModel.compute_log_likelihood_gradient"]], "compute_negative_log_likelihood() (hopsy.pymodel method)": [[82, "hopsy.PyModel.compute_negative_log_likelihood"]], "log_curvature() (hopsy.pymodel method)": [[83, "hopsy.PyModel.log_curvature"]], "log_density() (hopsy.pymodel method)": [[84, "hopsy.PyModel.log_density"]], "log_gradient() (hopsy.pymodel method)": [[85, "hopsy.PyModel.log_gradient"]], "accept_proposal() (hopsy.pyproposal method)": [[86, "hopsy.PyProposal.accept_proposal"]], "deepcopy() (hopsy.pyproposal method)": [[87, "hopsy.PyProposal.deepcopy"]], "propose() (hopsy.pyproposal method)": [[88, "hopsy.PyProposal.propose"]], "__call__() (hopsy.randomnumbergenerator method)": [[89, "hopsy.RandomNumberGenerator.__call__"]], "compute_expected_fisher_information() (hopsy.rosenbrock method)": [[90, "hopsy.Rosenbrock.compute_expected_fisher_information"]], "compute_log_likelihood_gradient() (hopsy.rosenbrock method)": [[91, "hopsy.Rosenbrock.compute_log_likelihood_gradient"]], "compute_negative_log_likelihood() (hopsy.rosenbrock method)": [[92, "hopsy.Rosenbrock.compute_negative_log_likelihood"]], "log_curvature() (hopsy.rosenbrock method)": [[93, "hopsy.Rosenbrock.log_curvature"]], "log_density() (hopsy.rosenbrock method)": [[94, "hopsy.Rosenbrock.log_density"]], "log_gradient() (hopsy.rosenbrock method)": [[95, "hopsy.Rosenbrock.log_gradient"]], "__call__() (hopsy.uniform method)": [[96, "hopsy.Uniform.__call__"]], "accept_proposal() (hopsy.uniformcoordinatehitandrunproposal method)": [[97, "hopsy.UniformCoordinateHitAndRunProposal.accept_proposal"]], "deepcopy() (hopsy.uniformcoordinatehitandrunproposal method)": [[98, "hopsy.UniformCoordinateHitAndRunProposal.deepcopy"]], "propose() (hopsy.uniformcoordinatehitandrunproposal method)": [[99, "hopsy.UniformCoordinateHitAndRunProposal.propose"]], "accept_proposal() (hopsy.uniformhitandrunproposal method)": [[100, "hopsy.UniformHitAndRunProposal.accept_proposal"]], "deepcopy() (hopsy.uniformhitandrunproposal method)": [[101, "hopsy.UniformHitAndRunProposal.deepcopy"]], "propose() (hopsy.uniformhitandrunproposal method)": [[102, "hopsy.UniformHitAndRunProposal.propose"]]}})