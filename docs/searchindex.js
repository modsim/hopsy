Search.setIndex({"docnames": ["examples", "firststeps", "firststeps/installation", "firststeps/introduction", "generated/hopsy.AcceptanceRateTarget", "generated/hopsy.AdaptiveMetropolisProposal", "generated/hopsy.BallWalkProposal", "generated/hopsy.CSmMALAProposal", "generated/hopsy.DikinWalkProposal", "generated/hopsy.ExpectedSquaredJumpDistanceTarget", "generated/hopsy.Gaussian", "generated/hopsy.GaussianCoordinateHitAndRunProposal", "generated/hopsy.GaussianHitAndRunProposal", "generated/hopsy.GaussianProposal", "generated/hopsy.MarkovChain", "generated/hopsy.Mixture", "generated/hopsy.Model", "generated/hopsy.Normal", "generated/hopsy.Problem", "generated/hopsy.Proposal", "generated/hopsy.PyModel", "generated/hopsy.PyProposal", "generated/hopsy.PyTuningTarget", "generated/hopsy.RandomNumberGenerator", "generated/hopsy.Rosenbrock", "generated/hopsy.ThompsonSamplingTuning", "generated/hopsy.TuningTarget", "generated/hopsy.Uniform", "generated/hopsy.UniformCoordinateHitAndRunProposal", "generated/hopsy.UniformHitAndRunProposal", "generated/hopsy.add_box_constraints", "generated/hopsy.compute_chebyshev_center", "generated/hopsy.ess", "generated/hopsy.mcse", "generated/hopsy.rhat", "generated/hopsy.round", "generated/hopsy.sample", "generated/hopsy.simplify", "generated/hopsy.tune", "generated/objname/hopsy.AdaptiveMetropolisProposal.accept_proposal", "generated/objname/hopsy.AdaptiveMetropolisProposal.deepcopy", "generated/objname/hopsy.AdaptiveMetropolisProposal.propose", "generated/objname/hopsy.BallWalkProposal.accept_proposal", "generated/objname/hopsy.BallWalkProposal.deepcopy", "generated/objname/hopsy.BallWalkProposal.propose", "generated/objname/hopsy.CSmMALAProposal.accept_proposal", "generated/objname/hopsy.CSmMALAProposal.deepcopy", "generated/objname/hopsy.CSmMALAProposal.propose", "generated/objname/hopsy.DikinWalkProposal.accept_proposal", "generated/objname/hopsy.DikinWalkProposal.deepcopy", "generated/objname/hopsy.DikinWalkProposal.propose", "generated/objname/hopsy.Gaussian.compute_expected_fisher_information", "generated/objname/hopsy.Gaussian.compute_log_likelihood_gradient", "generated/objname/hopsy.Gaussian.compute_negative_log_likelihood", "generated/objname/hopsy.Gaussian.log_curvature", "generated/objname/hopsy.Gaussian.log_density", "generated/objname/hopsy.Gaussian.log_gradient", "generated/objname/hopsy.GaussianCoordinateHitAndRunProposal.accept_proposal", "generated/objname/hopsy.GaussianCoordinateHitAndRunProposal.deepcopy", "generated/objname/hopsy.GaussianCoordinateHitAndRunProposal.propose", "generated/objname/hopsy.GaussianHitAndRunProposal.accept_proposal", "generated/objname/hopsy.GaussianHitAndRunProposal.deepcopy", "generated/objname/hopsy.GaussianHitAndRunProposal.propose", "generated/objname/hopsy.GaussianProposal.accept_proposal", "generated/objname/hopsy.GaussianProposal.deepcopy", "generated/objname/hopsy.GaussianProposal.propose", "generated/objname/hopsy.Mixture.compute_expected_fisher_information", "generated/objname/hopsy.Mixture.compute_log_likelihood_gradient", "generated/objname/hopsy.Mixture.compute_negative_log_likelihood", "generated/objname/hopsy.Mixture.log_curvature", "generated/objname/hopsy.Mixture.log_density", "generated/objname/hopsy.Mixture.log_gradient", "generated/objname/hopsy.Model.compute_expected_fisher_information", "generated/objname/hopsy.Model.compute_log_likelihood_gradient", "generated/objname/hopsy.Model.compute_negative_log_likelihood", "generated/objname/hopsy.Model.log_curvature", "generated/objname/hopsy.Model.log_density", "generated/objname/hopsy.Model.log_gradient", "generated/objname/hopsy.Normal.__call__", "generated/objname/hopsy.PyModel.compute_expected_fisher_information", "generated/objname/hopsy.PyModel.compute_log_likelihood_gradient", "generated/objname/hopsy.PyModel.compute_negative_log_likelihood", "generated/objname/hopsy.PyModel.log_curvature", "generated/objname/hopsy.PyModel.log_density", "generated/objname/hopsy.PyModel.log_gradient", "generated/objname/hopsy.PyProposal.accept_proposal", "generated/objname/hopsy.PyProposal.deepcopy", "generated/objname/hopsy.PyProposal.propose", "generated/objname/hopsy.RandomNumberGenerator.__call__", "generated/objname/hopsy.Rosenbrock.compute_expected_fisher_information", "generated/objname/hopsy.Rosenbrock.compute_log_likelihood_gradient", "generated/objname/hopsy.Rosenbrock.compute_negative_log_likelihood", "generated/objname/hopsy.Rosenbrock.log_curvature", "generated/objname/hopsy.Rosenbrock.log_density", "generated/objname/hopsy.Rosenbrock.log_gradient", "generated/objname/hopsy.Uniform.__call__", "generated/objname/hopsy.UniformCoordinateHitAndRunProposal.accept_proposal", "generated/objname/hopsy.UniformCoordinateHitAndRunProposal.deepcopy", "generated/objname/hopsy.UniformCoordinateHitAndRunProposal.propose", "generated/objname/hopsy.UniformHitAndRunProposal.accept_proposal", "generated/objname/hopsy.UniformHitAndRunProposal.deepcopy", "generated/objname/hopsy.UniformHitAndRunProposal.propose", "index", "notebooks/BenchmarkingMultiphaseMonteCarloSampling", "notebooks/BirkhoffPolytope", "notebooks/Callbacks", "notebooks/CheckIfPolytopeIsEmpty", "notebooks/ConstrainedSampling", "notebooks/EqualityConstraints", "notebooks/MultiphaseMonteCarlo", "notebooks/ParallelTempering", "notebooks/QuickTutorial", "notebooks/SamplingAdvice", "notebooks/TruncatedGaussianProposal", "notebooks/eval_pt_samples", "userguide", "userguide/postprocessing", "userguide/problem", "userguide/sampling", "userguide/tuning", "zreference"], "filenames": ["examples.rst", "firststeps.rst", "firststeps/installation.rst", "firststeps/introduction.rst", "generated/hopsy.AcceptanceRateTarget.rst", "generated/hopsy.AdaptiveMetropolisProposal.rst", "generated/hopsy.BallWalkProposal.rst", "generated/hopsy.CSmMALAProposal.rst", "generated/hopsy.DikinWalkProposal.rst", "generated/hopsy.ExpectedSquaredJumpDistanceTarget.rst", "generated/hopsy.Gaussian.rst", "generated/hopsy.GaussianCoordinateHitAndRunProposal.rst", "generated/hopsy.GaussianHitAndRunProposal.rst", "generated/hopsy.GaussianProposal.rst", "generated/hopsy.MarkovChain.rst", "generated/hopsy.Mixture.rst", "generated/hopsy.Model.rst", "generated/hopsy.Normal.rst", "generated/hopsy.Problem.rst", "generated/hopsy.Proposal.rst", "generated/hopsy.PyModel.rst", "generated/hopsy.PyProposal.rst", "generated/hopsy.PyTuningTarget.rst", "generated/hopsy.RandomNumberGenerator.rst", "generated/hopsy.Rosenbrock.rst", "generated/hopsy.ThompsonSamplingTuning.rst", "generated/hopsy.TuningTarget.rst", "generated/hopsy.Uniform.rst", "generated/hopsy.UniformCoordinateHitAndRunProposal.rst", "generated/hopsy.UniformHitAndRunProposal.rst", "generated/hopsy.add_box_constraints.rst", "generated/hopsy.compute_chebyshev_center.rst", "generated/hopsy.ess.rst", "generated/hopsy.mcse.rst", "generated/hopsy.rhat.rst", "generated/hopsy.round.rst", "generated/hopsy.sample.rst", "generated/hopsy.simplify.rst", "generated/hopsy.tune.rst", "generated/objname/hopsy.AdaptiveMetropolisProposal.accept_proposal.rst", "generated/objname/hopsy.AdaptiveMetropolisProposal.deepcopy.rst", "generated/objname/hopsy.AdaptiveMetropolisProposal.propose.rst", "generated/objname/hopsy.BallWalkProposal.accept_proposal.rst", "generated/objname/hopsy.BallWalkProposal.deepcopy.rst", "generated/objname/hopsy.BallWalkProposal.propose.rst", "generated/objname/hopsy.CSmMALAProposal.accept_proposal.rst", "generated/objname/hopsy.CSmMALAProposal.deepcopy.rst", "generated/objname/hopsy.CSmMALAProposal.propose.rst", "generated/objname/hopsy.DikinWalkProposal.accept_proposal.rst", "generated/objname/hopsy.DikinWalkProposal.deepcopy.rst", "generated/objname/hopsy.DikinWalkProposal.propose.rst", "generated/objname/hopsy.Gaussian.compute_expected_fisher_information.rst", "generated/objname/hopsy.Gaussian.compute_log_likelihood_gradient.rst", "generated/objname/hopsy.Gaussian.compute_negative_log_likelihood.rst", "generated/objname/hopsy.Gaussian.log_curvature.rst", "generated/objname/hopsy.Gaussian.log_density.rst", "generated/objname/hopsy.Gaussian.log_gradient.rst", "generated/objname/hopsy.GaussianCoordinateHitAndRunProposal.accept_proposal.rst", "generated/objname/hopsy.GaussianCoordinateHitAndRunProposal.deepcopy.rst", "generated/objname/hopsy.GaussianCoordinateHitAndRunProposal.propose.rst", "generated/objname/hopsy.GaussianHitAndRunProposal.accept_proposal.rst", "generated/objname/hopsy.GaussianHitAndRunProposal.deepcopy.rst", "generated/objname/hopsy.GaussianHitAndRunProposal.propose.rst", "generated/objname/hopsy.GaussianProposal.accept_proposal.rst", "generated/objname/hopsy.GaussianProposal.deepcopy.rst", "generated/objname/hopsy.GaussianProposal.propose.rst", "generated/objname/hopsy.Mixture.compute_expected_fisher_information.rst", "generated/objname/hopsy.Mixture.compute_log_likelihood_gradient.rst", "generated/objname/hopsy.Mixture.compute_negative_log_likelihood.rst", "generated/objname/hopsy.Mixture.log_curvature.rst", "generated/objname/hopsy.Mixture.log_density.rst", "generated/objname/hopsy.Mixture.log_gradient.rst", "generated/objname/hopsy.Model.compute_expected_fisher_information.rst", "generated/objname/hopsy.Model.compute_log_likelihood_gradient.rst", "generated/objname/hopsy.Model.compute_negative_log_likelihood.rst", "generated/objname/hopsy.Model.log_curvature.rst", "generated/objname/hopsy.Model.log_density.rst", "generated/objname/hopsy.Model.log_gradient.rst", "generated/objname/hopsy.Normal.__call__.rst", "generated/objname/hopsy.PyModel.compute_expected_fisher_information.rst", "generated/objname/hopsy.PyModel.compute_log_likelihood_gradient.rst", "generated/objname/hopsy.PyModel.compute_negative_log_likelihood.rst", "generated/objname/hopsy.PyModel.log_curvature.rst", "generated/objname/hopsy.PyModel.log_density.rst", "generated/objname/hopsy.PyModel.log_gradient.rst", "generated/objname/hopsy.PyProposal.accept_proposal.rst", "generated/objname/hopsy.PyProposal.deepcopy.rst", "generated/objname/hopsy.PyProposal.propose.rst", "generated/objname/hopsy.RandomNumberGenerator.__call__.rst", "generated/objname/hopsy.Rosenbrock.compute_expected_fisher_information.rst", "generated/objname/hopsy.Rosenbrock.compute_log_likelihood_gradient.rst", "generated/objname/hopsy.Rosenbrock.compute_negative_log_likelihood.rst", "generated/objname/hopsy.Rosenbrock.log_curvature.rst", "generated/objname/hopsy.Rosenbrock.log_density.rst", "generated/objname/hopsy.Rosenbrock.log_gradient.rst", "generated/objname/hopsy.Uniform.__call__.rst", "generated/objname/hopsy.UniformCoordinateHitAndRunProposal.accept_proposal.rst", "generated/objname/hopsy.UniformCoordinateHitAndRunProposal.deepcopy.rst", "generated/objname/hopsy.UniformCoordinateHitAndRunProposal.propose.rst", "generated/objname/hopsy.UniformHitAndRunProposal.accept_proposal.rst", "generated/objname/hopsy.UniformHitAndRunProposal.deepcopy.rst", "generated/objname/hopsy.UniformHitAndRunProposal.propose.rst", "index.rst", "notebooks/BenchmarkingMultiphaseMonteCarloSampling.ipynb", "notebooks/BirkhoffPolytope.ipynb", "notebooks/Callbacks.ipynb", "notebooks/CheckIfPolytopeIsEmpty.ipynb", "notebooks/ConstrainedSampling.ipynb", "notebooks/EqualityConstraints.ipynb", "notebooks/MultiphaseMonteCarlo.ipynb", "notebooks/ParallelTempering.ipynb", "notebooks/QuickTutorial.ipynb", "notebooks/SamplingAdvice.ipynb", "notebooks/TruncatedGaussianProposal.ipynb", "notebooks/eval_pt_samples.ipynb", "userguide.rst", "userguide/postprocessing.rst", "userguide/problem.rst", "userguide/sampling.rst", "userguide/tuning.rst", "zreference.rst"], "titles": ["Examples", "First Steps", "Installation", "Introduction", "hopsy.AcceptanceRateTarget", "hopsy.AdaptiveMetropolisProposal", "hopsy.BallWalkProposal", "hopsy.CSmMALAProposal", "hopsy.DikinWalkProposal", "hopsy.ExpectedSquaredJumpDistanceTarget", "hopsy.Gaussian", "hopsy.GaussianCoordinateHitAndRunProposal", "hopsy.GaussianHitAndRunProposal", "hopsy.GaussianProposal", "hopsy.MarkovChain", "hopsy.Mixture", "hopsy.Model", "hopsy.Normal", "hopsy.Problem", "hopsy.Proposal", "hopsy.PyModel", "hopsy.PyProposal", "hopsy.PyTuningTarget", "hopsy.RandomNumberGenerator", "hopsy.Rosenbrock", "hopsy.ThompsonSamplingTuning", "hopsy.TuningTarget", "hopsy.Uniform", "hopsy.UniformCoordinateHitAndRunProposal", "hopsy.UniformHitAndRunProposal", "hopsy.add_box_constraints", "hopsy.compute_chebyshev_center", "hopsy.ess", "hopsy.mcse", "hopsy.rhat", "hopsy.round", "hopsy.sample", "hopsy.simplify", "hopsy.tune", "hopsy.AdaptiveMetropolisProposal.accept_proposal", "hopsy.AdaptiveMetropolisProposal.deepcopy", "hopsy.AdaptiveMetropolisProposal.propose", "hopsy.BallWalkProposal.accept_proposal", "hopsy.BallWalkProposal.deepcopy", "hopsy.BallWalkProposal.propose", "hopsy.CSmMALAProposal.accept_proposal", "hopsy.CSmMALAProposal.deepcopy", "hopsy.CSmMALAProposal.propose", "hopsy.DikinWalkProposal.accept_proposal", "hopsy.DikinWalkProposal.deepcopy", "hopsy.DikinWalkProposal.propose", "hopsy.Gaussian.compute_expected_fisher_information", "hopsy.Gaussian.compute_log_likelihood_gradient", "hopsy.Gaussian.compute_negative_log_likelihood", "hopsy.Gaussian.log_curvature", "hopsy.Gaussian.log_density", "hopsy.Gaussian.log_gradient", "hopsy.GaussianCoordinateHitAndRunProposal.accept_proposal", "hopsy.GaussianCoordinateHitAndRunProposal.deepcopy", "hopsy.GaussianCoordinateHitAndRunProposal.propose", "hopsy.GaussianHitAndRunProposal.accept_proposal", "hopsy.GaussianHitAndRunProposal.deepcopy", "hopsy.GaussianHitAndRunProposal.propose", "hopsy.GaussianProposal.accept_proposal", "hopsy.GaussianProposal.deepcopy", "hopsy.GaussianProposal.propose", "hopsy.Mixture.compute_expected_fisher_information", "hopsy.Mixture.compute_log_likelihood_gradient", "hopsy.Mixture.compute_negative_log_likelihood", "hopsy.Mixture.log_curvature", "hopsy.Mixture.log_density", "hopsy.Mixture.log_gradient", "hopsy.Model.compute_expected_fisher_information", "hopsy.Model.compute_log_likelihood_gradient", "hopsy.Model.compute_negative_log_likelihood", "hopsy.Model.log_curvature", "hopsy.Model.log_density", "hopsy.Model.log_gradient", "hopsy.Normal.__call__", "hopsy.PyModel.compute_expected_fisher_information", "hopsy.PyModel.compute_log_likelihood_gradient", "hopsy.PyModel.compute_negative_log_likelihood", "hopsy.PyModel.log_curvature", "hopsy.PyModel.log_density", "hopsy.PyModel.log_gradient", "hopsy.PyProposal.accept_proposal", "hopsy.PyProposal.deepcopy", "hopsy.PyProposal.propose", "hopsy.RandomNumberGenerator.__call__", "hopsy.Rosenbrock.compute_expected_fisher_information", "hopsy.Rosenbrock.compute_log_likelihood_gradient", "hopsy.Rosenbrock.compute_negative_log_likelihood", "hopsy.Rosenbrock.log_curvature", "hopsy.Rosenbrock.log_density", "hopsy.Rosenbrock.log_gradient", "hopsy.Uniform.__call__", "hopsy.UniformCoordinateHitAndRunProposal.accept_proposal", "hopsy.UniformCoordinateHitAndRunProposal.deepcopy", "hopsy.UniformCoordinateHitAndRunProposal.propose", "hopsy.UniformHitAndRunProposal.accept_proposal", "hopsy.UniformHitAndRunProposal.deepcopy", "hopsy.UniformHitAndRunProposal.propose", "hopsy - Highly Optimized Polytope Sampling in Python", "Benchmarking Multiphase Monte Carlo Sampling", "Birkhoff polytope", "Callbacks", "Checking polytope feasibility", "Constrained Sampling", "First sample without equality constraints", "Demo for Multiphase Monte Carlo in hopsy", "Parallel Tempering", "A Quick Tutorial", "A Guide to Sampling Your First Model With hopsy", "TMVN Sampling", "&lt;no title&gt;", "User Guide", "Post-Processing", "Problem Description", "Markov Chain Monte Carlo Sampling", "Tuning", "Reference"], "terms": {"A": [0, 1, 24, 30, 31, 35, 102, 103, 104, 105, 107, 108, 109, 110, 113, 117], "guid": [0, 1, 102], "sampl": [0, 1, 3, 14, 32, 33, 34, 37, 104, 105, 106, 110, 111, 114, 115, 117], "your": [0, 1, 2, 72, 73, 75, 77, 102, 110], "first": [0, 36, 37, 102, 115], "model": [0, 1, 10, 15, 20, 51, 52, 53, 54, 55, 56, 66, 67, 68, 69, 70, 71, 79, 80, 81, 82, 83, 84, 102, 103, 104, 105, 106, 110, 111, 113, 118], "With": [0, 1, 102, 110], "hopsi": [0, 1, 2, 3, 103, 104, 105, 106, 107, 108, 110, 111, 113, 115, 117, 118], "constrain": [0, 3, 30, 102, 108], "birkhoff": [0, 102, 103], "polytop": [0, 30, 31, 35, 37, 103, 111, 112, 117, 118], "parallel": [0, 14, 32, 33, 34, 36, 102, 111, 112], "temper": [0, 102], "The": [1, 10, 14, 15, 20, 31, 32, 34, 35, 36, 51, 52, 53, 54, 55, 56, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 103, 104, 107, 110, 111, 112, 117, 118], "contain": [1, 30, 31, 35, 36, 115, 117], "quick": [1, 102], "instal": [1, 102], "an": [1, 10, 102, 103, 110], "introduct": [1, 102], "problem": [1, 14, 30, 31, 35, 37, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 115, 118], "solv": [1, 118], "tutori": [1, 102], "can": [2, 10, 14, 30, 36, 72, 73, 75, 77, 102, 103, 105, 107, 110, 112, 117], "easili": [2, 118], "from": [2, 3, 10, 16, 34, 36, 103, 104, 105, 109, 110, 112, 114], "python": [2, 15, 20, 110, 117, 118], "packag": 2, "index": 2, "us": [2, 3, 30, 32, 33, 34, 35, 36, 51, 52, 53, 66, 67, 68, 72, 73, 74, 75, 77, 79, 80, 81, 89, 90, 91, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 118], "pip": [2, 102], "altern": [2, 75], "you": [2, 3, 20, 30, 72, 73, 75, 77, 102, 103, 112, 117], "download": 2, "sourc": [2, 102], "code": [2, 102, 110, 112], "our": [2, 102, 103], "github": [2, 32, 33, 34, 102], "repositori": 2, "git": 2, "clone": 2, "http": [2, 24, 32, 33, 34, 103, 105, 109, 117], "com": [2, 105], "modsim": 2, "recurs": 2, "compil": 2, "either": 2, "binari": 2, "wheel": 2, "dep": 2, "standard": [2, 10, 33, 111], "cmake": 2, "routin": 2, "mkdir": 2, "build": [2, 103, 110], "releas": 2, "cd": 2, "make": [2, 115, 118], "note": [2, 32, 34, 51, 52, 53, 54, 55, 56, 112], "howev": [2, 10, 103, 105, 117], "produc": [2, 36, 117], "actual": [2, 36], "dist": 2, "x": [2, 3, 15, 51, 52, 53, 54, 55, 56, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 102, 103, 104, 105, 110, 111, 113, 117, 118], "y": [2, 103, 109, 118], "z": [2, 34], "tag": 2, "whl": 2, "where": [2, 3, 10, 32, 34, 102, 103], "version": 2, "depend": [2, 110, 117], "verison": 2, "environ": [2, 105], "For": [3, 32, 33, 34, 36, 72, 73, 75, 77, 102, 105, 106, 109, 110, 112, 117, 118], "high": [3, 105, 110], "flexibl": [3, 102, 103, 109], "when": [3, 34, 37, 102, 105, 106, 111, 112], "hop": [3, 20, 102, 103, 110, 117, 118], "we": [3, 10, 30, 54, 103, 106, 111, 112, 117, 118], "made": 3, "algorithm": [3, 102, 103, 107, 109, 112, 117, 118], "well": [3, 103, 109, 110, 112], "defin": [3, 10, 31, 35, 36, 37, 69, 103, 110, 112], "likelihood": [3, 52, 53, 67, 68, 73, 90, 91, 112, 117, 118], "consid": [3, 10, 107], "metropoli": [3, 110, 118], "criterion": [3, 32], "alpha": [3, 103, 107, 109, 110, 112, 113, 114], "theta": 3, "min": [3, 36, 103], "big": [3, 10], "1": [3, 10, 15, 30, 31, 32, 33, 34, 36, 51, 52, 53, 54, 55, 56, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 117, 118], "frac": [3, 32, 34, 103, 107, 118], "pi": [3, 110], "q": 3, "which": [3, 10, 30, 31, 32, 34, 35, 36, 37, 54, 75, 102, 103, 105, 106, 107, 109, 112, 117, 118], "comput": [3, 31, 32, 33, 34, 51, 52, 53, 54, 55, 56, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 105, 110, 112, 117, 118], "accept": [3, 10, 36, 105, 107, 111, 112], "probabl": [3, 32, 52, 53, 55, 56, 67, 68, 70, 71, 107, 110], "move": [3, 107], "gener": [3, 32, 33, 34, 36, 66, 69, 104, 107, 110, 111, 112, 118], "i": [3, 10, 15, 30, 31, 32, 34, 36, 37, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 117, 118], "distribut": [3, 34, 105, 107, 110, 111, 117], "target": [3, 34, 102, 105, 110, 112, 117], "wish": 3, "draw": [3, 32, 36], "In": [3, 32, 33, 34, 103, 105, 107, 109, 111, 112, 117], "assum": [3, 15, 107, 117], "exp": [3, 10, 110, 113], "f": [3, 10, 15, 67, 68, 70, 71, 103, 104, 105, 109, 110], "neg": [3, 53, 68, 91, 112, 117], "log": [3, 52, 53, 67, 68, 69, 70, 71, 73, 90, 91, 92, 110, 112, 117], "have": [3, 30, 34, 36, 51, 52, 53, 54, 55, 56, 105, 107, 110, 111, 112, 117], "provid": [3, 102, 103, 104, 106, 117], "want": [3, 103, 112], "self": [3, 10, 15, 51, 52, 53, 54, 55, 56, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 103, 110, 112], "To": [3, 34], "read": 3, "more": [3, 16, 34, 102, 107, 112, 115, 117], "about": [3, 36, 111, 117], "detail": [3, 16, 115, 117], "how": [3, 16, 103, 109], "custom": [3, 16, 72, 73, 74, 75, 76, 77, 102, 109, 112, 117, 118], "pleas": [3, 102, 105, 117], "refer": [3, 24, 32, 33, 34, 37, 102, 109, 110], "thi": [3, 10, 16, 30, 34, 35, 36, 51, 54, 66, 69, 74, 76, 92, 102, 103, 105, 106, 107, 109, 110, 111, 112, 117, 118], "page": 3, "although": 3, "ship": [3, 117], "numer": 3, "optim": [3, 112, 117, 118], "work": [3, 16, 20, 102, 103, 109, 112, 118], "linearili": [3, 102], "space": [3, 102, 103, 104, 110, 117], "written": 3, "c": [3, 102, 103, 114, 117, 118], "also": [3, 10, 30, 35, 36, 102, 103, 110, 112, 117, 118], "possibl": [3, 103, 110, 117, 118], "class": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 103, 104, 110, 112, 113, 117, 118], "attribut": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 20, 21, 23, 24, 25, 27, 28, 29, 36], "method": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 66, 69, 74, 76, 103, 112, 117], "mean": [10, 30, 32, 33, 103, 105, 107, 110, 111, 112, 113, 117], "0": [10, 32, 33, 34, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 118], "covari": [10, 51, 54, 110], "inact": 10, "invari": [10, 117], "some": [10, 72, 73, 75, 77, 103, 107, 109, 111, 117, 118], "dimens": [10, 24, 30, 37, 51, 52, 53, 54, 55, 56, 105, 107, 109, 117], "input": [10, 51, 52, 53, 54, 55, 56, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 117], "vector": [10, 30, 31, 35, 51, 52, 53, 54, 55, 56, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 112, 117], "As": [10, 103, 118], "exampl": [10, 75, 102, 103, 105, 107, 111, 112], "one": [10, 34, 75, 103, 112], "dimension": [10, 24, 72, 73, 75, 77, 104, 105, 111], "squar": [10, 75, 104], "exponenti": 10, "function": [10, 16, 20, 24, 30, 32, 35, 52, 53, 55, 56, 67, 68, 71, 102, 106, 110, 112, 117, 118], "two": [10, 32, 34, 36, 103, 105, 110], "variabl": 10, "x_1": [10, 111], "x_2": 10, "2": [10, 32, 103, 104, 105, 107, 109, 110, 111, 112, 113], "under": 10, "second": [10, 36, 108], "sai": 10, "compon": [10, 15, 67, 68, 70, 71, 117], "degener": 10, "multivari": [10, 51, 52, 53, 54, 55, 56, 117], "regular": 10, "n": [10, 15, 30, 31, 32, 33, 34, 51, 52, 53, 54, 55, 56, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 103, 104, 107, 110, 111], "k": [10, 32, 51, 52, 53, 54, 55, 56, 107, 113], "ha": [10, 34, 36, 51, 52, 53, 54, 55, 56, 103, 105, 107, 110, 112, 117, 118], "its": [10, 15, 107, 112], "ar": [10, 15, 16, 30, 32, 33, 34, 36, 103, 104, 105, 106, 110, 112, 117, 118], "technic": [10, 110], "realiz": 10, "remov": [10, 30, 37, 105], "row": [10, 30, 72, 73, 75, 77, 104], "column": [10, 103, 104], "matrix": [10, 30, 31, 35, 51, 54, 72, 75, 89, 92, 117], "correspond": [10, 118], "basic": [10, 32], "construct": [10, 14, 103, 110], "unlik": [10, 110], "still": [10, 16, 32, 51, 52, 53, 54, 55, 56, 112], "onli": [10, 32, 33, 34, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113], "pass": [10, 14, 20, 31, 32, 33, 34, 36, 105, 106, 110, 117], "empti": 10, "list": [10, 14, 15, 36, 103], "common": [10, 111, 117], "paramet": [10, 15, 30, 31, 32, 33, 34, 35, 36, 37, 51, 52, 53, 54, 55, 56, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 79, 80, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 104, 106, 107, 108, 109, 110, 112, 113], "numpi": [10, 30, 31, 32, 33, 34, 36, 51, 52, 53, 54, 55, 56, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 103, 104, 105, 106, 107, 108, 110, 112, 113, 118], "ndarrai": [10, 30, 31, 32, 33, 34, 36, 51, 52, 53, 54, 55, 56, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 103, 118], "int": [10, 30, 32, 33, 34, 36, 103, 109, 110], "so": [10, 15, 16, 32, 33, 34, 75], "entri": 10, "should": [10, 16, 30, 31, 34, 35, 37, 74, 76, 112, 117, 118], "between": [10, 34], "propos": [14, 16, 36, 72, 73, 75, 77, 102, 105, 107, 110, 111, 112, 113], "gaussianhitandrun": 14, "starting_point": [14, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113], "none": [14, 15, 32, 33, 34, 36, 66, 69, 103, 105, 109, 113, 118], "given": [14, 15, 20, 103, 110, 111], "object": [14, 15, 20, 102, 112, 117], "markov": [14, 33, 36, 102, 103, 107, 110, 111, 112, 115], "chain": [14, 32, 33, 34, 36, 102, 103, 105, 107, 109, 110, 111, 112, 113, 115], "keep": 14, "track": 14, "intern": [14, 118], "state": [14, 36, 103, 106, 107, 110, 111, 117, 118], "select": [14, 32, 33, 34], "mechan": [14, 16], "see": [14, 16, 32, 34, 103, 106, 107], "argument": 14, "sever": 14, "them": [14, 103, 112], "weight": [15, 67, 68, 71, 117], "sum": [15, 67, 68, 71, 104], "unnorm": [15, 52, 53, 55, 56, 67, 68, 70, 71, 73, 77, 90, 91, 93, 94], "densiti": [15, 52, 53, 55, 56, 67, 68, 70, 71, 103, 107, 109, 110, 112, 113, 114], "sum_": [15, 32, 67, 68, 70, 71], "w_i": [15, 67, 68, 70, 71], "f_i": [15, 67, 68, 70, 71], "mai": [15, 30, 117], "arbitrari": [15, 20, 104, 117], "implement": [15, 16, 20, 32, 66, 69, 74, 75, 76, 102, 103, 105, 109, 110, 112, 117, 118], "requir": [15, 16, 20, 37, 74, 76, 105, 106, 118], "pymodel": [15, 117], "": [15, 30, 32, 35, 36, 102, 103, 109, 110, 117, 118], "float": [15, 30, 32, 33, 53, 55, 68, 70, 74, 76, 81, 83, 91, 93, 103, 118], "If": [15, 30, 34, 36, 72, 73, 75, 77, 102, 112], "thei": [15, 16, 106, 112], "all": [15, 16, 30, 34, 36, 103, 107, 110, 112, 118], "base": [16, 102, 103, 110, 112], "while": [16, 103], "inherit": 16, "allow": [20, 102, 103, 110], "interfac": [20, 103, 112, 117], "correctli": 20, "compute_negative_log_likelihood": [20, 110, 112, 113, 117], "compute_log_likelihood_gradi": [20, 117], "compute_expected_fisher_inform": [20, 117], "multi": [24, 110], "2n": [24, 30, 89, 90, 91, 92, 93, 94], "doi": 24, "org": [24, 32, 34, 117], "10": [24, 102, 103, 105, 107, 108, 110, 111, 112, 113], "1162": 24, "evco": 24, "2009": 24, "17": [24, 103], "3": [24, 103, 104, 105, 107, 108, 109, 111, 112, 113], "437": 24, "lower_bound": 30, "_supportsarrai": 30, "dtype": 30, "_nestedsequ": 30, "bool": [30, 32, 36], "complex": 30, "str": [30, 32, 33, 34, 36, 103, 110, 113, 114, 118], "byte": 30, "upper_bound": 30, "simplifi": [30, 106], "true": [30, 103, 105, 106, 109, 110, 112, 113, 114], "add": [30, 106], "box": [30, 107], "constraint": [30, 35, 37, 106, 112], "extend": 30, "b": [30, 31, 35, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 117], "return": [30, 31, 32, 33, 34, 35, 36, 37, 51, 52, 53, 54, 55, 56, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 103, 110, 112, 117, 118], "m": [30, 32, 53, 55, 104, 111], "ad": [30, 106], "naiv": 30, "do": [30, 75, 111, 118], "neither": 30, "check": [30, 103, 112], "whether": [30, 106], "alreadi": [30, 103, 105, 117], "somehow": 30, "bound": 30, "nor": 30, "veri": [30, 107, 110, 111], "same": [30, 103, 107, 110], "exist": [30, 66, 69, 103], "redund": [30, 35, 37], "effici": [30, 37, 102, 103, 110, 112], "polyround": [30, 35, 37, 103, 106, 117], "toolbox": [30, 117], "round": [30, 37, 103, 104, 112, 117], "both": [30, 103], "everi": [30, 32, 33, 34, 36, 112], "lb": 30, "leq": [30, 31, 35, 102, 111, 117], "x_i": 30, "ub": 30, "appropri": 30, "length": 30, "lb_i": 30, "ub_i": 30, "ax": [30, 31, 35, 102, 110, 111, 112, 117], "float64": [30, 31, 72, 74, 75, 76, 79, 80, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94], "specifi": 30, "lower": 30, "upper": 30, "type": [30, 31, 32, 33, 34, 35, 36, 37, 51, 52, 53, 54, 55, 56, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 103, 112, 117], "chebyshev": [31, 112], "center": [31, 103, 111], "midpoint": 31, "non": [31, 103, 104, 106, 107, 108, 109, 112, 113, 117], "uniqu": 31, "largest": 31, "inscrib": 31, "ball": 31, "data": [32, 33, 34, 105], "seri": [32, 33, 34, 111], "bulk": 32, "rel": [32, 34], "fals": [32, 36, 103, 105, 106], "prob": [32, 33], "dask_kwarg": [32, 33, 34], "calcul": [32, 33, 34], "estim": [32, 34], "effect": [32, 34, 37, 107, 110, 112], "size": [32, 36, 104, 112], "mcmc": [32, 33, 34, 36, 105, 110, 111, 112], "shape": [32, 33, 34, 36, 103, 104, 109, 112, 113, 118], "n_chain": [32, 33, 34, 36, 104, 105, 111], "n_draw": [32, 33, 34, 36], "dim": [32, 33, 34, 36, 103, 107, 109, 113], "rang": [32, 33, 34, 103, 104, 105, 107, 109, 110, 111, 112, 114], "default": [32, 33, 34, 105], "valu": [32, 33, 34, 36, 72, 74, 75, 76, 79, 80, 81, 82, 83, 84, 103, 112], "onc": [32, 33, 34, 110], "whole": [32, 33, 34], "valid": [32, 33, 34], "tail": 32, "option": [32, 33, 36, 106, 118], "quantil": [32, 33], "old": 32, "sd": [32, 33], "median": [32, 33], "mad": 32, "absolut": 32, "devianc": 32, "z_scale": [32, 34], "fold": [32, 34], "ident": [32, 34, 103, 107], "local": 32, "ress": 32, "tupl": [32, 36], "n_proc": [32, 33, 34, 36, 103, 104, 105, 109], "combin": [32, 33, 34, 102, 117], "subprocess": [32, 33, 34, 110], "dict": [32, 33, 34, 36, 103, 105], "dask": [32, 33, 34], "relat": [32, 33, 34], "kwarg": [32, 33, 34], "wrap_xarray_ufunc": [32, 33, 34], "hat": [32, 34, 111], "_": [32, 103, 105, 107, 108, 109, 110, 112, 113], "eff": 32, "n_": [32, 111], "mathit": [32, 103], "diagnost": [32, 34, 102, 103], "mn": 32, "tau": 32, "t": [32, 35, 103, 112, 113], "p": [32, 102, 103, 117, 118], "number": [32, 36, 72, 73, 75, 77, 110, 111, 112, 117], "rho": 32, "_t": 32, "_autocorrel": 32, "lag": 32, "last": [32, 103], "integ": 32, "2k": 32, "posit": [32, 75], "current": [32, 103, 118], "similar": 32, "stan": 32, "geyer": 32, "initi": [32, 34], "monoton": 32, "sequenc": [32, 110], "1992": [32, 34], "2011": 32, "vehtari": [32, 34], "et": [32, 34], "al": [32, 34], "2019": [32, 34], "arxiv": [32, 34], "ab": [32, 34, 103], "1903": [32, 34], "08008": [32, 34], "arviz": [32, 33, 34, 104, 105], "dev": [32, 33, 34], "io": [32, 33, 34], "api": [32, 33, 34, 102, 103, 117], "html": [32, 33, 34], "mc": [32, 104, 107, 108, 110, 112, 113], "doc": [32, 105], "2_18": 32, "manual": 32, "section": [32, 102, 103, 118], "15": [32, 103, 110], "4": [32, 51, 52, 53, 66, 67, 68, 72, 73, 74, 79, 80, 81, 89, 90, 91, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113], "gelman": [32, 34], "bda": [32, 34], "2014": [32, 34], "formula": 32, "11": [32, 103, 104, 106, 107, 108, 109, 110, 112, 113], "8": [32, 103, 105, 110, 112, 113, 114], "error": 33, "statist": [33, 34, 102, 110, 111], "inform": [33, 36, 51, 54, 66, 69, 72, 75, 89, 92, 102], "msce": 33, "dataset": [33, 34], "rank": [34, 110], "normal": [34, 103], "splitr": 34, "set": [34, 37, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 117, 118], "trace": 34, "r": [34, 103, 107, 110, 111], "test": [34, 102, 103, 105, 117, 118], "lack": 34, "converg": [34, 72, 73, 75, 77, 103, 104, 110, 111, 112], "compar": [34, 103, 112, 113, 115], "varianc": 34, "multipl": [34, 105, 110], "within": [34, 110], "each": [34, 36, 72, 75, 110], "been": [34, 103, 112], "achiev": [34, 36], "most": [34, 111, 112, 117], "detect": 34, "evid": 34, "nonconverg": 34, "start": [34, 102, 103, 105, 107, 110, 111, 112], "dispers": 34, "recommend": [34, 117], "split": 34, "potenti": [34, 111], "scale": [34, 111], "reduct": [34, 111], "factor": [34, 111], "v": 34, "w": 34, "posterior": [34, 105, 110], "pool": [34, 36, 110], "uniti": 34, "greater": [34, 103], "than": [34, 37, 103], "indic": [34, 111], "yet": 34, "over": [34, 112], "scipi": [34, 104], "stat": 34, "rankdata": 34, "transform": [34, 35, 103], "follow": [34, 105, 110, 111], "brook": 34, "1998": 34, "rubin": 34, "inequ": [35, 37, 111, 112, 117], "strip": 35, "unround": [35, 117], "shift": [35, 103, 117], "store": [35, 105, 118], "uniformproblem": 35, "Its": [35, 102], "left": 35, "hand": [35, 118], "side": 35, "oper": [35, 103], "right": 35, "math": 35, "markov_chain": [36, 103, 110, 112], "rng": [36, 102, 103, 104, 105, 107, 108, 110, 111, 112, 113], "n_sampl": [36, 102, 103, 104, 105, 108, 110, 111, 112], "thin": [36, 102, 103, 104, 105, 108, 111, 112], "respect": 36, "random": [36, 102, 103, 105, 111], "thu": [36, 107, 117, 118], "len": [36, 103, 107, 109, 113], "match": 36, "markovchain": [36, 102, 103, 104, 105, 107, 108, 110, 111, 112, 113], "simul": [36, 102, 112, 117], "randomnumbergener": [36, 102, 103, 104, 105, 107, 108, 110, 111, 112, 113], "singl": [36, 110], "wa": [36, 117], "must": [36, 110], "discard": 36, "inbetween": 36, "save": [36, 105], "increas": [36, 107], "n_thread": [36, 112], "deprec": [36, 51, 52, 53, 66, 67, 68, 72, 73, 74, 79, 80, 81, 89, 90, 91, 118], "process": [36, 102, 110, 115], "multiprocess": [36, 110], "worker": 36, "record_meta": 36, "string": 36, "acceptance_r": [36, 103, 112], "record": 36, "here": [36, 109, 110, 112], "e": [36, 103, 110, 118], "g": [36, 110, 118], "state_negative_log_likelihood": 36, "in_memori": [36, 105], "flag": 36, "enabl": [36, 110], "disabl": 36, "memori": [36, 105], "metadata": [36, 105], "callback": 36, "deriv": [36, 104], "observ": 36, "dure": [36, 103, 105], "run": [36, 103, 105, 107, 110, 112], "write": [36, 105, 109], "obtain": 36, "onlin": 36, "perman": 36, "storag": [36, 105], "analysi": [36, 102], "hold": 36, "meta": [36, 104, 105], "without": 36, "rate": [36, 105, 107, 111, 112], "found": [36, 102, 103, 110], "becaus": [36, 37, 103, 106, 110, 112], "typo": 36, "Will": 36, "refunct": 37, "equal": [37, 72, 73, 75, 77, 104, 106, 110], "case": [37, 92, 103, 105, 107, 110, 111, 112, 118], "width": 37, "less": [37, 110], "thresh": 37, "lp": [37, 106], "singleton": 37, "simplif": 37, "typic": [37, 69], "step": [37, 102, 112, 113, 115], "befor": [37, 103, 106, 110], "It": [37, 102, 103, 104, 106, 107], "call": [37, 54, 103, 110, 112, 118], "automat": 37, "log_curvatur": [51, 66, 72, 79, 89], "instead": [51, 52, 53, 66, 67, 68, 72, 73, 74, 79, 80, 81, 89, 90, 91, 103, 118], "expect": [51, 54, 66, 69, 72, 89, 92, 107, 112], "fisher": [51, 54, 66, 69, 72, 75, 89, 92], "turn": [51, 54, 105], "out": [51, 54], "just": [51, 54, 72, 73, 75, 77], "reduc": [51, 54, 103], "narrai": [51, 54], "log_gradi": [52, 67, 73, 80, 90], "gradient": [52, 56, 67, 71, 72, 73, 75, 77, 90, 94], "logarithm": [52, 53, 56, 67, 68, 71, 118], "log_dens": [53, 56, 68, 71, 74, 77, 81, 91, 94], "context": 54, "close": [66, 69, 105, 107, 112], "form": [66, 69, 102, 117, 118], "solut": [66, 69], "nabla": [67, 71], "curvatur": [69, 75, 92], "help": [72, 73, 75, 77, 102], "faster": [72, 73, 75, 77, 110], "long": [72, 73, 75, 77, 107, 112], "too": [72, 73, 75, 77, 112], "slow": [72, 73, 75, 77], "fast": [72, 73, 75, 77, 105], "enough": [72, 73, 75, 77, 103], "zero": [72, 73, 75, 77, 103, 105, 107, 108, 113], "correct": [72, 73, 75, 77, 112, 117], "col": [72, 75], "param": [72, 74, 75, 76], "rtype": [72, 74, 75, 76], "ani": [74, 76, 112, 118], "compute_negative_log_likelihod": [74, 81], "semi": 75, "definit": [75, 110], "hessian": 75, "linear": 75, "approxim": [75, 107], "scientif": 102, "tool": 102, "mont": [102, 115], "carlo": [102, 115], "convex": 102, "mathcal": [102, 117], "often": [102, 103, 117], "aris": [102, 104], "bayesian": 102, "metabol": 102, "flux": 102, "built": 102, "pybind11": 102, "power": 102, "goal": 102, "backend": [102, 105], "languag": 102, "whilst": 102, "maintain": 102, "comprehens": 102, "interoper": 102, "other": [102, 110, 112, 113], "librari": 102, "offer": [102, 105], "magnitud": 102, "special": [102, 107, 112], "sampler": [102, 103, 107, 113, 118], "similarili": [102, 118], "besid": 102, "few": [102, 111], "user": 102, "includ": [102, 111], "13": [102, 103], "mathrm": 102, "bioreactor": 102, "kinet": 102, "physic": 102, "sir": 102, "import": [102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "task": 102, "especi": [102, 110], "expens": 102, "evalu": 102, "tune": [102, 112, 115], "hyperparamet": [102, 111], "thompson": 102, "approach": [102, 110], "perform": [102, 103, 112, 118], "differ": [102, 110, 112], "chapter": 102, "encount": [102, 106], "bug": 102, "feel": [102, 112], "free": [102, 112], "open": 102, "issu": [102, 106], "find": 102, "question": 102, "feedback": 102, "regard": 102, "visit": 102, "u": [102, 103, 112], "gitter": 102, "pip3": 102, "matplotlib": [102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114], "pyplot": [102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114], "plt": [102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114], "5": [102, 103, 105, 107, 109, 110, 112, 113, 114], "seed": [102, 103, 104, 105, 107, 109, 110, 111, 112, 113], "42": [102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113], "accrat": [102, 107, 111, 113], "1000": [102, 103, 107, 111, 113], "content": 102, "descript": [102, 115], "post": [102, 115], "research": 103, "interest": [103, 117], "new": [103, 112, 118], "togeth": [103, 117, 118], "art": 103, "framework": 103, "conduct": 103, "comparison": 103, "focu": 103, "scaffold": 103, "o": 103, "show": [103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114], "notebook": [103, 106, 109, 110], "adapt": [103, 112], "plugin": 103, "avail": [103, 118], "multiphasemontecarlo": 103, "ipynb": [103, 109], "short": [103, 109, 110, 112], "report": 103, "strategi": [103, 110], "underli": 103, "idea": [103, 110, 118], "previou": [103, 112], "artifici": 103, "coordin": [103, 112], "hit": [103, 107, 112], "optgp": 103, "stabl": 103, "pubm": 103, "ncbi": 103, "nlm": 103, "nih": 103, "gov": 103, "28158334": 103, "those": [103, 118], "resurrect": 103, "shown": [103, 110], "better": [103, 110], "drop": [103, 105, 109], "dagstuhl": [103, 109], "de": [103, 109], "opu": [103, 109], "volltext": [103, 109], "2021": [103, 109], "13820": [103, 109], "pdf": [103, 109], "lipic": [103, 109], "socg": [103, 109], "21": [103, 109], "np": [103, 104, 105, 106, 107, 108, 110, 112, 113], "time": [103, 104, 107, 110, 111], "yourself": 103, "small": [103, 105], "seamlessi": 103, "integr": 103, "workflow": 103, "overrelax": 103, "ui": 103, "adsab": 103, "harvard": 103, "edu": 103, "2015ijmpc": 103, "2650010d": 103, "abstract": 103, "overrelaxedhitandrunpropos": 103, "def": [103, 110, 112], "__init__": [103, 110], "epsilon": [103, 110], "1e": 103, "direct": 103, "randn": 103, "linalg": [103, 112], "norm": 103, "axi": 103, "inverse_dist": 103, "nan_to_num": 103, "divid": 103, "forward_dist": 103, "max": 103, "backward_dist": 103, "l": 103, "t_1": 103, "sqrt": 103, "uniform": [103, 104, 109], "t_0": 103, "addit": 103, "billiard": 103, "walk": 103, "suggest": [103, 112], "svd_round": 103, "concaten": 103, "n_dim": [103, 109], "n_iter": 103, "stacked_sampl": 103, "vstack": 103, "vh": 103, "svd": 103, "rescal": 103, "mention": 103, "s_ratio": 103, "els": [103, 107, 109, 113], "ones": [103, 110, 113], "rounding_matrix": 103, "transpos": 103, "dot": [103, 110, 113], "diag": 103, "sub_problem": 103, "apply_shift": 103, "apply_transform": 103, "execut": [103, 105], "run_multiphase_sampl": [103, 109], "target_ess": 103, "steps_per_phas": [103, 109], "limit_singular_ratio_valu": 103, "assert": [103, 105, 106, 112], "ess": [103, 104, 105, 109, 110, 112], "iter": [103, 109, 112], "sampling_tim": 103, "last_iteration_did_round": 103, "print": [103, 108, 111, 112, 113], "titer": 103, "internal_polytop": 103, "_sampl": 103, "end": [103, 110, 111], "measur": 103, "ts_ratio": 103, "next": [103, 112], "j": [103, 105, 110], "tess": 103, "100": [103, 109, 110, 113, 114], "back": [103, 104], "full": [103, 104, 117], "back_transform": 103, "run_sampl": 103, "6": [103, 104, 105, 110, 112, 113, 114], "rounded_problem": 103, "point": [103, 110, 112], "generate_polytop": 103, "name": [103, 118], "bp5": 103, "bp": [103, 104, 109], "birkhoffpolytop": [103, 104, 109], "mutable_class": 103, "parameter_nam": 103, "5d": 103, "elif": 103, "e_coli": 103, "original_polytop": 103, "static_class": 103, "parse_sbml_stoichiometri": 103, "stoichiometrypars": 103, "parse_sbml_cobrapi": 103, "extern": 103, "resourc": 103, "e_coli_cor": 103, "xml": 103, "polyroundapi": 103, "simplify_polytop": 103, "transform_polytop": 103, "up": [103, 111, 115], "proposaltyp": 103, "billiardwalkpropos": 103, "chrrt": 103, "uniformcoordinatehitandrunpropos": [103, 104, 113], "ohrr": 103, "problems_to_benchmark": 103, "loop": 103, "ess_t": 103, "problem_select": 103, "item": [103, 113], "tpropos": 103, "reset": [103, 106], "preprocessed_polytop": 103, "problem_nam": 103, "20": [103, 109, 110], "chebi": [103, 109], "compute_chebyshev_cent": [103, 104, 109, 112], "flatten": [103, 105, 110, 113], "rhat": [103, 104, 105, 110, 111, 112], "ttime": 103, "usernam": [103, 104, 106, 107, 108, 109, 112, 113], "academ": [103, 104, 106, 107, 108, 109, 112, 113], "licens": [103, 104, 106, 107, 108, 109, 112, 113], "commerci": [103, 104, 106, 107, 108, 109, 112, 113], "expir": [103, 104, 106, 107, 108, 109, 112, 113], "2023": [103, 104, 106, 107, 108, 109, 112, 113], "30": [103, 104, 106, 107, 108, 109, 112, 113], "3847452299003395": 103, "231": 103, "4835868364245": 103, "627": 103, "6793244654275": 103, "990": 103, "5612889618237": 103, "1583": 103, "2881720652492": 103, "447": 103, "64227280442987": 103, "320": 103, "863": 103, "8258778056024": 103, "640": 103, "1324": 103, "526979068286": 103, "960": 103, "7": [103, 105, 108, 110, 111, 112, 114], "066940654698069": 103, "978791384060571": 103, "822526600431221": 103, "14": [103, 107, 108, 111], "644470085574461": 103, "1280": 103, "18": 103, "35148293619599": 103, "1600": 103, "16": [103, 109, 113], "62222639251434": 103, "1920": 103, "23": 103, "833699742670035": 103, "2240": 103, "41": [103, 108], "20876776311011": 103, "2560": 103, "9": [103, 105, 110, 112], "57": 103, "886912910344414": 103, "2880": 103, "37": 103, "382289849801055": 103, "3200": 103, "62": 103, "344564915244966": 103, "3520": 103, "12": [103, 110, 111, 112], "79": 103, "15850821798082": 103, "3840": 103, "74": 103, "36071172518442": 103, "4160": 103, "95342031751828": 103, "4480": 103, "113": 103, "47926517779857": 103, "4800": 103, "121": 103, "72186371924973": 103, "5120": 103, "3492478009126": 103, "5440": 103, "127": 103, "77424100111836": 103, "5760": 103, "19": 103, "136": 103, "9696137423155": 103, "6080": 103, "144": 103, "16940525794976": 103, "6400": 103, "139": 103, "2192539731686": 103, "6720": 103, "22": 103, "156": 103, "53500273176687": 103, "7040": 103, "175": 103, "14217193906293": 103, "7360": 103, "24": [103, 109], "182": 103, "43273042583925": 103, "7680": 103, "25": [103, 110, 112, 113], "191": 103, "5815328961723": 103, "8000": 103, "26": 103, "210": 103, "41931304680313": 103, "8320": 103, "27": 103, "224": 103, "31970085590208": 103, "8640": 103, "28": 103, "226": 103, "62768566905982": 103, "8960": 103, "29": 103, "237": 103, "75902910720876": 103, "9280": 103, "243": 103, "67493216855976": 103, "9600": 103, "31": 103, "257": 103, "3021980390406": 103, "9920": 103, "32": 103, "273": 103, "8199561717506": 103, "10240": 103, "33": 103, "294": 103, "20112361746465": 103, "10560": 103, "34": [103, 108], "293": 103, "48158227555297": 103, "10880": 103, "35": [103, 108], "300": [103, 107, 112], "45975910082853": 103, "11200": 103, "36": [103, 108], "317": 103, "7535136265973": 103, "11520": 103, "336": 103, "3692862259476": 103, "11840": 103, "38": [103, 108], "331": 103, "9082473463359": 103, "12160": 103, "39": [103, 108, 110, 113], "346": 103, "2916329510095": 103, "12480": 103, "40": 103, "357": 103, "96934334556954": 103, "12800": 103, "363": 103, "54227418015665": 103, "13120": 103, "383": 103, "5858067647125": 103, "13440": 103, "43": [103, 108, 109], "382": 103, "0381927501071": 103, "13760": 103, "44": [103, 109], "401": 103, "5143488947238": 103, "14080": 103, "45": [103, 109], "420": 103, "64939968763684": 103, "14400": 103, "46": 103, "449": 103, "08326901564647": 103, "14720": 103, "47": 103, "452": 103, "80046753169904": 103, "15040": 103, "48": 103, "450": 103, "12839321675506": 103, "15360": 103, "49": 103, "462": 103, "2771927927099": 103, "15680": 103, "50": [103, 112, 113], "461": 103, "9902539847381": 103, "16000": 103, "51": 103, "481": 103, "53977928686703": 103, "16320": 103, "52": 103, "508": 103, "6649066292897": 103, "16640": 103, "53": 103, "504": 103, "20807661962795": 103, "16960": 103, "54": 103, "521": 103, "5147013905246": 103, "17280": 103, "55": 103, "544": 103, "7993417778594": 103, "17600": 103, "56": 103, "535": 103, "5840942302711": 103, "17920": 103, "551": 103, "2635026918439": 103, "18240": 103, "58": 103, "569": 103, "2310737012456": 103, "18560": 103, "59": 103, "588": 103, "0058452604753": 103, "18880": 103, "60": 103, "593": 103, "8488910778029": 103, "19200": 103, "61": 103, "615": 103, "6596139884347": 103, "19520": 103, "635": 103, "4306913517988": 103, "19840": 103, "63": 103, "646": 103, "0405907460345": 103, "20160": 103, "64": 103, "644": 103, "4425753035002": 103, "20480": 103, "65": 103, "8043239236227": 103, "20800": 103, "66": 103, "664": 103, "2919147742286": 103, "21120": 103, "67": 103, "674": 103, "3680356181259": 103, "21440": 103, "68": 103, "680": 103, "3837001518382": 103, "21760": 103, "69": 103, "698": 103, "4208197353897": 103, "22080": 103, "70": 103, "709": 103, "8115678575414": 103, "22400": 103, "71": 103, "722": 103, "2190007599912": 103, "22720": 103, "72": 103, "729": 103, "2378725295657": 103, "23040": 103, "73": 103, "749": 103, "2232824472641": 103, "23360": 103, "750": 103, "6074062950678": 103, "23680": 103, "75": [103, 109], "779": 103, "3189674698466": 103, "24000": 103, "76": 103, "793": 103, "5895044612517": 103, "24320": 103, "77": 103, "788": 103, "1310770304416": 103, "24640": 103, "78": 103, "813": 103, "4174519025988": 103, "24960": 103, "818": 103, "7102630963842": 103, "25280": 103, "80": 103, "825": 103, "1911302157964": 103, "25600": 103, "81": 103, "824": 103, "4797274295319": 103, "25920": 103, "82": 103, "832": 103, "4798666785565": 103, "26240": 103, "83": 103, "834": 103, "0921425432099": 103, "26560": 103, "84": 103, "856": 103, "1355113591557": 103, "26880": 103, "85": 103, "854": 103, "4998018509373": 103, "27200": 103, "86": 103, "870": 103, "6301466142817": 103, "27520": 103, "87": 103, "875": 103, "9356221946373": 103, "27840": 103, "88": 103, "891": 103, "1700748102612": 103, "28160": 103, "89": 103, "903": 103, "7960059093062": 103, "28480": 103, "90": 103, "886": 103, "178835961187": 103, "28800": 103, "91": 103, "867": 103, "117458057039": 103, "29120": 103, "92": 103, "881": 103, "9490684846811": 103, "29440": 103, "93": 103, "890": 103, "5241990028626": 103, "29760": 103, "94": 103, "913": 103, "5607895586063": 103, "30080": 103, "95": [103, 109], "932": 103, "2398882121701": 103, "30400": 103, "96": 103, "951": 103, "138292074147": 103, "30720": 103, "97": 103, "964": 103, "61299347187": 103, "31040": 103, "98": 103, "983": 103, "6391765927045": 103, "31360": 103, "99": 103, "979": 103, "9236321935331": 103, "31680": 103, "1003": 103, "9031482727333": 103, "32000": 103, "0061219415504485": 103, "006207630257062": 103, "0070773467273284": 103, "07052469253540039": 103, "0217652320861816": 103, "2099902629852295": 103, "22450": 103, "12512845066": 103, "1296": 103, "3124379990331": 103, "161": 103, "65937558010646": 103, "963156850679276": 103, "872243577042705": 103, "96780496221293": 103, "133013163411473": 103, "92514821624308": 103, "03213882586069": 103, "480721222145224": 103, "114165738738418": 103, "3472103720655264": 103, "652": 103, "8113104108883": 103, "1462979782508014": 103, "957": 103, "7149285139645": 103, "2013": 103, "7358952432155": 103, "524": 103, "5375595198544": 103, "480": 103, "1188": 103, "850821488119": 103, "269631083291744": 103, "323446416265532": 103, "888495302103292": 103, "1440": 103, "891013536977999": 103, "43496232034734": 103, "2400": 103, "882887827988935": 103, "49037801963015": 103, "3360": 103, "348358594863743": 103, "099764817877734": 103, "4320": 103, "0052664057525": 103, "11942312187279": 103, "5280": 103, "189888275506522": 103, "00693166294697": 103, "6240": 103, "89547451072042": 103, "45378494069976": 103, "7200": 103, "2195031632737": 103, "91470052686886": 103, "8160": 103, "54628640266824": 103, "120": 103, "38209736486483": 103, "9120": 103, "117": 103, "68114663878684": 103, "124": 103, "75070422853102": 103, "10080": 103, "116": 103, "34655760555961": 103, "18592232344665": 103, "11040": 103, "123": 103, "19323837905226": 103, "46386173862024": 103, "12000": 103, "148": 103, "09968539854086": 103, "147": 103, "95311563377672": 103, "12960": 103, "145": 103, "98511902334084": 103, "158": 103, "51895860514378": 103, "13920": 103, "169": 103, "69689177481715": 103, "174": 103, "49127005693168": 103, "14880": 103, "180": 103, "42261318891497": 103, "192": 103, "96616757403754": 103, "15840": 103, "189": 103, "6869567126621": 103, "185": 103, "9907738397535": 103, "16800": 103, "82170148987922": 103, "204": 103, "65635395883973": 103, "17760": 103, "207": 103, "05551739174868": 103, "216": 103, "1649396014175": 103, "18720": 103, "218": 103, "65560668780427": 103, "67365262048054": 103, "19680": 103, "233": 103, "2337269481389": 103, "245": [103, 110, 114], "04918297452195": 103, "20640": 103, "253": 103, "35676743095638": 103, "268": 103, "2333892323007": 103, "21600": 103, "180948810766": 103, "272": 103, "81001761513676": 103, "22560": 103, "916065225228": 103, "42112849368127": 103, "23520": 103, "254": 103, "7582764932103": 103, "258": 103, "4069792053966": 103, "24480": 103, "86342243004873": 103, "284": 103, "17271357899097": 103, "25440": 103, "297": 103, "20253324691765": 103, "302": 103, "52499273424024": 103, "26400": 103, "286": 103, "611087547339": 103, "280": 103, "915655001863": 103, "27360": 103, "288": 103, "3164101913765": 103, "42292722611387": 103, "28320": 103, "310": 103, "9952497255533": 103, "313": 103, "1100359628566": 103, "29280": 103, "289": 103, "67804817589433": 103, "2058222243669": 103, "30240": 103, "40643896165045": 103, "8918695327726": 103, "31200": 103, "312": 103, "2361613765037": 103, "322": 103, "9219106586677": 103, "32160": 103, "323": 103, "7545394540001": 103, "32640": 103, "32520571689747": 103, "33120": 103, "345": 103, "85424928547764": 103, "33600": 103, "358": 103, "3048911770299": 103, "34080": 103, "361": 103, "084743896345": 103, "34560": 103, "365": 103, "47086073740763": 103, "35040": 103, "39780160630573": 103, "35520": 103, "392": 103, "63094158894984": 103, "36000": 103, "398": 103, "9072807479651": 103, "36480": 103, "384": 103, "2964391944638": 103, "36960": 103, "7667317498958": 103, "37440": 103, "391": 103, "4770094651921": 103, "37920": 103, "386": 103, "190724216923": 103, "38400": 103, "85858663180676": 103, "38880": 103, "399": 103, "76548583077005": 103, "39360": 103, "406": 103, "45084635182735": 103, "39840": 103, "414": 103, "13634315764835": 103, "40320": 103, "424": 103, "17051913321086": 103, "40800": 103, "431": 103, "3602734254215": 103, "41280": 103, "422": 103, "556096368053": 103, "41760": 103, "432": 103, "7105172995434": 103, "42240": 103, "442": 103, "42073630007786": 103, "42720": 103, "451": 103, "6280904320013": 103, "43200": 103, "454": 103, "8288496773367": 103, "43680": 103, "459": 103, "7049865712104": 103, "44160": 103, "463": 103, "64262501125734": 103, "44640": 103, "3284616055022": 103, "45120": 103, "458": 103, "5231384856301": 103, "45600": 103, "467": 103, "2708211331568": 103, "46080": 103, "483": 103, "29399688389447": 103, "46560": 103, "489": 103, "9114233381726": 103, "47040": 103, "482": 103, "25565920814455": 103, "47520": 103, "488": 103, "76061956249976": 103, "48000": 103, "101": 103, "501": 103, "2216755056666": 103, "48480": 103, "102": 103, "509": 103, "151199607025": 103, "48960": 103, "103": 103, "512": 103, "2207523382951": 103, "49440": 103, "104": 103, "522": 103, "8707944154959": 103, "49920": 103, "105": 103, "530": 103, "9119480393842": 103, "50400": 103, "106": 103, "534": 103, "6566181063171": 103, "50880": 103, "107": 103, "537": 103, "3787114531068": 103, "51360": 103, "108": 103, "549": 103, "4299895513893": 103, "51840": 103, "109": 103, "545": 103, "6206413795908": 103, "52320": 103, "110": 103, "554": 103, "906174875836": 103, "52800": 103, "111": 103, "573": 103, "7119220600656": 103, "53280": 103, "112": 103, "4093051480813": 103, "53760": 103, "582": 103, "5343562401797": 103, "54240": 103, "114": 103, "592": 103, "634209761512": 103, "54720": 103, "115": 103, "601": 103, "744572032569": 103, "55200": 103, "605": 103, "1492755287037": 103, "55680": 103, "609": 103, "6353624312007": 103, "56160": 103, "118": 103, "613": 103, "5433468342083": 103, "56640": 103, "119": 103, "612": 103, "6171354877015": 103, "57120": 103, "618": 103, "69924574814": 103, "57600": 103, "628": 103, "4239828653435": 103, "58080": 103, "122": 103, "639": 103, "0665758373954": 103, "58560": 103, "8951662610747": 103, "59040": 103, "658": 103, "5648101217669": 103, "59520": 103, "125": 103, "672": 103, "2232482053716": 103, "60000": 103, "126": 103, "692": 103, "9192879813564": 103, "60480": 103, "701": 103, "1431658990771": 103, "60960": 103, "128": 103, "702": 103, "7340761365899": 103, "61440": 103, "129": 103, "707": 103, "3541719676651": 103, "61920": 103, "130": 103, "0297752389649": 103, "62400": 103, "131": 103, "706": 103, "8995244779946": 103, "62880": 103, "132": 103, "4908108847167": 103, "63360": 103, "133": 103, "689": 103, "3472197901951": 103, "63840": 103, "134": 103, "703": 103, "0003376779357": 103, "64320": 103, "135": 103, "708": 103, "2335934188095": 103, "64800": 103, "725": 103, "1838266734792": 103, "65280": 103, "137": 103, "735": 103, "3205579025181": 103, "65760": 103, "138": 103, "737": 103, "0318459845154": 103, "66240": 103, "754": 103, "6120288318377": 103, "66720": 103, "140": 103, "599634946338": 103, "67200": 103, "141": 103, "752": 103, "9040639999432": 103, "67680": 103, "142": 103, "766": 103, "2687113077193": 103, "68160": 103, "143": 103, "781": 103, "7276660620391": 103, "68640": 103, "790": 103, "6849726861673": 103, "69120": 103, "795": 103, "7596388427546": 103, "69600": 103, "146": 103, "799": 103, "5584972022341": 103, "70080": 103, "798": 103, "8247767068805": 103, "70560": 103, "797": 103, "1372057741078": 103, "71040": 103, "149": 103, "794": 103, "4879887657187": 103, "71520": 103, "150": 103, "4262537658255": 103, "72000": 103, "151": 103, "821": 103, "3439821865887": 103, "72480": 103, "152": 103, "836": 103, "785381934779": 103, "72960": 103, "153": 103, "833": 103, "192533643803": 103, "73440": 103, "154": 103, "2367310967214": 103, "73920": 103, "155": 103, "027337432633": 103, "74400": 103, "847": 103, "6213170291394": 103, "74880": 103, "157": 103, "883": 103, "55387018975": 103, "75360": 103, "888": 103, "4084908886016": 103, "75840": 103, "159": 103, "878": 103, "3560544642794": 103, "76320": 103, "160": 103, "8099320680594": 103, "76800": 103, "865": 103, "3342989956125": 103, "77280": 103, "162": 103, "868": 103, "7924805999716": 103, "77760": 103, "163": 103, "879": 103, "929282710091": 103, "78240": 103, "164": 103, "2971775291669": 103, "78720": 103, "165": 103, "906": 103, "4353233136444": 103, "79200": 103, "166": 103, "889": 103, "0828926155659": 103, "79680": 103, "167": 103, "873": 103, "9690238366554": 103, "80160": 103, "168": 103, "877": 103, "7212806671587": 103, "80640": 103, "894": 103, "2714684714002": 103, "81120": 103, "170": 103, "904": 103, "8308346920122": 103, "81600": 103, "171": 103, "912": 103, "2855347087361": 103, "82080": 103, "172": 103, "909": 103, "33882150071": 103, "82560": 103, "173": 103, "897": 103, "4864706687231": 103, "83040": 103, "899": 103, "1382480787717": 103, "83520": 103, "4533159265078": 103, "84000": 103, "176": 103, "910": 103, "0445241340408": 103, "84480": 103, "177": 103, "922": 103, "005723922873": 103, "84960": 103, "178": 103, "928": 103, "7932859860817": 103, "85440": 103, "179": 103, "908": 103, "783058613329": 103, "85920": 103, "895": 103, "3797915865479": 103, "86400": 103, "181": 103, "859": 103, "4890207031966": 103, "86880": 103, "845": 103, "2343124097703": 103, "87360": 103, "183": 103, "839": 103, "1122789551176": 103, "87840": 103, "184": 103, "844": 103, "7127039219682": 103, "88320": 103, "846": 103, "3151169334295": 103, "88800": 103, "186": 103, "842": 103, "6175583860781": 103, "89280": 103, "187": 103, "5348864903817": 103, "89760": 103, "188": 103, "649272511435": 103, "90240": 103, "850": 103, "4409680273976": 103, "90720": 103, "190": 103, "5363180594184": 103, "91200": 103, "864": 103, "6976297034453": 103, "91680": 103, "1598273380728": 103, "92160": 103, "193": 103, "8863528631218": 103, "92640": 103, "194": 103, "880": [103, 105], "6299643478253": 103, "93120": 103, "195": 103, "887": 103, "41821530269": 103, "93600": 103, "196": 103, "893": 103, "1249868133013": 103, "94080": 103, "197": 103, "896": 103, "4293587625341": 103, "94560": 103, "198": 103, "194064688584": 103, "95040": 103, "199": 103, "901": 103, "6836008572618": 103, "95520": 103, "200": 103, "905": 103, "9720995421688": 103, "96000": 103, "201": 103, "915": 103, "0415219542131": 103, "96480": 103, "202": 103, "8491612710968": 103, "96960": 103, "203": 103, "5235691609382": 103, "97440": 103, "066821525769": 103, "97920": 103, "205": 103, "6897456054767": 103, "98400": 103, "206": 103, "5696263301422": 103, "98880": 103, "1574968563857": 103, "99360": 103, "208": 103, "914": 103, "8511270258749": 103, "99840": 103, "209": 103, "919": 103, "2598470161788": 103, "100320": 103, "931": 103, "6724515215465": 103, "100800": 103, "211": 103, "938": 103, "2402200850552": 103, "101280": 103, "212": 103, "943": 103, "4875208804775": 103, "101760": 103, "213": 103, "949": 103, "8135147561189": 103, "102240": 103, "214": 103, "955": 103, "7309221867911": 103, "102720": 103, "215": 103, "970": 103, "4592801029347": 103, "103200": 103, "974": 103, "074172962726": 103, "103680": 103, "217": 103, "1099965408358": 103, "104160": 103, "973": 103, "4666570148554": 103, "104640": 103, "219": 103, "7461092409185": 103, "105120": 103, "220": 103, "988": 103, "1624730606339": 103, "105600": 103, "221": 103, "986": 103, "9052574352414": 103, "106080": 103, "222": 103, "65235118233": 103, "106560": 103, "223": 103, "987": 103, "6559013720048": 103, "107040": 103, "992": 103, "0311000409187": 103, "107520": 103, "225": 103, "984": 103, "9431648604796": 103, "108000": 103, "980": 103, "0972109888816": 103, "108480": 103, "227": 103, "1343984234693": 103, "108960": 103, "228": 103, "3988313773265": 103, "109440": 103, "229": 103, "7939674138657": 103, "109920": 103, "230": 103, "997": 103, "9588361482485": 103, "110400": 103, "1004": 103, "1998163525403": 103, "110880": 103, "0024606528800506": 103, "010601159852741": 103, "0063622147724012": 103, "5347769260406494": 103, "9749472141265869": 103, "83063769340515": 103, "1312": 103, "0707387999137": 103, "1219": 103, "400193428071": 103, "63880606756764": 103, "title_f": [103, 109], "label_f": [103, 109], "tick_f": [103, 109], "legend_f": [103, 109], "img_format": [103, 109], "times_to_plot": 103, "ess_t_to_plot": 103, "restructur": 103, "easier": 103, "plot": [103, 104, 105, 107, 110, 111, 113], "figur": [103, 107, 108, 109, 112, 113, 114], "figsiz": [103, 109, 110, 111, 113], "titl": [103, 108, 109, 112], "runtim": [103, 109], "fontsiz": [103, 109, 111], "x_tick": 103, "x_axi": 103, "arang": [103, 113], "bar": 103, "hatch": 103, "label": [103, 107, 109, 110, 111, 112, 113, 114], "ylabel": [103, 107, 112], "xlabel": [103, 107, 112], "xtick": [103, 109], "ytick": [103, 109], "tight_layout": [103, 109, 110], "legend": [103, 107, 110, 111, 112, 113, 114], "savefig": 103, "benchmarkruntimeresult": 103, "benchmarkperformanceresult": 103, "doe": [103, 112], "against": 103, "modern": 103, "furthermor": 103, "dependend": 103, "main": 103, "script": 103, "much": 103, "quickli": [103, 105, 107], "fair": 103, "novel": 103, "access": 103, "via": 103, "kei": [103, 110], "n_col": [103, 109], "n_row": [103, 109], "subplot": [103, 109, 110, 111], "suptitl": [103, 109], "margin": [103, 105, 109], "bin": [103, 109, 110, 112, 113, 114], "hist": [103, 108, 109, 110, 112, 113, 114], "color": [103, 107, 111], "c0": 103, "c1": 103, "c2": 103, "figlegend": [103, 109], "rect": [103, 109], "03": [103, 109], "popular": [104, 117], "structur": 104, "mathemat": 104, "matric": 104, "whose": 104, "conveni": [104, 105, 109, 112], "verifi": 104, "5000": [104, 113], "stream": [104, 105, 111], "arrai": [104, 105, 106, 107, 108, 110, 112, 113], "00034304": 104, "00039326": 104, "00091834": 104, "00156559": 104, "5256": 104, "24117096": 104, "5350": 104, "23984171": 104, "4018": 104, "57055206": 104, "4524": 104, "92053992": 104, "convert": 104, "samples_ful": 104, "convert_to_full_spac": 104, "reshap": [104, 110, 112], "plot_pair": [104, 105], "convert_to_inference_data": 104, "size_squar": 104, "By": [105, 110], "usual": [105, 111], "fine": 105, "larg": [105, 110], "lot": 105, "becom": 105, "therefor": 105, "off": 105, "mcbackend": 105, "like": [105, 110], "databas": 105, "clickhouse_driv": 105, "hagelkorn": 105, "perfect": 105, "fly": 105, "directli": [105, 106], "order": [105, 112, 117], "server": 105, "purpos": [105, 106], "command": [105, 110], "curl": 105, "sh": 105, "block": 105, "port": 105, "8123": 105, "9000": 105, "caution": 105, "wai": [105, 106, 110], "product": 105, "robust": 105, "establish": 105, "connect": 105, "creat": [105, 108, 111, 112], "Then": 105, "db_host": 105, "localhost": 105, "db_pass": 105, "db_port": 105, "db_kwarg": 105, "host": 105, "password": 105, "client_main": 105, "client": 105, "db_name": 105, "testing_": 105, "client_sampl": 105, "clickhousebackend": 105, "mcbackendcallback": 105, "id": 105, "6y5dh7": 105, "simpl": [105, 106, 107, 112, 117], "gaussian": [105, 107, 110, 111, 112, 113, 117], "notic": [105, 110], "500": 105, "gaussianpropos": [105, 107, 111, 113], "stepsiz": [105, 110, 111, 112, 118], "result": [105, 110], "due": 105, "retriev": 105, "chain_idx": [105, 110], "get_run": 105, "run_id": 105, "get_chain": 105, "chain_metadata": 105, "get_draw": 105, "variable_": 105, "append": [105, 114], "sample_stat": 105, "00624689": 105, "00092455": 105, "00055598": 105, "860": 105, "58608515": 105, "803": 105, "39300557": 105, "30937015": 105, "dict_to_dataset": 105, "kind": 105, "kde": 105, "disconnect": 105, "empty_a": 106, "empty_b": 106, "empty_problem": 106, "is_polytope_empti": 106, "is_problem_polytope_empti": 106, "valid_a": 106, "valid_b": 106, "valid_problem": 106, "invalid_equality_constraint_matrix": 106, "invalid_equality_bound": 106, "There": 106, "add_equality_constraint": [106, 108], "rais": 106, "valueerror": 106, "manipul": 106, "try": [106, 112], "invalid_problem": 106, "a_eq": [106, 108], "b_eq": [106, 108], "except": 106, "infeas": [106, 118], "solver": 106, "statu": 106, "illustr": [107, 110], "1e5": 107, "d": [107, 118], "origin": [107, 111], "classic": 107, "isotrop": 107, "locat": 107, "outsid": [107, 118], "region": 107, "li": 107, "insid": 107, "geometr": 107, "easi": [107, 110], "vanish": 107, "henc": 107, "leav": 107, "stuck": 107, "precis": 107, "remain": 107, "contrast": [107, 109], "never": 107, "seen": 107, "monitor": 107, "lambda": [107, 110, 113], "add_box_constraint": [107, 112, 113], "1e3": [107, 112], "gaussianhitandrunpropos": [107, 113], "enumer": [107, 113], "001": [107, 113], "analyt": 107, "dpi": [107, 112], "linestyl": [107, 111], "dash": [107, 111], "grai": [107, 111], "3d": 108, "20000": 108, "26653144": 108, "11889648": 108, "17080836": 108, "9418255": 108, "33957506": 108, "98207648": 108, "80278535": 108, "47749555": 108, "12280485": 108, "8399288": 108, "11007866": 108, "90024278": 108, "88967784": 108, "61249626": 108, "00471622": 108, "87693032": 108, "54067729": 108, "94710096": 108, "constrained_rectangl": 108, "constrained_sampl": 108, "benchmarkingmultiphasemontecarlosampl": 109, "demonstr": 109, "preimplement": 109, "variant": 109, "everydai": 109, "techniqu": 110, "improv": 110, "modal": 110, "core": [110, 113, 118], "prior": 110, "difficult": 110, "pi_0": 110, "temperatur": 110, "beta": 110, "pi_": 110, "cdot": [110, 111], "cold": 110, "hot": 110, "ascend": 110, "beta_0": 110, "beta_1": 110, "beta_n": 110, "theses": 110, "hast": 110, "simpler": 110, "properti": [110, 112], "hotter": 110, "explor": 110, "mixtur": [110, 117], "distinct": 110, "mode": 110, "vanilla": 110, "troubl": 110, "captur": 110, "broadli": 110, "colder": 110, "ipyparallel": 110, "ipp": 110, "file": 110, "later": 110, "mpi": 110, "commun": 110, "synchron": 110, "exchang": 110, "reason": 110, "replica": 110, "below": 110, "run_tempered_chain": 110, "mpi4pi": 110, "gaussianmixtur": 110, "mu1": 110, "mu2": 110, "05": [110, 111], "cov": [110, 112], "ey": 110, "model1": 110, "model2": 110, "comm": 110, "comm_world": 110, "get_rank": 110, "syncrng": 110, "gaussiancoordinatehitandrunpropos": [110, 112], "paralleltemperingsyncrng": 110, "exchangeattemptprob": 110, "acc_rat": 110, "would": 110, "place": 110, "invok": 110, "mpiexec": 110, "line": 110, "n_temp": 110, "cluster": 110, "engin": 110, "rc": 110, "view": [110, 115], "broadcast_view": 110, "apply_sync": 110, "sort": 110, "hard": 110, "debug": 110, "good": [110, 111], "instanc": 110, "lt": [110, 112, 113], "launcher": 110, "mpienginesetlaunch": 110, "gt": [110, 112, 113], "00": 110, "09": 110, "stop": 110, "1686395190": 110, "exit_cod": 110, "pid": 110, "15143": 110, "identifi": [110, 117], "ipengin": 110, "1686395189": 110, "mxy1": 110, "13460": 110, "control": 110, "15084": 110, "ipcontrol": 110, "simpli": 110, "done": 110, "modul": 110, "spawn": 110, "550000": 110, "n_replica": 110, "starmap": 110, "1686395200": 110, "assembl": 110, "00129537": 110, "00123599": 110, "2691": 110, "51743799": 110, "2614": 110, "77034169": 110, "seem": 110, "fig": [110, 111], "sharei": 110, "set_titl": 110, "beta_": 110, "truncat": 111, "restrict": 111, "simplex": [111, 112], "begin": 111, "pmatrix": 111, "vdot": 111, "x_n": 111, "mathbb": 111, "sinc": 111, "worri": [111, 112], "further": [111, 117], "adjust": 111, "being": 111, "deviat": 111, "now": 111, "fun": 111, "assess": 111, "per": [111, 112], "1010": 111, "threshold": 111, "set_xlabel": 111, "set_ylabel": 111, "2878": 111, "2892": 111, "2938": 111, "2862": 111, "chrr": 112, "cheap": 112, "overli": 112, "sensit": 112, "won": 112, "custommodel": 112, "determin": 112, "domain": [112, 117], "NOT": 112, "inheret": 112, "anyth": 112, "accord": 112, "dummi": 112, "mu": 112, "inv": 112, "mandatori": 112, "put": 112, "2d": 112, "intial": 112, "__main__": 112, "0x7f09d89bdae0": 112, "preprocess": 112, "computation": 112, "influenc": 112, "strong": 112, "contact": 112, "abl": 112, "give": 112, "concret": 112, "advic": 112, "need": [112, 118], "gain": 112, "after": 112, "centr": 112, "could": 112, "even": 112, "take": 112, "care": 112, "tuning_target": 112, "acceptanceratetarget": 112, "thompsonsamplingtun": 112, "tuning_posterior": 112, "thread": 112, "Of": 112, "cours": 112, "vari": 112, "cpu": 112, "10000": 112, "rather": 112, "what": 112, "were": 112, "23018200000000003": 112, "230638": 112, "22964800000000005": 112, "231132": 112, "reach": 112, "strict": 112, "limit": 112, "01": 112, "400": 112, "minimum": 112, "00004714": 112, "9999576": 112, "35364": 112, "96731354": 112, "37847": 112, "86539577": 112, "count": 112, "truncatedgaussianpropos": 113, "csmmalapropos": 113, "billiardmalapropos": 113, "dikinwalkpropos": 113, "250_000": 113, "scatter": 113, "histtyp": 113, "stepfil": 113, "std": 113, "ddof": 113, "theori": 113, "003717328432895571": 113, "9993054829707392": 113, "0007920047053880569": 113, "9989467812622056": 113, "00407619332020888": 113, "9984964219897617": 113, "004213253764616939": 113, "9990148075099534": 113, "0035644886495046573": 113, "0030206724358808": 113, "panda": 114, "pd": 114, "num_chain": 114, "read_csv": 114, "test_data": 114, "samples_": 114, "csv": 114, "x0": 114, "part": 115, "known": 117, "ignor": 117, "rosenbrock": 117, "banana": 117, "least": 117, "aim": [117, 118], "might": [117, 118], "necessari": [117, 118], "signatur": 117, "consist": 117, "mainli": 117, "desir": [117, 118], "appli": 117, "precondit": 117, "untransform": 117, "lie": [117, 118], "xyz": 117, "pypi": 117, "project": 117, "particulari": 118, "design": 118, "develop": 118, "usabl": 118, "practition": 118, "filter": 118, "believ": 118, "sake": 118, "itself": 118, "nevertheless": 118, "rapid": 118, "prototyp": 118, "promis": 118, "instruct": 118, "ultim": 118, "wrap": 118, "pypropos": 118, "deleg": 118, "obvious": 118, "AND": 118, "TO": 118, "BE": 118, "rewritten": 118, "accept_propos": 118, "calculate_log_acceptance_prob": 118, "symmetr": 118, "infti": 118, "get_stat": 118, "set_stat": 118, "new_stat": 118, "get_propos": 118, "get_steps": 118, "set_steps": 118, "new_steps": 118, "get": 118, "get_nam": 118}, "objects": {"hopsy": [[4, 0, 1, "", "AcceptanceRateTarget"], [5, 0, 1, "", "AdaptiveMetropolisProposal"], [6, 0, 1, "", "BallWalkProposal"], [7, 0, 1, "", "CSmMALAProposal"], [8, 0, 1, "", "DikinWalkProposal"], [9, 0, 1, "", "ExpectedSquaredJumpDistanceTarget"], [10, 0, 1, "", "Gaussian"], [11, 0, 1, "", "GaussianCoordinateHitAndRunProposal"], [12, 0, 1, "", "GaussianHitAndRunProposal"], [13, 0, 1, "", "GaussianProposal"], [14, 0, 1, "", "MarkovChain"], [15, 0, 1, "", "Mixture"], [16, 0, 1, "", "Model"], [17, 0, 1, "", "Normal"], [18, 0, 1, "", "Problem"], [19, 0, 1, "", "Proposal"], [20, 0, 1, "", "PyModel"], [21, 0, 1, "", "PyProposal"], [22, 0, 1, "", "PyTuningTarget"], [23, 0, 1, "", "RandomNumberGenerator"], [24, 0, 1, "", "Rosenbrock"], [25, 0, 1, "", "ThompsonSamplingTuning"], [26, 0, 1, "", "TuningTarget"], [27, 0, 1, "", "Uniform"], [28, 0, 1, "", "UniformCoordinateHitAndRunProposal"], [29, 0, 1, "", "UniformHitAndRunProposal"], [30, 0, 1, "", "add_box_constraints"], [31, 0, 1, "", "compute_chebyshev_center"], [32, 0, 1, "", "ess"], [33, 0, 1, "", "mcse"], [34, 0, 1, "", "rhat"], [35, 0, 1, "", "round"], [36, 0, 1, "", "sample"], [37, 0, 1, "", "simplify"], [38, 0, 1, "", "tune"]], "hopsy.AdaptiveMetropolisProposal": [[39, 1, 1, "", "accept_proposal"], [40, 1, 1, "", "deepcopy"], [41, 1, 1, "", "propose"]], "hopsy.BallWalkProposal": [[42, 1, 1, "", "accept_proposal"], [43, 1, 1, "", "deepcopy"], [44, 1, 1, "", "propose"]], "hopsy.CSmMALAProposal": [[45, 1, 1, "", "accept_proposal"], [46, 1, 1, "", "deepcopy"], [47, 1, 1, "", "propose"]], "hopsy.DikinWalkProposal": [[48, 1, 1, "", "accept_proposal"], [49, 1, 1, "", "deepcopy"], [50, 1, 1, "", "propose"]], "hopsy.Gaussian": [[51, 1, 1, "", "compute_expected_fisher_information"], [52, 1, 1, "", "compute_log_likelihood_gradient"], [53, 1, 1, "", "compute_negative_log_likelihood"], [54, 1, 1, "", "log_curvature"], [55, 1, 1, "", "log_density"], [56, 1, 1, "", "log_gradient"]], "hopsy.GaussianCoordinateHitAndRunProposal": [[57, 1, 1, "", "accept_proposal"], [58, 1, 1, "", "deepcopy"], [59, 1, 1, "", "propose"]], "hopsy.GaussianHitAndRunProposal": [[60, 1, 1, "", "accept_proposal"], [61, 1, 1, "", "deepcopy"], [62, 1, 1, "", "propose"]], "hopsy.GaussianProposal": [[63, 1, 1, "", "accept_proposal"], [64, 1, 1, "", "deepcopy"], [65, 1, 1, "", "propose"]], "hopsy.Mixture": [[66, 1, 1, "", "compute_expected_fisher_information"], [67, 1, 1, "", "compute_log_likelihood_gradient"], [68, 1, 1, "", "compute_negative_log_likelihood"], [69, 1, 1, "", "log_curvature"], [70, 1, 1, "", "log_density"], [71, 1, 1, "", "log_gradient"]], "hopsy.Model": [[72, 1, 1, "", "compute_expected_fisher_information"], [73, 1, 1, "", "compute_log_likelihood_gradient"], [74, 1, 1, "", "compute_negative_log_likelihood"], [75, 1, 1, "", "log_curvature"], [76, 1, 1, "", "log_density"], [77, 1, 1, "", "log_gradient"]], "hopsy.Normal": [[78, 1, 1, "", "__call__"]], "hopsy.PyModel": [[79, 1, 1, "", "compute_expected_fisher_information"], [80, 1, 1, "", "compute_log_likelihood_gradient"], [81, 1, 1, "", "compute_negative_log_likelihood"], [82, 1, 1, "", "log_curvature"], [83, 1, 1, "", "log_density"], [84, 1, 1, "", "log_gradient"]], "hopsy.PyProposal": [[85, 1, 1, "", "accept_proposal"], [86, 1, 1, "", "deepcopy"], [87, 1, 1, "", "propose"]], "hopsy.RandomNumberGenerator": [[88, 1, 1, "", "__call__"]], "hopsy.Rosenbrock": [[89, 1, 1, "", "compute_expected_fisher_information"], [90, 1, 1, "", "compute_log_likelihood_gradient"], [91, 1, 1, "", "compute_negative_log_likelihood"], [92, 1, 1, "", "log_curvature"], [93, 1, 1, "", "log_density"], [94, 1, 1, "", "log_gradient"]], "hopsy.Uniform": [[95, 1, 1, "", "__call__"]], "hopsy.UniformCoordinateHitAndRunProposal": [[96, 1, 1, "", "accept_proposal"], [97, 1, 1, "", "deepcopy"], [98, 1, 1, "", "propose"]], "hopsy.UniformHitAndRunProposal": [[99, 1, 1, "", "accept_proposal"], [100, 1, 1, "", "deepcopy"], [101, 1, 1, "", "propose"]]}, "objtypes": {"0": "py:class", "1": "py:method"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"]}, "titleterms": {"exampl": [0, 106, 118], "first": [1, 108, 112], "step": 1, "instal": 2, "introduct": 3, "python": [3, 102], "implement": 3, "propos": [3, 19, 41, 44, 47, 50, 59, 62, 65, 87, 98, 101, 103, 118, 120], "model": [3, 16, 72, 73, 74, 75, 76, 77, 112, 117, 120], "hopsi": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 109, 112], "acceptanceratetarget": 4, "adaptivemetropolispropos": [5, 39, 40, 41], "ballwalkpropos": [6, 42, 43, 44], "csmmalapropos": [7, 45, 46, 47], "dikinwalkpropos": [8, 48, 49, 50], "expectedsquaredjumpdistancetarget": 9, "gaussian": [10, 51, 52, 53, 54, 55, 56], "gaussiancoordinatehitandrunpropos": [11, 57, 58, 59], "gaussianhitandrunpropos": [12, 60, 61, 62], "gaussianpropos": [13, 63, 64, 65], "markovchain": 14, "mixtur": [15, 66, 67, 68, 69, 70, 71], "normal": [17, 78], "problem": [18, 109, 117, 120], "pymodel": [20, 79, 80, 81, 82, 83, 84], "pypropos": [21, 85, 86, 87], "pytuningtarget": 22, "randomnumbergener": [23, 88], "rosenbrock": [24, 89, 90, 91, 92, 93, 94], "thompsonsamplingtun": 25, "tuningtarget": 26, "uniform": [27, 95], "uniformcoordinatehitandrunpropos": [28, 96, 97, 98], "uniformhitandrunpropos": [29, 99, 100, 101], "add_box_constraint": 30, "compute_chebyshev_cent": 31, "ess": 32, "mcse": 33, "rhat": 34, "round": 35, "sampl": [36, 102, 103, 107, 108, 109, 112, 113, 118], "simplifi": 37, "tune": [38, 119, 120], "accept_propos": [39, 42, 45, 48, 57, 60, 63, 85, 96, 99], "deepcopi": [40, 43, 46, 49, 58, 61, 64, 86, 97, 100], "compute_expected_fisher_inform": [51, 66, 72, 79, 89], "compute_log_likelihood_gradi": [52, 67, 73, 80, 90], "compute_negative_log_likelihood": [53, 68, 74, 81, 91], "log_curvatur": [54, 69, 75, 82, 92], "log_dens": [55, 70, 76, 83, 93], "log_gradi": [56, 71, 77, 84, 94], "__call__": [78, 88, 95], "highli": 102, "optim": 102, "polytop": [102, 104, 106], "further": 102, "resourc": 102, "benchmark": 103, "multiphas": [103, 109], "mont": [103, 109, 118], "carlo": [103, 109, 118], "motiv": 103, "preimplement": 103, "background": 103, "custom": 103, "more": 103, "complex": 103, "scheme": 103, "helper": 103, "function": 103, "paramet": 103, "visual": [103, 109], "result": 103, "conclus": 103, "appendix": 103, "birkhoff": 104, "callback": 105, "set": 105, "up": 105, "clickhous": 105, "check": 106, "feasibl": 106, "1": 106, "empti": 106, "x": 106, "2": [106, 108], "valid": 106, "0": 106, "3": 106, "invalid": 106, "5": [106, 108], "constrain": 107, "without": 108, "equal": 108, "constraint": 108, "now": 108, "rectangl": 108, "2d": 108, "fix": 108, "third": 108, "dimens": 108, "demo": 109, "defin": 109, "run": 109, "parallel": 110, "temper": 110, "A": [111, 112], "quick": 111, "tutori": 111, "guid": [112, 115], "your": 112, "With": 112, "tmvn": 113, "user": 115, "post": 116, "process": 116, "refer": [116, 117, 118, 119, 120], "diagnost": [116, 120], "descript": 117, "linear": 117, "transform": 117, "markov": [118, 120], "chain": [118, 120], "distribut": 118, "code": 118, "random": [118, 120]}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"Examples": [[0, "examples"], [0, null]], "First Steps": [[1, "first-steps"], [1, null]], "Installation": [[2, "installation"]], "Introduction": [[3, "introduction"]], "Python-implemented proposals & models": [[3, "python-implemented-proposals-models"]], "hopsy.AcceptanceRateTarget": [[4, "hopsy-acceptanceratetarget"]], "hopsy.AdaptiveMetropolisProposal": [[5, "hopsy-adaptivemetropolisproposal"]], "hopsy.BallWalkProposal": [[6, "hopsy-ballwalkproposal"]], "hopsy.CSmMALAProposal": [[7, "hopsy-csmmalaproposal"]], "hopsy.DikinWalkProposal": [[8, "hopsy-dikinwalkproposal"]], "hopsy.ExpectedSquaredJumpDistanceTarget": [[9, "hopsy-expectedsquaredjumpdistancetarget"]], "hopsy.Gaussian": [[10, "hopsy-gaussian"]], "hopsy.GaussianCoordinateHitAndRunProposal": [[11, "hopsy-gaussiancoordinatehitandrunproposal"]], "hopsy.GaussianHitAndRunProposal": [[12, "hopsy-gaussianhitandrunproposal"]], "hopsy.GaussianProposal": [[13, "hopsy-gaussianproposal"]], "hopsy.MarkovChain": [[14, "hopsy-markovchain"]], "hopsy.Mixture": [[15, "hopsy-mixture"]], "hopsy.Model": [[16, "hopsy-model"]], "hopsy.Normal": [[17, "hopsy-normal"]], "hopsy.Problem": [[18, "hopsy-problem"]], "hopsy.Proposal": [[19, "hopsy-proposal"]], "hopsy.PyModel": [[20, "hopsy-pymodel"]], "hopsy.PyProposal": [[21, "hopsy-pyproposal"]], "hopsy.PyTuningTarget": [[22, "hopsy-pytuningtarget"]], "hopsy.RandomNumberGenerator": [[23, "hopsy-randomnumbergenerator"]], "hopsy.Rosenbrock": [[24, "hopsy-rosenbrock"]], "hopsy.ThompsonSamplingTuning": [[25, "hopsy-thompsonsamplingtuning"]], "hopsy.TuningTarget": [[26, "hopsy-tuningtarget"]], "hopsy.Uniform": [[27, "hopsy-uniform"]], "hopsy.UniformCoordinateHitAndRunProposal": [[28, "hopsy-uniformcoordinatehitandrunproposal"]], "hopsy.UniformHitAndRunProposal": [[29, "hopsy-uniformhitandrunproposal"]], "hopsy.add_box_constraints": [[30, "hopsy-add-box-constraints"]], "hopsy.compute_chebyshev_center": [[31, "hopsy-compute-chebyshev-center"]], "hopsy.ess": [[32, "hopsy-ess"]], "hopsy.mcse": [[33, "hopsy-mcse"]], "hopsy.rhat": [[34, "hopsy-rhat"]], "hopsy.round": [[35, "hopsy-round"]], "hopsy.sample": [[36, "hopsy-sample"]], "hopsy.simplify": [[37, "hopsy-simplify"]], "hopsy.tune": [[38, "hopsy-tune"]], "hopsy.AdaptiveMetropolisProposal.accept_proposal": [[39, "hopsy-adaptivemetropolisproposal-accept-proposal"]], "hopsy.AdaptiveMetropolisProposal.deepcopy": [[40, "hopsy-adaptivemetropolisproposal-deepcopy"]], "hopsy.AdaptiveMetropolisProposal.propose": [[41, "hopsy-adaptivemetropolisproposal-propose"]], "hopsy.BallWalkProposal.accept_proposal": [[42, "hopsy-ballwalkproposal-accept-proposal"]], "hopsy.BallWalkProposal.deepcopy": [[43, "hopsy-ballwalkproposal-deepcopy"]], "hopsy.BallWalkProposal.propose": [[44, "hopsy-ballwalkproposal-propose"]], "hopsy.CSmMALAProposal.accept_proposal": [[45, "hopsy-csmmalaproposal-accept-proposal"]], "hopsy.CSmMALAProposal.deepcopy": [[46, "hopsy-csmmalaproposal-deepcopy"]], "hopsy.CSmMALAProposal.propose": [[47, "hopsy-csmmalaproposal-propose"]], "hopsy.DikinWalkProposal.accept_proposal": [[48, "hopsy-dikinwalkproposal-accept-proposal"]], "hopsy.DikinWalkProposal.deepcopy": [[49, "hopsy-dikinwalkproposal-deepcopy"]], "hopsy.DikinWalkProposal.propose": [[50, "hopsy-dikinwalkproposal-propose"]], "hopsy.Gaussian.compute_expected_fisher_information": [[51, "hopsy-gaussian-compute-expected-fisher-information"]], "hopsy.Gaussian.compute_log_likelihood_gradient": [[52, "hopsy-gaussian-compute-log-likelihood-gradient"]], "hopsy.Gaussian.compute_negative_log_likelihood": [[53, "hopsy-gaussian-compute-negative-log-likelihood"]], "hopsy.Gaussian.log_curvature": [[54, "hopsy-gaussian-log-curvature"]], "hopsy.Gaussian.log_density": [[55, "hopsy-gaussian-log-density"]], "hopsy.Gaussian.log_gradient": [[56, "hopsy-gaussian-log-gradient"]], "hopsy.GaussianCoordinateHitAndRunProposal.accept_proposal": [[57, "hopsy-gaussiancoordinatehitandrunproposal-accept-proposal"]], "hopsy.GaussianCoordinateHitAndRunProposal.deepcopy": [[58, "hopsy-gaussiancoordinatehitandrunproposal-deepcopy"]], "hopsy.GaussianCoordinateHitAndRunProposal.propose": [[59, "hopsy-gaussiancoordinatehitandrunproposal-propose"]], "hopsy.GaussianHitAndRunProposal.accept_proposal": [[60, "hopsy-gaussianhitandrunproposal-accept-proposal"]], "hopsy.GaussianHitAndRunProposal.deepcopy": [[61, "hopsy-gaussianhitandrunproposal-deepcopy"]], "hopsy.GaussianHitAndRunProposal.propose": [[62, "hopsy-gaussianhitandrunproposal-propose"]], "hopsy.GaussianProposal.accept_proposal": [[63, "hopsy-gaussianproposal-accept-proposal"]], "hopsy.GaussianProposal.deepcopy": [[64, "hopsy-gaussianproposal-deepcopy"]], "hopsy.GaussianProposal.propose": [[65, "hopsy-gaussianproposal-propose"]], "hopsy.Mixture.compute_expected_fisher_information": [[66, "hopsy-mixture-compute-expected-fisher-information"]], "hopsy.Mixture.compute_log_likelihood_gradient": [[67, "hopsy-mixture-compute-log-likelihood-gradient"]], "hopsy.Mixture.compute_negative_log_likelihood": [[68, "hopsy-mixture-compute-negative-log-likelihood"]], "hopsy.Mixture.log_curvature": [[69, "hopsy-mixture-log-curvature"]], "hopsy.Mixture.log_density": [[70, "hopsy-mixture-log-density"]], "hopsy.Mixture.log_gradient": [[71, "hopsy-mixture-log-gradient"]], "hopsy.Model.compute_expected_fisher_information": [[72, "hopsy-model-compute-expected-fisher-information"]], "hopsy.Model.compute_log_likelihood_gradient": [[73, "hopsy-model-compute-log-likelihood-gradient"]], "hopsy.Model.compute_negative_log_likelihood": [[74, "hopsy-model-compute-negative-log-likelihood"]], "hopsy.Model.log_curvature": [[75, "hopsy-model-log-curvature"]], "hopsy.Model.log_density": [[76, "hopsy-model-log-density"]], "hopsy.Model.log_gradient": [[77, "hopsy-model-log-gradient"]], "hopsy.Normal.__call__": [[78, "hopsy-normal-call"]], "hopsy.PyModel.compute_expected_fisher_information": [[79, "hopsy-pymodel-compute-expected-fisher-information"]], "hopsy.PyModel.compute_log_likelihood_gradient": [[80, "hopsy-pymodel-compute-log-likelihood-gradient"]], "hopsy.PyModel.compute_negative_log_likelihood": [[81, "hopsy-pymodel-compute-negative-log-likelihood"]], "hopsy.PyModel.log_curvature": [[82, "hopsy-pymodel-log-curvature"]], "hopsy.PyModel.log_density": [[83, "hopsy-pymodel-log-density"]], "hopsy.PyModel.log_gradient": [[84, "hopsy-pymodel-log-gradient"]], "hopsy.PyProposal.accept_proposal": [[85, "hopsy-pyproposal-accept-proposal"]], "hopsy.PyProposal.deepcopy": [[86, "hopsy-pyproposal-deepcopy"]], "hopsy.PyProposal.propose": [[87, "hopsy-pyproposal-propose"]], "hopsy.RandomNumberGenerator.__call__": [[88, "hopsy-randomnumbergenerator-call"]], "hopsy.Rosenbrock.compute_expected_fisher_information": [[89, "hopsy-rosenbrock-compute-expected-fisher-information"]], "hopsy.Rosenbrock.compute_log_likelihood_gradient": [[90, "hopsy-rosenbrock-compute-log-likelihood-gradient"]], "hopsy.Rosenbrock.compute_negative_log_likelihood": [[91, "hopsy-rosenbrock-compute-negative-log-likelihood"]], "hopsy.Rosenbrock.log_curvature": [[92, "hopsy-rosenbrock-log-curvature"]], "hopsy.Rosenbrock.log_density": [[93, "hopsy-rosenbrock-log-density"]], "hopsy.Rosenbrock.log_gradient": [[94, "hopsy-rosenbrock-log-gradient"]], "hopsy.Uniform.__call__": [[95, "hopsy-uniform-call"]], "hopsy.UniformCoordinateHitAndRunProposal.accept_proposal": [[96, "hopsy-uniformcoordinatehitandrunproposal-accept-proposal"]], "hopsy.UniformCoordinateHitAndRunProposal.deepcopy": [[97, "hopsy-uniformcoordinatehitandrunproposal-deepcopy"]], "hopsy.UniformCoordinateHitAndRunProposal.propose": [[98, "hopsy-uniformcoordinatehitandrunproposal-propose"]], "hopsy.UniformHitAndRunProposal.accept_proposal": [[99, "hopsy-uniformhitandrunproposal-accept-proposal"]], "hopsy.UniformHitAndRunProposal.deepcopy": [[100, "hopsy-uniformhitandrunproposal-deepcopy"]], "hopsy.UniformHitAndRunProposal.propose": [[101, "hopsy-uniformhitandrunproposal-propose"]], "hopsy - Highly Optimized Polytope Sampling in Python": [[102, "hopsy-highly-optimized-polytope-sampling-in-python"]], "Further resources": [[102, "further-resources"]], "Benchmarking Multiphase Monte Carlo Sampling": [[103, "Benchmarking-Multiphase-Monte-Carlo-Sampling"]], "Motivation": [[103, "Motivation"]], "Preimplemented Multiphase sampling": [[103, "Preimplemented-Multiphase-sampling"]], "Background": [[103, "Background"]], "Custom proposals": [[103, "Custom-proposals"]], "More complex custom sampling schemes": [[103, "More-complex-custom-sampling-schemes"]], "Helper functions": [[103, "Helper-functions"]], "Benchmark parameters": [[103, "Benchmark-parameters"]], "Benchmarking": [[103, "Benchmarking"]], "Visualizing the results": [[103, "Visualizing-the-results"]], "Conclusion": [[103, "Conclusion"]], "Appendix": [[103, "Appendix"]], "Birkhoff polytope": [[104, "Birkhoff-polytope"]], "Callbacks": [[105, "Callbacks"]], "Setting up Clickhouse": [[105, "Setting-up-Clickhouse"]], "Checking polytope feasibility": [[106, "Checking-polytope-feasibility"]], "Example 1: empty polytope x < 1 and x > 2": [[106, "Example-1:-empty-polytope-x-<-1-and-x->-2"]], "Example 2: valid polytope x < 1 and x > 0": [[106, "Example-2:-valid-polytope-x-<-1-and-x->-0"]], "Example 3: invalid polytope x < 1 and x > 0 and x=5": [[106, "Example-3:-invalid-polytope-x-<-1-and-x->-0-and-x=5"]], "Constrained Sampling": [[107, "Constrained-Sampling"]], "First sample without equality constraints": [[108, "First-sample-without-equality-constraints"]], "Now constraint rectangle to 2D by fixing third dimension at 2.5": [[108, "Now-constraint-rectangle-to-2D-by-fixing-third-dimension-at-2.5"]], "Demo for Multiphase Monte Carlo in hopsy": [[109, "Demo-for-Multiphase-Monte-Carlo-in-hopsy"]], "define problem and run sampling": [[109, "define-problem-and-run-sampling"]], "visualize samples": [[109, "visualize-samples"]], "Parallel Tempering": [[110, "Parallel-Tempering"]], "A Quick Tutorial": [[111, "A-Quick-Tutorial"]], "A Guide to Sampling Your First Model With hopsy": [[112, "A-Guide-to-Sampling-Your-First-Model-With-hopsy"]], "TMVN Sampling": [[113, "TMVN-Sampling"]], "User Guide": [[115, "user-guide"], [115, null]], "Post-Processing": [[116, "post-processing"]], "Reference": [[116, "reference"], [117, "reference"], [118, "reference"], [119, "reference"], [120, "reference"]], "Diagnostics": [[116, "diagnostics"], [120, "diagnostics"]], "Problem Description": [[117, "problem-description"]], "Problem": [[117, "problem"], [117, "id2"], [120, "problem"]], "Linear Transformations": [[117, "linear-transformations"]], "Models": [[117, "models"], [120, "models"]], "Markov Chain Monte Carlo Sampling": [[118, "markov-chain-monte-carlo-sampling"]], "Markov Chains": [[118, "markov-chains"]], "Proposal Distributions": [[118, "proposal-distributions"]], "Example code": [[118, "example-code"]], "Proposals": [[118, "proposals"], [120, "proposals"]], "Markov Chain": [[118, "markov-chain"], [120, "markov-chain"]], "Random": [[118, "random"], [120, "random"]], "Tuning": [[119, "tuning"], [119, "id1"], [120, "tuning"]]}, "indexentries": {"acceptanceratetarget (class in hopsy)": [[4, "hopsy.AcceptanceRateTarget"]], "adaptivemetropolisproposal (class in hopsy)": [[5, "hopsy.AdaptiveMetropolisProposal"]], "ballwalkproposal (class in hopsy)": [[6, "hopsy.BallWalkProposal"]], "csmmalaproposal (class in hopsy)": [[7, "hopsy.CSmMALAProposal"]], "dikinwalkproposal (class in hopsy)": [[8, "hopsy.DikinWalkProposal"]], "expectedsquaredjumpdistancetarget (class in hopsy)": [[9, "hopsy.ExpectedSquaredJumpDistanceTarget"]], "gaussian (class in hopsy)": [[10, "hopsy.Gaussian"]], "gaussiancoordinatehitandrunproposal (class in hopsy)": [[11, "hopsy.GaussianCoordinateHitAndRunProposal"]], "gaussianhitandrunproposal (class in hopsy)": [[12, "hopsy.GaussianHitAndRunProposal"]], "gaussianproposal (class in hopsy)": [[13, "hopsy.GaussianProposal"]], "markovchain (class in hopsy)": [[14, "hopsy.MarkovChain"]], "mixture (class in hopsy)": [[15, "hopsy.Mixture"]], "model (class in hopsy)": [[16, "hopsy.Model"]], "normal (class in hopsy)": [[17, "hopsy.Normal"]], "problem (class in hopsy)": [[18, "hopsy.Problem"]], "proposal (class in hopsy)": [[19, "hopsy.Proposal"]], "pymodel (class in hopsy)": [[20, "hopsy.PyModel"]], "pyproposal (class in hopsy)": [[21, "hopsy.PyProposal"]], "pytuningtarget (class in hopsy)": [[22, "hopsy.PyTuningTarget"]], "randomnumbergenerator (class in hopsy)": [[23, "hopsy.RandomNumberGenerator"]], "rosenbrock (class in hopsy)": [[24, "hopsy.Rosenbrock"]], "thompsonsamplingtuning (class in hopsy)": [[25, "hopsy.ThompsonSamplingTuning"]], "tuningtarget (class in hopsy)": [[26, "hopsy.TuningTarget"]], "uniform (class in hopsy)": [[27, "hopsy.Uniform"]], "uniformcoordinatehitandrunproposal (class in hopsy)": [[28, "hopsy.UniformCoordinateHitAndRunProposal"]], "uniformhitandrunproposal (class in hopsy)": [[29, "hopsy.UniformHitAndRunProposal"]], "add_box_constraints (class in hopsy)": [[30, "hopsy.add_box_constraints"]], "compute_chebyshev_center (class in hopsy)": [[31, "hopsy.compute_chebyshev_center"]], "ess (class in hopsy)": [[32, "hopsy.ess"]], "mcse (class in hopsy)": [[33, "hopsy.mcse"]], "rhat (class in hopsy)": [[34, "hopsy.rhat"]], "round (class in hopsy)": [[35, "hopsy.round"]], "sample (class in hopsy)": [[36, "hopsy.sample"]], "simplify (class in hopsy)": [[37, "hopsy.simplify"]], "tune (class in hopsy)": [[38, "hopsy.tune"]], "accept_proposal() (hopsy.adaptivemetropolisproposal method)": [[39, "hopsy.AdaptiveMetropolisProposal.accept_proposal"]], "deepcopy() (hopsy.adaptivemetropolisproposal method)": [[40, "hopsy.AdaptiveMetropolisProposal.deepcopy"]], "propose() (hopsy.adaptivemetropolisproposal method)": [[41, "hopsy.AdaptiveMetropolisProposal.propose"]], "accept_proposal() (hopsy.ballwalkproposal method)": [[42, "hopsy.BallWalkProposal.accept_proposal"]], "deepcopy() (hopsy.ballwalkproposal method)": [[43, "hopsy.BallWalkProposal.deepcopy"]], "propose() (hopsy.ballwalkproposal method)": [[44, "hopsy.BallWalkProposal.propose"]], "accept_proposal() (hopsy.csmmalaproposal method)": [[45, "hopsy.CSmMALAProposal.accept_proposal"]], "deepcopy() (hopsy.csmmalaproposal method)": [[46, "hopsy.CSmMALAProposal.deepcopy"]], "propose() (hopsy.csmmalaproposal method)": [[47, "hopsy.CSmMALAProposal.propose"]], "accept_proposal() (hopsy.dikinwalkproposal method)": [[48, "hopsy.DikinWalkProposal.accept_proposal"]], "deepcopy() (hopsy.dikinwalkproposal method)": [[49, "hopsy.DikinWalkProposal.deepcopy"]], "propose() (hopsy.dikinwalkproposal method)": [[50, "hopsy.DikinWalkProposal.propose"]], "compute_expected_fisher_information() (hopsy.gaussian method)": [[51, "hopsy.Gaussian.compute_expected_fisher_information"]], "compute_log_likelihood_gradient() (hopsy.gaussian method)": [[52, "hopsy.Gaussian.compute_log_likelihood_gradient"]], "compute_negative_log_likelihood() (hopsy.gaussian method)": [[53, "hopsy.Gaussian.compute_negative_log_likelihood"]], "log_curvature() (hopsy.gaussian method)": [[54, "hopsy.Gaussian.log_curvature"]], "log_density() (hopsy.gaussian method)": [[55, "hopsy.Gaussian.log_density"]], "log_gradient() (hopsy.gaussian method)": [[56, "hopsy.Gaussian.log_gradient"]], "accept_proposal() (hopsy.gaussiancoordinatehitandrunproposal method)": [[57, "hopsy.GaussianCoordinateHitAndRunProposal.accept_proposal"]], "deepcopy() (hopsy.gaussiancoordinatehitandrunproposal method)": [[58, "hopsy.GaussianCoordinateHitAndRunProposal.deepcopy"]], "propose() (hopsy.gaussiancoordinatehitandrunproposal method)": [[59, "hopsy.GaussianCoordinateHitAndRunProposal.propose"]], "accept_proposal() (hopsy.gaussianhitandrunproposal method)": [[60, "hopsy.GaussianHitAndRunProposal.accept_proposal"]], "deepcopy() (hopsy.gaussianhitandrunproposal method)": [[61, "hopsy.GaussianHitAndRunProposal.deepcopy"]], "propose() (hopsy.gaussianhitandrunproposal method)": [[62, "hopsy.GaussianHitAndRunProposal.propose"]], "accept_proposal() (hopsy.gaussianproposal method)": [[63, "hopsy.GaussianProposal.accept_proposal"]], "deepcopy() (hopsy.gaussianproposal method)": [[64, "hopsy.GaussianProposal.deepcopy"]], "propose() (hopsy.gaussianproposal method)": [[65, "hopsy.GaussianProposal.propose"]], "compute_expected_fisher_information() (hopsy.mixture method)": [[66, "hopsy.Mixture.compute_expected_fisher_information"]], "compute_log_likelihood_gradient() (hopsy.mixture method)": [[67, "hopsy.Mixture.compute_log_likelihood_gradient"]], "compute_negative_log_likelihood() (hopsy.mixture method)": [[68, "hopsy.Mixture.compute_negative_log_likelihood"]], "log_curvature() (hopsy.mixture method)": [[69, "hopsy.Mixture.log_curvature"]], "log_density() (hopsy.mixture method)": [[70, "hopsy.Mixture.log_density"]], "log_gradient() (hopsy.mixture method)": [[71, "hopsy.Mixture.log_gradient"]], "compute_expected_fisher_information() (hopsy.model method)": [[72, "hopsy.Model.compute_expected_fisher_information"]], "compute_log_likelihood_gradient() (hopsy.model method)": [[73, "hopsy.Model.compute_log_likelihood_gradient"]], "compute_negative_log_likelihood() (hopsy.model method)": [[74, "hopsy.Model.compute_negative_log_likelihood"]], "log_curvature() (hopsy.model method)": [[75, "hopsy.Model.log_curvature"]], "log_density() (hopsy.model method)": [[76, "hopsy.Model.log_density"]], "log_gradient() (hopsy.model method)": [[77, "hopsy.Model.log_gradient"]], "__call__() (hopsy.normal method)": [[78, "hopsy.Normal.__call__"]], "compute_expected_fisher_information() (hopsy.pymodel method)": [[79, "hopsy.PyModel.compute_expected_fisher_information"]], "compute_log_likelihood_gradient() (hopsy.pymodel method)": [[80, "hopsy.PyModel.compute_log_likelihood_gradient"]], "compute_negative_log_likelihood() (hopsy.pymodel method)": [[81, "hopsy.PyModel.compute_negative_log_likelihood"]], "log_curvature() (hopsy.pymodel method)": [[82, "hopsy.PyModel.log_curvature"]], "log_density() (hopsy.pymodel method)": [[83, "hopsy.PyModel.log_density"]], "log_gradient() (hopsy.pymodel method)": [[84, "hopsy.PyModel.log_gradient"]], "accept_proposal() (hopsy.pyproposal method)": [[85, "hopsy.PyProposal.accept_proposal"]], "deepcopy() (hopsy.pyproposal method)": [[86, "hopsy.PyProposal.deepcopy"]], "propose() (hopsy.pyproposal method)": [[87, "hopsy.PyProposal.propose"]], "__call__() (hopsy.randomnumbergenerator method)": [[88, "hopsy.RandomNumberGenerator.__call__"]], "compute_expected_fisher_information() (hopsy.rosenbrock method)": [[89, "hopsy.Rosenbrock.compute_expected_fisher_information"]], "compute_log_likelihood_gradient() (hopsy.rosenbrock method)": [[90, "hopsy.Rosenbrock.compute_log_likelihood_gradient"]], "compute_negative_log_likelihood() (hopsy.rosenbrock method)": [[91, "hopsy.Rosenbrock.compute_negative_log_likelihood"]], "log_curvature() (hopsy.rosenbrock method)": [[92, "hopsy.Rosenbrock.log_curvature"]], "log_density() (hopsy.rosenbrock method)": [[93, "hopsy.Rosenbrock.log_density"]], "log_gradient() (hopsy.rosenbrock method)": [[94, "hopsy.Rosenbrock.log_gradient"]], "__call__() (hopsy.uniform method)": [[95, "hopsy.Uniform.__call__"]], "accept_proposal() (hopsy.uniformcoordinatehitandrunproposal method)": [[96, "hopsy.UniformCoordinateHitAndRunProposal.accept_proposal"]], "deepcopy() (hopsy.uniformcoordinatehitandrunproposal method)": [[97, "hopsy.UniformCoordinateHitAndRunProposal.deepcopy"]], "propose() (hopsy.uniformcoordinatehitandrunproposal method)": [[98, "hopsy.UniformCoordinateHitAndRunProposal.propose"]], "accept_proposal() (hopsy.uniformhitandrunproposal method)": [[99, "hopsy.UniformHitAndRunProposal.accept_proposal"]], "deepcopy() (hopsy.uniformhitandrunproposal method)": [[100, "hopsy.UniformHitAndRunProposal.deepcopy"]], "propose() (hopsy.uniformhitandrunproposal method)": [[101, "hopsy.UniformHitAndRunProposal.propose"]]}})