Search.setIndex({"docnames": ["examples", "firststeps", "firststeps/installation", "firststeps/introduction", "generated/hopsy.AcceptanceRateTarget", "generated/hopsy.AdaptiveMetropolisProposal", "generated/hopsy.BallWalkProposal", "generated/hopsy.CSmMALAProposal", "generated/hopsy.DikinWalkProposal", "generated/hopsy.ExpectedSquaredJumpDistanceTarget", "generated/hopsy.Gaussian", "generated/hopsy.GaussianCoordinateHitAndRunProposal", "generated/hopsy.GaussianHitAndRunProposal", "generated/hopsy.GaussianProposal", "generated/hopsy.MarkovChain", "generated/hopsy.Mixture", "generated/hopsy.Model", "generated/hopsy.Normal", "generated/hopsy.Problem", "generated/hopsy.Proposal", "generated/hopsy.PyModel", "generated/hopsy.PyProposal", "generated/hopsy.PyTuningTarget", "generated/hopsy.RandomNumberGenerator", "generated/hopsy.Rosenbrock", "generated/hopsy.ThompsonSamplingTuning", "generated/hopsy.TuningTarget", "generated/hopsy.Uniform", "generated/hopsy.UniformCoordinateHitAndRunProposal", "generated/hopsy.UniformHitAndRunProposal", "generated/hopsy.add_box_constraints", "generated/hopsy.compute_chebyshev_center", "generated/hopsy.ess", "generated/hopsy.mcse", "generated/hopsy.rhat", "generated/hopsy.round", "generated/hopsy.sample", "generated/hopsy.simplify", "generated/hopsy.tune", "generated/objname/hopsy.AdaptiveMetropolisProposal.accept_proposal", "generated/objname/hopsy.AdaptiveMetropolisProposal.deepcopy", "generated/objname/hopsy.AdaptiveMetropolisProposal.propose", "generated/objname/hopsy.BallWalkProposal.accept_proposal", "generated/objname/hopsy.BallWalkProposal.deepcopy", "generated/objname/hopsy.BallWalkProposal.propose", "generated/objname/hopsy.CSmMALAProposal.accept_proposal", "generated/objname/hopsy.CSmMALAProposal.deepcopy", "generated/objname/hopsy.CSmMALAProposal.propose", "generated/objname/hopsy.DikinWalkProposal.accept_proposal", "generated/objname/hopsy.DikinWalkProposal.deepcopy", "generated/objname/hopsy.DikinWalkProposal.propose", "generated/objname/hopsy.Gaussian.compute_expected_fisher_information", "generated/objname/hopsy.Gaussian.compute_log_likelihood_gradient", "generated/objname/hopsy.Gaussian.compute_negative_log_likelihood", "generated/objname/hopsy.Gaussian.grad_log_density", "generated/objname/hopsy.Gaussian.hessian", "generated/objname/hopsy.Gaussian.log_density", "generated/objname/hopsy.GaussianCoordinateHitAndRunProposal.accept_proposal", "generated/objname/hopsy.GaussianCoordinateHitAndRunProposal.deepcopy", "generated/objname/hopsy.GaussianCoordinateHitAndRunProposal.propose", "generated/objname/hopsy.GaussianHitAndRunProposal.accept_proposal", "generated/objname/hopsy.GaussianHitAndRunProposal.deepcopy", "generated/objname/hopsy.GaussianHitAndRunProposal.propose", "generated/objname/hopsy.GaussianProposal.accept_proposal", "generated/objname/hopsy.GaussianProposal.deepcopy", "generated/objname/hopsy.GaussianProposal.propose", "generated/objname/hopsy.Mixture.compute_expected_fisher_information", "generated/objname/hopsy.Mixture.compute_log_likelihood_gradient", "generated/objname/hopsy.Mixture.compute_negative_log_likelihood", "generated/objname/hopsy.Mixture.grad_log_density", "generated/objname/hopsy.Mixture.hessian", "generated/objname/hopsy.Mixture.log_density", "generated/objname/hopsy.Model.compute_expected_fisher_information", "generated/objname/hopsy.Model.compute_log_likelihood_gradient", "generated/objname/hopsy.Model.compute_negative_log_likelihood", "generated/objname/hopsy.Model.grad_log_density", "generated/objname/hopsy.Model.hessian", "generated/objname/hopsy.Model.log_density", "generated/objname/hopsy.Normal.__call__", "generated/objname/hopsy.PyModel.compute_expected_fisher_information", "generated/objname/hopsy.PyModel.compute_log_likelihood_gradient", "generated/objname/hopsy.PyModel.compute_negative_log_likelihood", "generated/objname/hopsy.PyModel.grad_log_density", "generated/objname/hopsy.PyModel.hessian", "generated/objname/hopsy.PyModel.log_density", "generated/objname/hopsy.PyProposal.accept_proposal", "generated/objname/hopsy.PyProposal.deepcopy", "generated/objname/hopsy.PyProposal.propose", "generated/objname/hopsy.RandomNumberGenerator.__call__", "generated/objname/hopsy.Rosenbrock.compute_expected_fisher_information", "generated/objname/hopsy.Rosenbrock.compute_log_likelihood_gradient", "generated/objname/hopsy.Rosenbrock.compute_negative_log_likelihood", "generated/objname/hopsy.Rosenbrock.grad_log_density", "generated/objname/hopsy.Rosenbrock.hessian", "generated/objname/hopsy.Rosenbrock.log_density", "generated/objname/hopsy.Uniform.__call__", "generated/objname/hopsy.UniformCoordinateHitAndRunProposal.accept_proposal", "generated/objname/hopsy.UniformCoordinateHitAndRunProposal.deepcopy", "generated/objname/hopsy.UniformCoordinateHitAndRunProposal.propose", "generated/objname/hopsy.UniformHitAndRunProposal.accept_proposal", "generated/objname/hopsy.UniformHitAndRunProposal.deepcopy", "generated/objname/hopsy.UniformHitAndRunProposal.propose", "index", "notebooks/BenchmarkingMultiphaseMonteCarloSampling", "notebooks/BirkhoffPolytope", "notebooks/Callbacks", "notebooks/ConstrainedSampling", "notebooks/EqualityConstraints", "notebooks/ParallelTempering", "notebooks/QuickTutorial", "notebooks/SamplingAdvice", "notebooks/TruncatedGaussianProposal", "notebooks/eval_pt_samples", "userguide", "userguide/postprocessing", "userguide/problem", "userguide/sampling", "userguide/tuning", "reference"], "filenames": ["examples.rst", "firststeps.rst", "firststeps/installation.rst", "firststeps/introduction.rst", "generated/hopsy.AcceptanceRateTarget.rst", "generated/hopsy.AdaptiveMetropolisProposal.rst", "generated/hopsy.BallWalkProposal.rst", "generated/hopsy.CSmMALAProposal.rst", "generated/hopsy.DikinWalkProposal.rst", "generated/hopsy.ExpectedSquaredJumpDistanceTarget.rst", "generated/hopsy.Gaussian.rst", "generated/hopsy.GaussianCoordinateHitAndRunProposal.rst", "generated/hopsy.GaussianHitAndRunProposal.rst", "generated/hopsy.GaussianProposal.rst", "generated/hopsy.MarkovChain.rst", "generated/hopsy.Mixture.rst", "generated/hopsy.Model.rst", "generated/hopsy.Normal.rst", "generated/hopsy.Problem.rst", "generated/hopsy.Proposal.rst", "generated/hopsy.PyModel.rst", "generated/hopsy.PyProposal.rst", "generated/hopsy.PyTuningTarget.rst", "generated/hopsy.RandomNumberGenerator.rst", "generated/hopsy.Rosenbrock.rst", "generated/hopsy.ThompsonSamplingTuning.rst", "generated/hopsy.TuningTarget.rst", "generated/hopsy.Uniform.rst", "generated/hopsy.UniformCoordinateHitAndRunProposal.rst", "generated/hopsy.UniformHitAndRunProposal.rst", "generated/hopsy.add_box_constraints.rst", "generated/hopsy.compute_chebyshev_center.rst", "generated/hopsy.ess.rst", "generated/hopsy.mcse.rst", "generated/hopsy.rhat.rst", "generated/hopsy.round.rst", "generated/hopsy.sample.rst", "generated/hopsy.simplify.rst", "generated/hopsy.tune.rst", "generated/objname/hopsy.AdaptiveMetropolisProposal.accept_proposal.rst", "generated/objname/hopsy.AdaptiveMetropolisProposal.deepcopy.rst", "generated/objname/hopsy.AdaptiveMetropolisProposal.propose.rst", "generated/objname/hopsy.BallWalkProposal.accept_proposal.rst", "generated/objname/hopsy.BallWalkProposal.deepcopy.rst", "generated/objname/hopsy.BallWalkProposal.propose.rst", "generated/objname/hopsy.CSmMALAProposal.accept_proposal.rst", "generated/objname/hopsy.CSmMALAProposal.deepcopy.rst", "generated/objname/hopsy.CSmMALAProposal.propose.rst", "generated/objname/hopsy.DikinWalkProposal.accept_proposal.rst", "generated/objname/hopsy.DikinWalkProposal.deepcopy.rst", "generated/objname/hopsy.DikinWalkProposal.propose.rst", "generated/objname/hopsy.Gaussian.compute_expected_fisher_information.rst", "generated/objname/hopsy.Gaussian.compute_log_likelihood_gradient.rst", "generated/objname/hopsy.Gaussian.compute_negative_log_likelihood.rst", "generated/objname/hopsy.Gaussian.grad_log_density.rst", "generated/objname/hopsy.Gaussian.hessian.rst", "generated/objname/hopsy.Gaussian.log_density.rst", "generated/objname/hopsy.GaussianCoordinateHitAndRunProposal.accept_proposal.rst", "generated/objname/hopsy.GaussianCoordinateHitAndRunProposal.deepcopy.rst", "generated/objname/hopsy.GaussianCoordinateHitAndRunProposal.propose.rst", "generated/objname/hopsy.GaussianHitAndRunProposal.accept_proposal.rst", "generated/objname/hopsy.GaussianHitAndRunProposal.deepcopy.rst", "generated/objname/hopsy.GaussianHitAndRunProposal.propose.rst", "generated/objname/hopsy.GaussianProposal.accept_proposal.rst", "generated/objname/hopsy.GaussianProposal.deepcopy.rst", "generated/objname/hopsy.GaussianProposal.propose.rst", "generated/objname/hopsy.Mixture.compute_expected_fisher_information.rst", "generated/objname/hopsy.Mixture.compute_log_likelihood_gradient.rst", "generated/objname/hopsy.Mixture.compute_negative_log_likelihood.rst", "generated/objname/hopsy.Mixture.grad_log_density.rst", "generated/objname/hopsy.Mixture.hessian.rst", "generated/objname/hopsy.Mixture.log_density.rst", "generated/objname/hopsy.Model.compute_expected_fisher_information.rst", "generated/objname/hopsy.Model.compute_log_likelihood_gradient.rst", "generated/objname/hopsy.Model.compute_negative_log_likelihood.rst", "generated/objname/hopsy.Model.grad_log_density.rst", "generated/objname/hopsy.Model.hessian.rst", "generated/objname/hopsy.Model.log_density.rst", "generated/objname/hopsy.Normal.__call__.rst", "generated/objname/hopsy.PyModel.compute_expected_fisher_information.rst", "generated/objname/hopsy.PyModel.compute_log_likelihood_gradient.rst", "generated/objname/hopsy.PyModel.compute_negative_log_likelihood.rst", "generated/objname/hopsy.PyModel.grad_log_density.rst", "generated/objname/hopsy.PyModel.hessian.rst", "generated/objname/hopsy.PyModel.log_density.rst", "generated/objname/hopsy.PyProposal.accept_proposal.rst", "generated/objname/hopsy.PyProposal.deepcopy.rst", "generated/objname/hopsy.PyProposal.propose.rst", "generated/objname/hopsy.RandomNumberGenerator.__call__.rst", "generated/objname/hopsy.Rosenbrock.compute_expected_fisher_information.rst", "generated/objname/hopsy.Rosenbrock.compute_log_likelihood_gradient.rst", "generated/objname/hopsy.Rosenbrock.compute_negative_log_likelihood.rst", "generated/objname/hopsy.Rosenbrock.grad_log_density.rst", "generated/objname/hopsy.Rosenbrock.hessian.rst", "generated/objname/hopsy.Rosenbrock.log_density.rst", "generated/objname/hopsy.Uniform.__call__.rst", "generated/objname/hopsy.UniformCoordinateHitAndRunProposal.accept_proposal.rst", "generated/objname/hopsy.UniformCoordinateHitAndRunProposal.deepcopy.rst", "generated/objname/hopsy.UniformCoordinateHitAndRunProposal.propose.rst", "generated/objname/hopsy.UniformHitAndRunProposal.accept_proposal.rst", "generated/objname/hopsy.UniformHitAndRunProposal.deepcopy.rst", "generated/objname/hopsy.UniformHitAndRunProposal.propose.rst", "index.rst", "notebooks/BenchmarkingMultiphaseMonteCarloSampling.ipynb", "notebooks/BirkhoffPolytope.ipynb", "notebooks/Callbacks.ipynb", "notebooks/ConstrainedSampling.ipynb", "notebooks/EqualityConstraints.ipynb", "notebooks/ParallelTempering.ipynb", "notebooks/QuickTutorial.ipynb", "notebooks/SamplingAdvice.ipynb", "notebooks/TruncatedGaussianProposal.ipynb", "notebooks/eval_pt_samples.ipynb", "userguide.rst", "userguide/postprocessing.rst", "userguide/problem.rst", "userguide/sampling.rst", "userguide/tuning.rst", "reference.rst"], "titles": ["Examples", "First Steps", "Installation", "Introduction", "hopsy.AcceptanceRateTarget", "hopsy.AdaptiveMetropolisProposal", "hopsy.BallWalkProposal", "hopsy.CSmMALAProposal", "hopsy.DikinWalkProposal", "hopsy.ExpectedSquaredJumpDistanceTarget", "hopsy.Gaussian", "hopsy.GaussianCoordinateHitAndRunProposal", "hopsy.GaussianHitAndRunProposal", "hopsy.GaussianProposal", "hopsy.MarkovChain", "hopsy.Mixture", "hopsy.Model", "hopsy.Normal", "hopsy.Problem", "hopsy.Proposal", "hopsy.PyModel", "hopsy.PyProposal", "hopsy.PyTuningTarget", "hopsy.RandomNumberGenerator", "hopsy.Rosenbrock", "hopsy.ThompsonSamplingTuning", "hopsy.TuningTarget", "hopsy.Uniform", "hopsy.UniformCoordinateHitAndRunProposal", "hopsy.UniformHitAndRunProposal", "hopsy.add_box_constraints", "hopsy.compute_chebyshev_center", "hopsy.ess", "hopsy.mcse", "hopsy.rhat", "hopsy.round", "hopsy.sample", "hopsy.simplify", "hopsy.tune", "hopsy.AdaptiveMetropolisProposal.accept_proposal", "hopsy.AdaptiveMetropolisProposal.deepcopy", "hopsy.AdaptiveMetropolisProposal.propose", "hopsy.BallWalkProposal.accept_proposal", "hopsy.BallWalkProposal.deepcopy", "hopsy.BallWalkProposal.propose", "hopsy.CSmMALAProposal.accept_proposal", "hopsy.CSmMALAProposal.deepcopy", "hopsy.CSmMALAProposal.propose", "hopsy.DikinWalkProposal.accept_proposal", "hopsy.DikinWalkProposal.deepcopy", "hopsy.DikinWalkProposal.propose", "hopsy.Gaussian.compute_expected_fisher_information", "hopsy.Gaussian.compute_log_likelihood_gradient", "hopsy.Gaussian.compute_negative_log_likelihood", "hopsy.Gaussian.grad_log_density", "hopsy.Gaussian.hessian", "hopsy.Gaussian.log_density", "hopsy.GaussianCoordinateHitAndRunProposal.accept_proposal", "hopsy.GaussianCoordinateHitAndRunProposal.deepcopy", "hopsy.GaussianCoordinateHitAndRunProposal.propose", "hopsy.GaussianHitAndRunProposal.accept_proposal", "hopsy.GaussianHitAndRunProposal.deepcopy", "hopsy.GaussianHitAndRunProposal.propose", "hopsy.GaussianProposal.accept_proposal", "hopsy.GaussianProposal.deepcopy", "hopsy.GaussianProposal.propose", "hopsy.Mixture.compute_expected_fisher_information", "hopsy.Mixture.compute_log_likelihood_gradient", "hopsy.Mixture.compute_negative_log_likelihood", "hopsy.Mixture.grad_log_density", "hopsy.Mixture.hessian", "hopsy.Mixture.log_density", "hopsy.Model.compute_expected_fisher_information", "hopsy.Model.compute_log_likelihood_gradient", "hopsy.Model.compute_negative_log_likelihood", "hopsy.Model.grad_log_density", "hopsy.Model.hessian", "hopsy.Model.log_density", "hopsy.Normal.__call__", "hopsy.PyModel.compute_expected_fisher_information", "hopsy.PyModel.compute_log_likelihood_gradient", "hopsy.PyModel.compute_negative_log_likelihood", "hopsy.PyModel.grad_log_density", "hopsy.PyModel.hessian", "hopsy.PyModel.log_density", "hopsy.PyProposal.accept_proposal", "hopsy.PyProposal.deepcopy", "hopsy.PyProposal.propose", "hopsy.RandomNumberGenerator.__call__", "hopsy.Rosenbrock.compute_expected_fisher_information", "hopsy.Rosenbrock.compute_log_likelihood_gradient", "hopsy.Rosenbrock.compute_negative_log_likelihood", "hopsy.Rosenbrock.grad_log_density", "hopsy.Rosenbrock.hessian", "hopsy.Rosenbrock.log_density", "hopsy.Uniform.__call__", "hopsy.UniformCoordinateHitAndRunProposal.accept_proposal", "hopsy.UniformCoordinateHitAndRunProposal.deepcopy", "hopsy.UniformCoordinateHitAndRunProposal.propose", "hopsy.UniformHitAndRunProposal.accept_proposal", "hopsy.UniformHitAndRunProposal.deepcopy", "hopsy.UniformHitAndRunProposal.propose", "hopsy - Highly Optimized Polytope Sampling in Python", "Benchmarking Multiphase Monte Carlo Sampling", "Birkhoff polytope", "Callbacks", "Constrained Sampling", "First sample without equality constraints", "Parallel Tempering", "A Quick Tutorial", "A Guide to Sampling Your First Model With hopsy", "TMVN Sampling", "&lt;no title&gt;", "User Guide", "Post-Processing", "Problem Description", "Markov Chain Monte Carlo Sampling", "Tuning", "Reference"], "terms": {"A": [0, 1, 24, 30, 31, 35, 102, 103, 104, 105, 106, 107, 108, 111, 115], "guid": [0, 1, 102], "sampl": [0, 1, 3, 14, 32, 33, 34, 37, 104, 105, 108, 109, 112, 113, 115], "your": [0, 1, 2, 54, 55, 69, 70, 72, 73, 75, 76, 82, 83, 92, 93, 102, 108], "first": [0, 36, 37, 102, 113], "model": [0, 1, 10, 15, 20, 51, 52, 53, 54, 55, 56, 66, 67, 68, 69, 70, 71, 79, 80, 81, 82, 83, 84, 92, 93, 94, 102, 103, 104, 105, 108, 109, 111, 116], "With": [0, 1, 102, 108], "hopsi": [0, 1, 2, 3, 103, 104, 105, 106, 107, 108, 109, 111, 113, 115, 116], "constrain": [0, 3, 30, 102, 107], "birkhoff": [0, 102, 103], "polytop": [0, 30, 31, 35, 37, 103, 109, 110, 115, 116], "parallel": [0, 14, 32, 33, 34, 36, 102, 109, 110], "temper": [0, 102], "The": [1, 10, 14, 15, 20, 31, 32, 34, 35, 36, 51, 52, 53, 54, 55, 56, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 103, 104, 106, 108, 109, 110, 115, 116], "contain": [1, 30, 31, 35, 36, 113, 115], "quick": [1, 102], "instal": [1, 102], "an": [1, 10, 102, 103, 108], "introduct": [1, 102], "problem": [1, 14, 30, 31, 35, 37, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 116], "solv": [1, 116], "tutori": [1, 102], "can": [2, 10, 14, 30, 36, 54, 55, 69, 70, 72, 73, 75, 76, 82, 83, 92, 93, 102, 103, 105, 106, 108, 110, 115], "easili": [2, 116], "from": [2, 3, 10, 16, 34, 36, 103, 104, 105, 108, 110, 112], "python": [2, 15, 20, 108, 115, 116], "packag": [2, 105], "index": 2, "us": [2, 3, 30, 32, 33, 34, 35, 36, 51, 52, 53, 54, 55, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 89, 90, 91, 92, 93, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116], "pip": [2, 102], "altern": 2, "you": [2, 3, 20, 30, 54, 55, 69, 70, 72, 73, 75, 76, 82, 83, 92, 93, 102, 103, 110, 115], "download": 2, "sourc": [2, 102], "code": [2, 102, 105, 108, 110], "our": [2, 102, 103], "github": [2, 32, 33, 34, 102], "repositori": 2, "git": 2, "clone": 2, "http": [2, 24, 32, 33, 34, 103, 105, 115], "com": [2, 105], "modsim": 2, "recurs": 2, "compil": 2, "either": 2, "binari": 2, "wheel": 2, "dep": 2, "standard": [2, 10, 33, 109], "cmake": 2, "routin": 2, "mkdir": 2, "build": [2, 103, 108], "releas": 2, "cd": 2, "make": [2, 113, 116], "note": [2, 32, 34, 51, 52, 53, 110], "howev": [2, 10, 103, 105, 115], "produc": [2, 36, 115], "actual": [2, 36], "dist": 2, "x": [2, 3, 15, 51, 52, 53, 54, 55, 56, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 102, 103, 104, 105, 108, 109, 111, 115, 116], "y": [2, 103, 116], "z": [2, 34], "tag": 2, "whl": 2, "where": [2, 3, 10, 32, 34, 102, 103], "version": 2, "depend": [2, 108, 115], "verison": 2, "environ": [2, 105], "For": [3, 32, 33, 34, 36, 54, 55, 69, 70, 72, 73, 75, 76, 82, 83, 92, 93, 102, 105, 108, 110, 115, 116], "high": [3, 105, 108], "flexibl": [3, 102, 103], "when": [3, 34, 37, 102, 105, 109, 110], "hop": [3, 20, 102, 103, 108, 115, 116], "we": [3, 10, 30, 103, 109, 110, 115, 116], "made": 3, "algorithm": [3, 102, 103, 106, 110, 115, 116], "well": [3, 103, 108, 110], "defin": [3, 10, 31, 35, 36, 37, 103, 108, 110], "likelihood": [3, 52, 53, 54, 67, 68, 69, 73, 82, 90, 91, 92, 110, 115, 116], "consid": [3, 10, 106], "metropoli": [3, 108, 116], "criterion": [3, 32], "alpha": [3, 103, 106, 108, 110, 111, 112], "theta": 3, "min": [3, 36, 103], "big": [3, 10], "1": [3, 10, 15, 30, 31, 32, 33, 34, 36, 51, 52, 53, 54, 55, 56, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 102, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116], "frac": [3, 32, 34, 103, 106, 116], "pi": [3, 108], "q": 3, "which": [3, 10, 30, 31, 32, 34, 35, 36, 37, 102, 103, 105, 106, 110, 115, 116], "comput": [3, 31, 32, 33, 34, 51, 52, 53, 54, 55, 66, 67, 68, 69, 70, 72, 73, 75, 76, 82, 83, 92, 93, 105, 108, 110, 115, 116], "accept": [3, 10, 36, 105, 106, 109, 110], "probabl": [3, 32, 52, 53, 67, 68, 106, 108], "move": [3, 106], "gener": [3, 32, 33, 34, 36, 66, 104, 105, 106, 108, 109, 110, 116], "i": [3, 10, 15, 30, 31, 32, 34, 36, 37, 54, 55, 56, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 82, 83, 84, 92, 93, 94, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 115, 116], "distribut": [3, 34, 105, 106, 108, 109, 115], "target": [3, 34, 102, 105, 108, 110, 115], "wish": 3, "draw": [3, 32, 36], "In": [3, 32, 33, 34, 103, 105, 106, 109, 110, 115], "assum": [3, 15, 106, 115], "exp": [3, 10, 108, 111], "f": [3, 10, 15, 67, 68, 103, 104, 105, 108], "neg": [3, 53, 68, 91, 110, 115], "log": [3, 52, 53, 54, 67, 68, 69, 73, 82, 90, 91, 92, 108, 110, 115], "have": [3, 30, 34, 36, 51, 52, 53, 105, 106, 108, 109, 110, 115], "provid": [3, 102, 103, 104, 115], "want": [3, 103, 110], "self": [3, 10, 15, 51, 52, 53, 54, 56, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 79, 80, 81, 82, 84, 89, 90, 91, 92, 94, 103, 105, 108, 110], "To": [3, 34], "read": 3, "more": [3, 16, 34, 102, 106, 110, 113, 115], "about": [3, 36, 109, 115], "detail": [3, 16, 113, 115], "how": [3, 16, 103], "custom": [3, 16, 54, 55, 56, 69, 70, 71, 72, 73, 74, 75, 76, 77, 82, 83, 84, 92, 93, 94, 102, 110, 115, 116], "pleas": [3, 102, 105, 115], "refer": [3, 24, 32, 33, 34, 37, 102, 108], "thi": [3, 10, 16, 30, 34, 35, 36, 51, 56, 66, 71, 74, 77, 84, 94, 102, 103, 105, 106, 108, 109, 110, 115, 116], "page": 3, "although": 3, "ship": [3, 115], "numer": 3, "optim": [3, 110, 115, 116], "work": [3, 16, 20, 102, 103, 110, 116], "linearili": [3, 102], "space": [3, 102, 103, 104, 108, 115], "written": 3, "c": [3, 102, 103, 112, 115, 116], "also": [3, 10, 30, 35, 36, 102, 103, 108, 110, 115, 116], "possibl": [3, 103, 108, 115, 116], "class": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 103, 104, 108, 110, 111, 115, 116], "attribut": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 20, 21, 23, 24, 25, 27, 28, 29, 36], "method": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 56, 66, 71, 74, 77, 84, 94, 103, 110, 115], "mean": [10, 30, 32, 33, 103, 105, 106, 108, 109, 110, 111, 115], "0": [10, 32, 33, 34, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116], "covari": [10, 51, 108], "inact": 10, "invari": [10, 115], "some": [10, 54, 55, 69, 70, 72, 73, 75, 76, 82, 83, 92, 93, 103, 106, 109, 115, 116], "dimens": [10, 24, 30, 37, 51, 52, 53, 105, 106, 115], "input": [10, 51, 52, 53, 54, 55, 56, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 115], "vector": [10, 30, 31, 35, 51, 52, 53, 54, 55, 56, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 110, 115], "As": [10, 103, 116], "exampl": [10, 102, 103, 105, 106, 109, 110], "one": [10, 34, 103, 110], "dimension": [10, 24, 54, 55, 69, 70, 72, 73, 75, 76, 82, 83, 92, 93, 104, 105, 109], "squar": [10, 104], "exponenti": 10, "function": [10, 16, 20, 24, 30, 32, 35, 52, 53, 67, 68, 102, 108, 110, 115, 116], "two": [10, 32, 34, 36, 103, 105, 108], "variabl": 10, "x_1": [10, 109], "x_2": 10, "2": [10, 32, 103, 104, 105, 106, 108, 109, 110, 111], "under": 10, "second": [10, 36, 107], "sai": 10, "compon": [10, 15, 67, 68, 115], "degener": 10, "multivari": [10, 51, 52, 53, 115], "regular": 10, "n": [10, 15, 30, 31, 32, 33, 34, 51, 52, 53, 54, 55, 56, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 92, 93, 94, 103, 104, 106, 108, 109], "k": [10, 32, 51, 52, 53, 106, 111], "ha": [10, 34, 36, 51, 52, 53, 103, 105, 106, 108, 110, 115, 116], "its": [10, 15, 106, 110], "ar": [10, 15, 16, 30, 32, 33, 34, 36, 103, 104, 105, 108, 110, 115, 116], "technic": [10, 108], "realiz": 10, "remov": [10, 30, 37, 105], "row": [10, 30, 54, 55, 69, 70, 72, 73, 75, 76, 82, 83, 92, 93, 104], "column": [10, 103, 104], "matrix": [10, 30, 31, 35, 51, 55, 70, 72, 76, 83, 89, 93, 115], "correspond": [10, 116], "basic": [10, 32], "construct": [10, 14, 103, 108], "unlik": [10, 108], "still": [10, 16, 32, 51, 52, 53, 110], "onli": [10, 32, 33, 34, 102, 103, 104, 105, 106, 107, 110, 111], "pass": [10, 14, 20, 31, 32, 33, 34, 36, 105, 108, 115], "empti": 10, "list": [10, 14, 15, 36, 103, 105], "common": [10, 109, 115], "paramet": [10, 15, 30, 31, 32, 33, 34, 35, 36, 37, 51, 52, 53, 54, 55, 66, 67, 68, 69, 70, 72, 73, 75, 76, 79, 80, 81, 82, 83, 89, 90, 91, 92, 93, 104, 105, 106, 107, 108, 110, 111], "numpi": [10, 30, 31, 32, 33, 34, 36, 51, 52, 53, 54, 55, 56, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 103, 104, 105, 106, 107, 108, 110, 111, 116], "ndarrai": [10, 30, 31, 32, 33, 34, 36, 51, 52, 53, 54, 55, 56, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 103, 116], "int": [10, 30, 32, 33, 34, 36, 103, 108], "so": [10, 15, 16, 32, 33, 34], "entri": 10, "should": [10, 16, 30, 31, 34, 35, 37, 56, 71, 74, 77, 84, 94, 110, 115, 116], "between": [10, 34], "propos": [14, 16, 36, 54, 55, 69, 70, 72, 73, 75, 76, 82, 83, 92, 93, 102, 105, 106, 108, 109, 110, 111], "gaussianhitandrun": 14, "starting_point": [14, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "none": [14, 15, 32, 33, 34, 36, 66, 103, 105, 111, 116], "given": [14, 15, 20, 103, 108, 109], "object": [14, 15, 20, 102, 110, 115], "markov": [14, 33, 36, 102, 103, 106, 108, 109, 110, 113], "chain": [14, 32, 33, 34, 36, 102, 103, 105, 106, 108, 109, 110, 111, 113], "keep": 14, "track": 14, "intern": [14, 116], "state": [14, 36, 103, 106, 108, 109, 115, 116], "select": [14, 32, 33, 34, 105], "mechan": [14, 16], "see": [14, 16, 32, 34, 103, 106], "argument": 14, "sever": 14, "them": [14, 103, 110], "weight": [15, 67, 68, 115], "sum": [15, 67, 68, 104], "unnorm": [15, 52, 53, 54, 67, 68, 69, 73, 75, 82, 90, 91, 92], "densiti": [15, 52, 53, 67, 68, 103, 106, 108, 110, 111, 112], "sum_": [15, 32, 67, 68], "w_i": [15, 67, 68], "f_i": [15, 67, 68], "mai": [15, 30, 115], "arbitrari": [15, 20, 104, 115], "implement": [15, 16, 20, 32, 56, 66, 71, 74, 77, 84, 94, 102, 103, 105, 108, 110, 115, 116], "requir": [15, 16, 20, 37, 56, 71, 74, 77, 84, 94, 105, 116], "pymodel": [15, 115], "": [15, 30, 32, 35, 36, 102, 108, 115, 116], "float": [15, 30, 32, 33, 53, 56, 68, 71, 74, 77, 81, 84, 91, 94, 103, 116], "If": [15, 30, 34, 36, 54, 55, 69, 70, 72, 73, 75, 76, 82, 83, 92, 93, 102, 110], "thei": [15, 16, 110], "all": [15, 16, 30, 34, 36, 103, 106, 108, 110, 116], "base": [16, 102, 103, 108, 110], "while": [16, 103], "inherit": 16, "allow": [20, 102, 103, 108], "interfac": [20, 103, 110, 115], "correctli": 20, "compute_negative_log_likelihood": [20, 108, 110, 111, 115], "compute_log_likelihood_gradi": [20, 54, 69, 82, 92, 115], "compute_expected_fisher_inform": [20, 55, 70, 83, 93, 115], "multi": [24, 108], "2n": [24, 30, 89, 90, 91], "doi": 24, "org": [24, 32, 34, 115], "10": [24, 102, 103, 105, 106, 107, 108, 109, 110, 111], "1162": 24, "evco": 24, "2009": 24, "17": [24, 103], "3": [24, 103, 104, 105, 106, 107, 109, 110, 111], "437": 24, "lower_bound": 30, "_supportsarrai": 30, "dtype": 30, "_nestedsequ": 30, "bool": [30, 32, 36], "complex": 30, "str": [30, 32, 33, 34, 36, 103, 108, 111, 112, 116], "byte": 30, "upper_bound": 30, "simplifi": 30, "true": [30, 103, 105, 108, 110, 111, 112], "add": 30, "box": [30, 106], "constraint": [30, 35, 37, 110], "extend": 30, "b": [30, 31, 35, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115], "return": [30, 31, 32, 33, 34, 35, 36, 37, 51, 52, 53, 54, 55, 56, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 103, 105, 108, 110, 115, 116], "m": [30, 32, 53, 104, 109], "ad": 30, "naiv": 30, "do": [30, 109, 116], "neither": 30, "check": [30, 103, 110], "whether": 30, "alreadi": [30, 103, 105, 115], "somehow": 30, "bound": 30, "nor": 30, "veri": [30, 106, 108, 109], "same": [30, 103, 106, 108], "exist": [30, 66, 103], "redund": [30, 35, 37], "effici": [30, 37, 102, 103, 108, 110], "polyround": [30, 35, 37, 103, 115], "toolbox": [30, 115], "round": [30, 37, 103, 104, 110, 115], "both": [30, 103], "everi": [30, 32, 33, 34, 36, 110], "lb": 30, "leq": [30, 31, 35, 102, 109, 115], "x_i": 30, "ub": 30, "appropri": 30, "length": 30, "lb_i": 30, "ub_i": 30, "ax": [30, 31, 35, 102, 108, 109, 110, 115], "float64": [30, 31, 55, 56, 70, 71, 72, 74, 76, 77, 79, 80, 81, 83, 84, 89, 90, 91, 93, 94], "specifi": 30, "lower": 30, "upper": 30, "type": [30, 31, 32, 33, 34, 35, 36, 37, 51, 52, 53, 54, 55, 56, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 103, 110, 115], "chebyshev": [31, 110], "center": [31, 103, 109], "midpoint": 31, "non": [31, 103, 104, 106, 107, 110, 111, 115], "uniqu": 31, "largest": 31, "inscrib": 31, "ball": 31, "data": [32, 33, 34, 105], "seri": [32, 33, 34, 109], "bulk": 32, "rel": [32, 34], "fals": [32, 36, 103, 105], "prob": [32, 33], "dask_kwarg": [32, 33, 34], "calcul": [32, 33, 34], "estim": [32, 34], "effect": [32, 34, 37, 106, 108, 110], "size": [32, 36, 104, 110], "mcmc": [32, 33, 34, 36, 105, 108, 109, 110], "shape": [32, 33, 34, 36, 103, 104, 110, 111, 116], "n_chain": [32, 33, 34, 36, 104, 105, 109], "n_draw": [32, 33, 34, 36], "dim": [32, 33, 34, 36, 103, 106, 111], "rang": [32, 33, 34, 103, 104, 105, 106, 108, 109, 110, 112], "default": [32, 33, 34, 105], "valu": [32, 33, 34, 36, 55, 56, 70, 71, 72, 74, 76, 77, 79, 80, 81, 83, 84, 93, 94, 103, 110], "onc": [32, 33, 34, 108], "whole": [32, 33, 34], "valid": [32, 33, 34], "tail": 32, "option": [32, 33, 36, 116], "quantil": [32, 33], "old": 32, "sd": [32, 33], "median": [32, 33], "mad": 32, "absolut": 32, "devianc": 32, "z_scale": [32, 34], "fold": [32, 34], "ident": [32, 34, 103, 106], "local": [32, 105], "ress": 32, "tupl": [32, 36, 105], "n_proc": [32, 33, 34, 36, 103, 104, 105], "combin": [32, 33, 34, 102, 115], "subprocess": [32, 33, 34, 108], "dict": [32, 33, 34, 36, 103, 105], "dask": [32, 33, 34], "relat": [32, 33, 34], "kwarg": [32, 33, 34], "wrap_xarray_ufunc": [32, 33, 34], "hat": [32, 34, 109], "_": [32, 103, 105, 106, 107, 108, 110, 111], "eff": 32, "n_": [32, 109], "mathit": [32, 103], "diagnost": [32, 34, 102, 103], "mn": 32, "tau": 32, "t": [32, 35, 105, 110, 111], "p": [32, 102, 103, 115, 116], "number": [32, 36, 54, 55, 69, 70, 72, 73, 75, 76, 82, 83, 92, 93, 108, 109, 110, 115], "rho": 32, "_t": 32, "_autocorrel": 32, "lag": 32, "last": [32, 103, 105], "integ": 32, "2k": 32, "posit": 32, "current": [32, 103, 116], "similar": 32, "stan": 32, "geyer": 32, "initi": [32, 34], "monoton": 32, "sequenc": [32, 108], "1992": [32, 34], "2011": 32, "vehtari": [32, 34], "et": [32, 34], "al": [32, 34], "2019": [32, 34], "arxiv": [32, 34], "ab": [32, 34, 103], "1903": [32, 34], "08008": [32, 34], "arviz": [32, 33, 34, 104, 105], "dev": [32, 33, 34], "io": [32, 33, 34], "api": [32, 33, 34, 102, 103, 115], "html": [32, 33, 34], "mc": [32, 104, 106, 107, 108, 110, 111], "doc": [32, 105], "2_18": 32, "manual": 32, "section": [32, 102, 103, 116], "15": [32, 103, 105, 108], "4": [32, 51, 52, 53, 54, 55, 66, 67, 68, 69, 70, 72, 73, 74, 79, 80, 81, 82, 83, 89, 90, 91, 92, 93, 103, 104, 105, 106, 108, 109, 110, 111], "gelman": [32, 34], "bda": [32, 34], "2014": [32, 34], "formula": 32, "11": [32, 103, 104, 105, 106, 107, 108, 110, 111], "8": [32, 103, 105, 108, 110, 111, 112], "error": 33, "statist": [33, 34, 102, 108, 109], "inform": [33, 36, 51, 55, 66, 70, 72, 76, 83, 89, 93, 102], "msce": 33, "dataset": [33, 34], "rank": [34, 108], "normal": [34, 103], "splitr": 34, "set": [34, 37, 103, 104, 106, 107, 108, 109, 110, 111, 115, 116], "trace": 34, "r": [34, 103, 106, 108, 109], "test": [34, 102, 103, 105, 115, 116], "lack": 34, "converg": [34, 54, 55, 69, 70, 72, 73, 75, 76, 82, 83, 92, 93, 103, 104, 108, 109, 110], "compar": [34, 103, 110, 111, 113], "varianc": 34, "multipl": [34, 105, 108], "within": [34, 108], "each": [34, 36, 55, 70, 72, 76, 83, 93, 108], "been": [34, 103, 110], "achiev": [34, 36], "most": [34, 105, 109, 110, 115], "detect": 34, "evid": 34, "nonconverg": 34, "start": [34, 102, 103, 105, 106, 108, 109, 110], "dispers": 34, "recommend": [34, 115], "split": 34, "potenti": [34, 109], "scale": [34, 109], "reduct": [34, 109], "factor": [34, 109], "v": 34, "w": 34, "posterior": [34, 105, 108], "pool": [34, 36, 108], "uniti": 34, "greater": [34, 103], "than": [34, 37, 103], "indic": [34, 109], "yet": 34, "over": [34, 110], "scipi": [34, 104], "stat": 34, "rankdata": 34, "transform": [34, 35, 103], "follow": [34, 105, 108, 109], "brook": 34, "1998": 34, "rubin": 34, "inequ": [35, 37, 109, 110, 115], "strip": 35, "unround": [35, 115], "shift": [35, 103, 115], "store": [35, 105, 116], "uniformproblem": 35, "Its": [35, 102], "left": 35, "hand": [35, 116], "side": 35, "oper": [35, 103], "right": [35, 105], "math": 35, "markov_chain": [36, 103, 108, 110], "rng": [36, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "n_sampl": [36, 102, 103, 104, 105, 107, 108, 109, 110], "thin": [36, 102, 103, 104, 105, 107, 109, 110], "respect": 36, "random": [36, 102, 103, 105, 109], "thu": [36, 106, 115, 116], "len": [36, 103, 106, 111], "match": 36, "markovchain": [36, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "simul": [36, 102, 110, 115], "randomnumbergener": [36, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "singl": [36, 108], "wa": [36, 115], "must": [36, 108], "discard": 36, "inbetween": 36, "save": [36, 105], "increas": [36, 106], "n_thread": [36, 110], "deprec": [36, 51, 52, 53, 54, 55, 66, 67, 68, 69, 70, 72, 73, 74, 79, 80, 81, 82, 83, 89, 90, 91, 92, 93, 116], "process": [36, 102, 108, 113], "multiprocess": [36, 108], "worker": 36, "record_meta": 36, "string": 36, "acceptance_r": [36, 103, 110], "record": 36, "here": [36, 108, 110], "e": [36, 103, 108, 116], "g": [36, 108, 116], "state_negative_log_likelihood": 36, "in_memori": [36, 105], "flag": 36, "enabl": [36, 108], "disabl": 36, "memori": [36, 105], "metadata": [36, 105], "callback": 36, "deriv": [36, 104], "observ": 36, "dure": [36, 103, 105], "run": [36, 103, 105, 106, 108, 110], "write": [36, 105], "obtain": 36, "onlin": 36, "perman": 36, "storag": [36, 105], "analysi": [36, 102], "hold": 36, "meta": [36, 104, 105], "without": 36, "rate": [36, 105, 106, 109, 110], "found": [36, 102, 103, 108], "becaus": [36, 37, 103, 108, 110], "typo": 36, "Will": 36, "refunct": 37, "equal": [37, 54, 55, 69, 70, 72, 73, 75, 76, 82, 83, 92, 93, 104, 108], "case": [37, 103, 105, 106, 108, 109, 110, 116], "width": 37, "less": [37, 108], "thresh": 37, "lp": 37, "singleton": 37, "simplif": 37, "typic": 37, "step": [37, 102, 110, 111, 113], "befor": [37, 103, 108], "It": [37, 102, 103, 104, 106], "call": [37, 103, 105, 108, 110, 116], "automat": 37, "hessian": [51, 66, 72, 79, 89], "instead": [51, 52, 53, 54, 55, 66, 67, 68, 69, 70, 72, 73, 74, 79, 80, 81, 82, 83, 89, 90, 91, 92, 93, 103, 116], "expect": [51, 55, 66, 70, 72, 76, 83, 89, 93, 106, 110], "fisher": [51, 55, 66, 70, 72, 76, 83, 89, 93], "turn": [51, 105], "out": 51, "just": [51, 54, 55, 69, 70, 72, 73, 75, 76, 82, 83, 92, 93], "reduc": [51, 103], "narrai": 51, "grad_log_dens": [52, 67, 73, 80, 90], "gradient": [52, 54, 55, 67, 69, 70, 72, 73, 75, 76, 82, 83, 90, 92, 93], "logarithm": [52, 53, 67, 68, 116], "log_dens": [53, 68, 74, 75, 81, 91], "help": [54, 55, 69, 70, 72, 73, 75, 76, 82, 83, 92, 93, 102], "faster": [54, 55, 69, 70, 72, 73, 75, 76, 82, 83, 92, 93, 108], "long": [54, 55, 69, 70, 72, 73, 75, 76, 82, 83, 92, 93, 106, 110], "too": [54, 55, 69, 70, 72, 73, 75, 76, 82, 83, 92, 93, 110], "slow": [54, 55, 69, 70, 72, 73, 75, 76, 82, 83, 92, 93], "fast": [54, 55, 69, 70, 72, 73, 75, 76, 82, 83, 92, 93, 105], "enough": [54, 55, 69, 70, 72, 73, 75, 76, 82, 83, 92, 93, 103], "zero": [54, 55, 69, 70, 72, 73, 75, 76, 82, 83, 92, 93, 103, 105, 106, 107, 111], "correct": [54, 55, 69, 70, 72, 73, 75, 76, 82, 83, 92, 93, 110, 115], "col": [55, 70, 72, 76, 83, 93], "param": [55, 56, 70, 71, 72, 74, 76, 77, 83, 84, 93, 94, 105], "rtype": [55, 56, 70, 71, 72, 74, 76, 77, 83, 84, 93, 94], "ani": [56, 71, 74, 77, 84, 94, 110, 116], "close": [66, 105, 106, 110], "form": [66, 102, 115, 116], "solut": 66, "nabla": 67, "compute_negative_log_likelihod": [74, 81], "scientif": 102, "tool": 102, "mont": [102, 113], "carlo": [102, 113], "convex": 102, "mathcal": [102, 115], "often": [102, 103, 115], "aris": [102, 104], "bayesian": 102, "metabol": 102, "flux": 102, "built": 102, "pybind11": 102, "power": 102, "goal": 102, "backend": [102, 105], "languag": 102, "whilst": 102, "maintain": 102, "comprehens": 102, "interoper": 102, "other": [102, 108, 110, 111], "librari": 102, "offer": [102, 105], "magnitud": 102, "special": [102, 106, 110], "sampler": [102, 103, 106, 111, 116], "similarili": [102, 116], "besid": 102, "few": [102, 109], "user": 102, "includ": [102, 109], "13": [102, 103, 105], "mathrm": 102, "bioreactor": 102, "kinet": 102, "physic": 102, "sir": 102, "import": [102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "task": 102, "especi": [102, 108], "expens": 102, "evalu": 102, "tune": [102, 110, 113], "hyperparamet": [102, 109], "thompson": 102, "approach": [102, 108], "perform": [102, 103, 110, 116], "differ": [102, 108, 110], "chapter": 102, "encount": 102, "bug": 102, "feel": [102, 110], "free": [102, 110], "open": 102, "issu": 102, "find": 102, "question": 102, "feedback": 102, "regard": 102, "visit": 102, "u": [102, 103, 110], "gitter": 102, "pip3": 102, "matplotlib": [102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "pyplot": [102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "plt": [102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "5": [102, 103, 106, 108, 110, 111, 112], "seed": [102, 103, 104, 105, 106, 108, 109, 110, 111], "42": [102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "accrat": [102, 106, 109, 111], "1000": [102, 103, 106, 109, 111], "content": 102, "descript": [102, 113], "post": [102, 113], "research": 103, "interest": [103, 115], "new": [103, 110, 116], "togeth": [103, 115, 116], "art": 103, "framework": 103, "conduct": 103, "comparison": 103, "focu": 103, "scaffold": 103, "o": 103, "show": [103, 104, 105, 106, 107, 108, 109, 110, 112], "notebook": [103, 108], "adapt": [103, 110], "plugin": 103, "report": 103, "strategi": [103, 108], "underli": 103, "idea": [103, 108, 116], "previou": [103, 110], "artifici": 103, "coordin": [103, 110], "hit": [103, 106, 110], "optgp": 103, "stabl": 103, "pubm": 103, "ncbi": 103, "nlm": 103, "nih": 103, "gov": 103, "28158334": 103, "those": [103, 116], "resurrect": 103, "shown": [103, 108], "better": [103, 108], "drop": [103, 105], "dagstuhl": 103, "de": 103, "opu": 103, "volltext": 103, "2021": 103, "13820": 103, "pdf": 103, "lipic": 103, "socg": 103, "21": 103, "np": [103, 104, 105, 106, 107, 108, 110, 111], "time": [103, 104, 105, 106, 108, 109], "yourself": 103, "small": [103, 105], "seamlessi": 103, "integr": 103, "workflow": 103, "overrelax": 103, "ui": 103, "adsab": 103, "harvard": 103, "edu": 103, "2015ijmpc": 103, "2650010d": 103, "abstract": 103, "overrelaxedhitandrunpropos": 103, "def": [103, 105, 108, 110], "__init__": [103, 108], "epsilon": [103, 108], "1e": 103, "direct": 103, "randn": 103, "linalg": [103, 110], "norm": 103, "axi": 103, "inverse_dist": 103, "nan_to_num": 103, "divid": 103, "forward_dist": 103, "max": 103, "backward_dist": 103, "l": 103, "t_1": 103, "sqrt": 103, "uniform": [103, 104], "t_0": 103, "addit": 103, "billiard": 103, "walk": 103, "suggest": [103, 110], "svd_round": 103, "concaten": 103, "n_dim": 103, "n_iter": 103, "stacked_sampl": 103, "vstack": 103, "vh": 103, "svd": 103, "rescal": 103, "mention": 103, "s_ratio": 103, "els": [103, 106, 111], "ones": [103, 108, 111], "rounding_matrix": 103, "transpos": 103, "dot": [103, 108, 111], "diag": 103, "sub_problem": 103, "apply_shift": 103, "apply_transform": 103, "execut": [103, 105], "run_multiphase_sampl": 103, "target_ess": 103, "steps_per_phas": 103, "limit_singular_ratio_valu": 103, "assert": [103, 105, 110], "iter": [103, 110], "sampling_tim": 103, "last_iteration_did_round": 103, "print": [103, 107, 109, 110, 111], "titer": 103, "internal_polytop": 103, "_sampl": 103, "end": [103, 108, 109], "measur": 103, "ts_ratio": 103, "next": [103, 105, 110], "j": [103, 105, 108], "tess": 103, "100": [103, 108, 111, 112], "back": [103, 104], "full": [103, 104, 115], "back_transform": 103, "run_sampl": 103, "6": [103, 104, 105, 108, 110, 111, 112], "rounded_problem": 103, "point": [103, 108, 110], "generate_polytop": 103, "name": [103, 116], "bp5": 103, "bp": [103, 104], "birkhoffpolytop": [103, 104], "mutable_class": 103, "parameter_nam": 103, "5d": 103, "elif": [103, 105], "e_coli": 103, "original_polytop": 103, "static_class": 103, "parse_sbml_stoichiometri": 103, "stoichiometrypars": 103, "parse_sbml_cobrapi": 103, "extern": 103, "resourc": 103, "e_coli_cor": 103, "xml": 103, "polyroundapi": 103, "simplify_polytop": 103, "transform_polytop": 103, "up": [103, 109, 113], "proposaltyp": 103, "billiardwalkpropos": 103, "chrrt": 103, "uniformcoordinatehitandrunpropos": [103, 104, 111], "ohrr": 103, "problems_to_benchmark": 103, "loop": 103, "ess_t": 103, "problem_select": 103, "item": [103, 111], "tpropos": 103, "reset": 103, "preprocessed_polytop": 103, "problem_nam": 103, "20": [103, 108], "chebi": 103, "compute_chebyshev_cent": [103, 104, 110], "flatten": [103, 105, 108, 111], "rhat": [103, 104, 105, 108, 109, 110], "ttime": 103, "usernam": [103, 104, 106, 107, 110, 111], "academ": [103, 104, 106, 107, 110, 111], "licens": [103, 104, 106, 107, 110, 111], "commerci": [103, 104, 106, 107, 110, 111], "expir": [103, 104, 106, 107, 110, 111], "2023": [103, 104, 106, 107, 110, 111], "30": [103, 104, 106, 107, 110, 111], "3847452299003389": 103, "231": 103, "4835868364245": 103, "627": 103, "6793244654275": 103, "990": 103, "5612889618237": 103, "1583": 103, "2881720652492": 103, "453": 103, "9004456107389": 103, "320": 103, "894": 103, "4609120329771": 103, "640": 103, "1321": 103, "6148361675992": 103, "960": 103, "7": [103, 105, 107, 108, 109, 110, 112], "625745323520432": 103, "6054662230477454": 103, "12": [103, 105, 108, 109, 110], "38432877661255": 103, "182005874239481": 103, "1280": 103, "401342018005563": 103, "1600": 103, "22": 103, "244281110746087": 103, "1920": 103, "25": [103, 108, 110, 111], "62949774599076": 103, "2240": 103, "34": [103, 105, 107], "04845549392683": 103, "2560": 103, "9": [103, 105, 108, 110], "45": 103, "30986010578385": 103, "2880": 103, "60": 103, "94902208036537": 103, "3200": 103, "80": 103, "49974823489278": 103, "3520": 103, "49": 103, "97771163146812": 103, "3840": 103, "71": 103, "80388733908671": 103, "4160": 103, "14": [103, 105, 106, 107, 109], "122": 103, "4001314499352": 103, "4480": 103, "133": [103, 105], "78822579318992": 103, "4800": 103, "16": [103, 111], "142": 103, "17921949774305": 103, "5120": 103, "149": 103, "61748340502388": 103, "5440": 103, "18": 103, "182": 103, "34634077280296": 103, "5760": 103, "19": 103, "178": 103, "68634332487036": 103, "6080": 103, "189": 103, "4045406530288": 103, "6400": 103, "17287087444478": 103, "6720": 103, "214": 103, "01648654224107": 103, "7040": 103, "23": 103, "203": 103, "17688287422175": 103, "7360": 103, "24": 103, "186": 103, "6080605897047": 103, "7680": 103, "207": 103, "50838526420483": 103, "8000": 103, "26": 103, "213": 103, "79453417004535": 103, "8320": 103, "27": 103, "219": 103, "96522885675455": 103, "8640": 103, "28": 103, "00320468397933": 103, "8960": 103, "29": 103, "229": 103, "17806011811587": 103, "9280": 103, "236": 103, "89728952606106": 103, "9600": 103, "31": 103, "251": 103, "53492550075143": 103, "9920": 103, "32": 103, "228": 103, "70971670541672": 103, "10240": 103, "33": 103, "232": 103, "14255820710176": 103, "10560": 103, "35035089363": 103, "10880": 103, "35": [103, 107], "238": 103, "13227599749655": 103, "11200": 103, "36": [103, 105, 107], "252": [103, 105], "40977955258555": 103, "11520": 103, "37": 103, "271": 103, "7049789684051": 103, "11840": 103, "38": [103, 107], "43163776402827": 103, "12160": 103, "39": [103, 105, 107, 108, 111], "277": 103, "3145362821676": 103, "12480": 103, "40": 103, "288": [103, 105], "70460644400725": 103, "12800": 103, "41": [103, 107], "0138079421149": 103, "13120": 103, "291": [103, 105], "24329556313114": 103, "13440": 103, "43": [103, 107], "306": [103, 105], "01256971648405": 103, "13760": 103, "44": 103, "347": 103, "4433073767895": 103, "14080": 103, "345": 103, "73058472149273": 103, "14400": 103, "46": 103, "402": 103, "2219867030997": 103, "14720": 103, "47": 103, "396": 103, "76500943644686": 103, "15040": 103, "48": 103, "368": 103, "76575241008146": 103, "15360": 103, "392": 103, "30164700619": 103, "15680": 103, "50": [103, 110, 111], "410": 103, "2366011190137": 103, "16000": 103, "51": 103, "441": 103, "6461313486626": 103, "16320": 103, "52": 103, "0733371644818": 103, "16640": 103, "53": 103, "468": 103, "732442074824": 103, "16960": 103, "54": 103, "486": 103, "4985515361956": 103, "17280": 103, "55": 103, "519": 103, "1807533773064": 103, "17600": 103, "56": 103, "526": 103, "0039144703743": 103, "17920": 103, "57": 103, "542": 103, "6627957629679": 103, "18240": 103, "58": 103, "564": 103, "6542865302788": 103, "18560": 103, "59": 103, "572": 103, "1605181538064": 103, "18880": 103, "582": 103, "9605183292837": 103, "19200": 103, "61": 103, "607": 103, "6319445348865": 103, "19520": 103, "62": 103, "617": 103, "7775496450698": 103, "19840": 103, "63": 103, "615": 103, "5620446086798": 103, "20160": 103, "64": 103, "621": 103, "7914271826387": 103, "20480": 103, "65": 103, "634": 103, "3810925490033": 103, "20800": 103, "66": 103, "652": 103, "7013511505703": 103, "21120": 103, "67": 103, "664": 103, "0200810675003": 103, "21440": 103, "68": 103, "685": 103, "1734889365622": 103, "21760": 103, "69": 103, "690": 103, "2429803532992": 103, "22080": 103, "70": 103, "700": 103, "5969984896539": 103, "22400": 103, "707": 103, "5300030315993": 103, "22720": 103, "72": 103, "712": 103, "0200695601641": 103, "23040": 103, "73": 103, "719": 103, "4777760952321": 103, "23360": 103, "74": 103, "726": 103, "6854100579153": 103, "23680": 103, "75": 103, "729": 103, "7764469907538": 103, "24000": 103, "76": 103, "749": 103, "9049885509074": 103, "24320": 103, "77": 103, "764": 103, "7278155614728": 103, "24640": 103, "78": 103, "772": 103, "4826595691761": 103, "24960": 103, "79": 103, "775": 103, "3396255287553": 103, "25280": 103, "785": 103, "3862092073803": 103, "25600": 103, "81": 103, "776": 103, "6369258349741": 103, "25920": 103, "82": 103, "807": 103, "3864377744391": 103, "26240": 103, "83": 103, "812": 103, "3774474945751": 103, "26560": 103, "84": 103, "810": 103, "6148666352443": 103, "26880": 103, "85": 103, "825": 103, "62219029761": 103, "27200": 103, "86": 103, "835": 103, "7092337458173": 103, "27520": 103, "87": 103, "850": 103, "0974246400841": 103, "27840": 103, "88": 103, "856": 103, "5489600687148": 103, "28160": 103, "89": 103, "885": 103, "8507476804983": 103, "28480": 103, "90": 103, "910": 103, "2524842863202": 103, "28800": 103, "91": 103, "927": 103, "415848100618": 103, "29120": 103, "92": 103, "931": 103, "8235433070624": 103, "29440": 103, "93": 103, "935": 103, "1144528214636": 103, "29760": 103, "94": 103, "968": 103, "5931352003619": 103, "30080": 103, "95": 103, "969": 103, "2722160601122": 103, "30400": 103, "96": 103, "986": 103, "7999600062252": 103, "30720": 103, "97": 103, "997": 103, "2739538863411": 103, "31040": 103, "98": 103, "305561805389": 103, "31360": 103, "99": 103, "1016": 103, "6394428035395": 103, "31680": 103, "0061219415504485": 103, "0038641732435272": 103, "0094257854838848": 103, "06821775436401367": 103, "9356920719146729": 103, "253354072570801": 103, "23209": 103, "32705607307": 103, "1412": 103, "446333400289": 103, "162": 103, "57506467814503": 103, "963156850679272": 103, "872243577042705": 103, "96780496221371": 103, "133013163411473": 103, "92514821626017": 103, "03213882586069": 103, "48072122188601": 103, "114165738738418": 103, "3472103713065406": 103, "8113104108883": 103, "1466424838886535": 103, "952": 103, "7823528588415": 103, "2089": 103, "437296408794": 103, "508": 103, "6356364335463": 103, "480": 103, "1079": 103, "4569141209104": 103, "776492135162716": 103, "167662736853401": 103, "056069168566689": 103, "1440": 103, "398902876392471": 103, "245304042818685": 103, "2400": 103, "168726784213288": 103, "73043196745499": 103, "3360": 103, "356181832325316": 103, "42195274182534": 103, "4320": 103, "16850733314359": 103, "57524465875833": 103, "5280": 103, "62612789837534": 103, "93473816812214": 103, "6240": 103, "08798638997315": 103, "27310498100584": 103, "7200": 103, "24442507446783": 103, "110": 103, "4156099692275": 103, "8160": 103, "121": 103, "31426064888853": 103, "132": 103, "61932128582418": 103, "9120": 103, "141": 103, "0655628782827": 103, "146": 103, "60715889511573": 103, "10080": 103, "159": 103, "8040645277806": 103, "170": 103, "26508887199415": 103, "11040": 103, "174": 103, "0608097706658": 103, "181": 103, "4891482809182": 103, "12000": 103, "190": 103, "5787357308853": 103, "212": 103, "05269870884433": 103, "12960": 103, "216": 103, "7154821077659": 103, "154": 103, "16746586802677": 103, "13920": 103, "152": 103, "37333380523785": 103, "173": 103, "66341302826484": 103, "14880": 103, "197": 103, "03570465163702": 103, "8657968735399": 103, "15840": 103, "209": 103, "7315161765984": 103, "131": 103, "55423339798966": 103, "16800": 103, "6167718486756": 103, "26867746721672": 103, "17760": 103, "50259658714803": 103, "2384974854968": 103, "18720": 103, "22793603309223": 103, "696471880515105": 103, "19680": 103, "092345894314036": 103, "85617007749494": 103, "20640": 103, "79057336510849": 103, "75721729194993": 103, "21600": 103, "134": [103, 105], "39499689992982": 103, "151": 103, "95008105224895": 103, "22560": 103, "153": 103, "14369148253127": 103, "156": 103, "006972943283": 103, "23520": 103, "28503347435532": 103, "127": 103, "74100165220875": 103, "24480": 103, "71655320308433": 103, "147": 103, "33104198243035": 103, "25440": 103, "137": [103, 105], "9514676930531": 103, "3453611877319": 103, "26400": 103, "25325873949635": 103, "19066914216077": 103, "27360": 103, "230": 103, "51311453590304": 103, "06411449329764": 103, "28320": 103, "243": 103, "1405245375716": 103, "668916184032": 103, "29280": 103, "242": 103, "13494330385038": 103, "248": 103, "11172742356032": 103, "30240": 103, "256": [103, 105], "3323419653533": 103, "266": 103, "2249489329944": 103, "31200": 103, "241": 103, "00698523153264": 103, "34284794675355": 103, "32160": 103, "233": 103, "3626938734582": 103, "32640": 103, "234": 103, "9255844935538": 103, "33120": 103, "61212200492133": 103, "33600": 103, "270": 103, "5394203766128": 103, "34080": 103, "60335448589865": 103, "34560": 103, "309": 103, "3500892806769": 103, "35040": 103, "311": 103, "12182362135474": 103, "35520": 103, "12628315641666": 103, "36000": 103, "348": 103, "7925620643069": 103, "36480": 103, "361": [103, 105], "6615823252901": 103, "36960": 103, "354": 103, "5376657353069": 103, "37440": 103, "4690816982753": 103, "37920": 103, "308": 103, "78208157119394": 103, "38400": 103, "282": 103, "2030283479515": 103, "38880": 103, "305": [103, 105], "6157190415213": 103, "39360": 103, "357": 103, "943938467633": 103, "39840": 103, "364": 103, "694681811208": 103, "40320": 103, "365": 103, "8206848631206": 103, "40800": 103, "380": 103, "86201316902765": 103, "41280": 103, "394": 103, "2609444706249": 103, "41760": 103, "395": [103, 105], "641061288681": 103, "42240": 103, "398": 103, "9979521266321": 103, "42720": 103, "393": 103, "15886380308433": 103, "43200": 103, "9086781978561": 103, "43680": 103, "4070361186469": 103, "44160": 103, "6467574974821": 103, "44640": 103, "413": 103, "63618561687514": 103, "45120": 103, "6841204910174": 103, "45600": 103, "403": 103, "5252280685143": 103, "46080": 103, "406": 103, "9465665057137": 103, "46560": 103, "414": [103, 105], "2390898395199": 103, "47040": 103, "427": 103, "10909891829476": 103, "47520": 103, "431": 103, "77120184396534": 103, "48000": 103, "101": 103, "430": 103, "48343182059574": 103, "48480": 103, "102": 103, "445": 103, "5670372425206": 103, "48960": 103, "103": 103, "456": 103, "2252520593618": 103, "49440": 103, "104": 103, "461": 103, "8073730309261": 103, "49920": 103, "105": 103, "449": 103, "51563861796734": 103, "50400": 103, "106": 103, "451": 103, "2125184778504": 103, "50880": 103, "107": 103, "448": 103, "34735897941584": 103, "51360": 103, "108": 103, "467": 103, "54932042622636": 103, "51840": 103, "109": 103, "477": 103, "24564649210555": 103, "52320": 103, "485": 103, "90243495163713": 103, "52800": 103, "111": [103, 105], "488": 103, "5346014571642": 103, "53280": 103, "112": 103, "497": 103, "74058989783674": 103, "53760": 103, "113": 103, "502": 103, "06771889721455": 103, "54240": 103, "114": 103, "504": 103, "2795752382087": 103, "54720": 103, "115": 103, "505": 103, "0741842859752": 103, "55200": 103, "116": 103, "513": 103, "4190058338743": 103, "55680": 103, "117": 103, "520": 103, "3964437744485": 103, "56160": 103, "118": 103, "527": 103, "0154600027546": 103, "56640": 103, "119": 103, "8240364046208": 103, "57120": 103, "120": 103, "522": 103, "9649235308951": 103, "57600": 103, "537": 103, "7889509188342": 103, "58080": 103, "538": 103, "263521252906": 103, "58560": 103, "123": 103, "548": 103, "296566485919": 103, "59040": 103, "124": 103, "550": 103, "5958656465868": 103, "59520": 103, "125": 103, "575": 103, "0410524675801": 103, "60000": 103, "126": 103, "581": 103, "0926810327787": 103, "60480": 103, "1841698676168": 103, "60960": 103, "128": 103, "567": 103, "4658416850558": 103, "61440": 103, "129": 103, "557": 103, "6083268019893": 103, "61920": 103, "130": 103, "547": 103, "0362688236758": 103, "62400": 103, "559": 103, "6885460444615": 103, "62880": 103, "570": 103, "3627161929511": 103, "63360": 103, "583": 103, "6928033131561": 103, "63840": 103, "603": 103, "0921748543786": 103, "64320": 103, "135": [103, 105], "619": 103, "976201196154": 103, "64800": 103, "136": [103, 105], "3629490349441": 103, "65280": 103, "604": 103, "880867411402": 103, "65760": 103, "138": 103, "612": 103, "0044266157959": 103, "66240": 103, "139": 103, "620": 103, "6843981200377": 103, "66720": 103, "140": 103, "623": 103, "336759218216": 103, "67200": 103, "636": 103, "3628799234094": 103, "67680": 103, "649": 103, "7697594130741": 103, "68160": 103, "143": 103, "650": 103, "5367049648278": 103, "68640": 103, "144": 103, "639": 103, "9466275638673": 103, "69120": 103, "145": 103, "2957466724021": 103, "69600": 103, "0153814658115": 103, "70080": 103, "626": 103, "9871491217674": 103, "70560": 103, "148": 103, "630": 103, "5099627978551": 103, "71040": 103, "641": 103, "475836513853": 103, "71520": 103, "150": 103, "647": 103, "0777591330285": 103, "72000": 103, "658": 103, "2180241625047": 103, "72480": 103, "4616871046815": 103, "72960": 103, "669": 103, "388023229061": 103, "73440": 103, "680": 103, "3659258749831": 103, "73920": 103, "155": 103, "687": 103, "1401822225786": 103, "74400": 103, "692": 103, "5701574201029": 103, "74880": 103, "157": 103, "696": 103, "9208505171567": 103, "75360": 103, "158": 103, "698": 103, "9831285938126": 103, "75840": 103, "701": 103, "7865933833568": 103, "76320": 103, "160": 103, "1668792764433": 103, "76800": 103, "161": 103, "717": 103, "8664150269951": 103, "77280": 103, "723": 103, "3685677781476": 103, "77760": 103, "163": 103, "6618355324545": 103, "78240": 103, "164": 103, "731": 103, "9046863723236": 103, "78720": 103, "165": 103, "734": 103, "6077846981581": 103, "79200": 103, "166": 103, "743": 103, "4587000835944": 103, "79680": 103, "167": 103, "5954998881085": 103, "80160": 103, "168": 103, "756": 103, "8026494121233": 103, "80640": 103, "169": 103, "748": 103, "2430131931433": 103, "81120": 103, "736": 103, "9373823565642": 103, "81600": 103, "171": 103, "738": 103, "7646863358979": 103, "82080": 103, "172": 103, "747": 103, "4466509312857": 103, "82560": 103, "759": 103, "2949604609098": 103, "83040": 103, "774": 103, "8756138451412": 103, "83520": 103, "175": 103, "783": 103, "7448844740625": 103, "84000": 103, "176": 103, "788": 103, "0867664178603": 103, "84480": 103, "177": 103, "811": 103, "3160190921128": 103, "84960": 103, "818": 103, "5318706982479": 103, "85440": 103, "179": 103, "815": 103, "8145301170484": 103, "85920": 103, "180": 103, "813": 103, "7085477182601": 103, "86400": 103, "645973893186": 103, "86880": 103, "829": 103, "759247582038": 103, "87360": 103, "183": 103, "840": 103, "9754865813895": 103, "87840": 103, "184": 103, "847": 103, "7761670199511": 103, "88320": 103, "185": 103, "849": 103, "3690799068195": 103, "88800": 103, "845": 103, "7500589106621": 103, "89280": 103, "187": 103, "841": 103, "9175659986442": 103, "89760": 103, "188": 103, "8926790802444": 103, "90240": 103, "862": 103, "8987969863543": 103, "90720": 103, "873": 103, "7681727158528": 103, "91200": 103, "191": 103, "878": 103, "1383620730409": 103, "91680": 103, "192": 103, "82537952647": 103, "92160": 103, "193": 103, "877": 103, "3322108327878": 103, "92640": 103, "194": 103, "879": 103, "344204024488": 103, "93120": 103, "195": 103, "882": 103, "487619738579": 103, "93600": 103, "196": 103, "891": 103, "3070115159609": 103, "94080": 103, "896": 103, "2654263339139": 103, "94560": 103, "198": 103, "901": 103, "6865332169081": 103, "95040": 103, "199": 103, "911": 103, "771093624819": 103, "95520": 103, "200": 103, "922": 103, "2760009235533": 103, "96000": 103, "201": 103, "4904575144362": 103, "96480": 103, "202": 103, "921": 103, "1875924603441": 103, "96960": 103, "0922740437478": 103, "97440": 103, "204": 103, "928": 103, "4435088190756": 103, "97920": 103, "205": 103, "934": 103, "2191465465089": 103, "98400": 103, "206": 103, "941": 103, "6035620608822": 103, "98880": 103, "7193125886082": 103, "99360": 103, "208": 103, "4504766392033": 103, "99840": 103, "507965036127": 103, "100320": 103, "210": [103, 105], "981": 103, "167921221783": 103, "100800": 103, "211": 103, "983": 103, "7435303124782": 103, "101280": 103, "3398433232712": 103, "101760": 103, "993": 103, "2330647065727": 103, "102240": 103, "994": 103, "0147757822937": 103, "102720": 103, "215": 103, "1002": 103, "9918608020398": 103, "103200": 103, "002332053243373": 103, "0106888666904759": 103, "0085877482689396": 103, "1041920185089111": 103, "9261925220489502": 103, "405820846557617": 103, "1892": 103, "2771233488422": 103, "1165": 103, "4778984102616": 103, "49318827796948": 103, "title_f": 103, "label_f": 103, "tick_f": 103, "legend_f": 103, "img_format": 103, "times_to_plot": 103, "ess_t_to_plot": 103, "restructur": 103, "easier": 103, "plot": [103, 104, 105, 106, 108, 109, 111], "figur": [103, 106, 107, 110, 111, 112], "figsiz": [103, 108, 109, 111], "titl": [103, 107, 110], "fontsiz": [103, 109], "x_tick": 103, "x_axi": 103, "arang": [103, 111], "bar": 103, "hatch": 103, "label": [103, 106, 108, 109, 110, 111, 112], "ylabel": [103, 106, 110], "xlabel": [103, 106, 110], "xtick": 103, "ytick": 103, "tight_layout": [103, 108], "legend": [103, 106, 108, 109, 110, 111, 112], "savefig": 103, "benchmarkruntimeresult": 103, "benchmarkperformanceresult": 103, "doe": [103, 110], "against": 103, "modern": 103, "furthermor": 103, "dependend": 103, "main": 103, "script": 103, "much": 103, "quickli": [103, 105, 106], "fair": 103, "novel": 103, "access": 103, "via": 103, "kei": [103, 108], "n_col": 103, "n_row": 103, "subplot": [103, 108, 109], "suptitl": 103, "margin": [103, 105], "bin": [103, 108, 110, 111, 112], "hist": [103, 107, 108, 110, 111, 112], "color": [103, 106, 109], "c0": 103, "c1": 103, "c2": 103, "figlegend": 103, "rect": 103, "03": 103, "popular": [104, 115], "structur": 104, "mathemat": 104, "matric": 104, "whose": 104, "conveni": [104, 105, 110], "verifi": 104, "5000": [104, 111], "stream": [104, 105, 109], "ess": [104, 105, 108, 110], "arrai": [104, 105, 106, 107, 108, 110, 111], "00034304": 104, "00039326": 104, "00091834": 104, "00156559": 104, "5256": 104, "24117096": 104, "5350": 104, "23984171": 104, "4018": 104, "57055206": 104, "4524": 104, "92053992": 104, "convert": 104, "samples_ful": 104, "convert_to_full_spac": 104, "reshap": [104, 108, 110], "plot_pair": [104, 105], "convert_to_inference_data": 104, "size_squar": 104, "By": [105, 108], "usual": [105, 109], "fine": 105, "larg": [105, 108], "lot": 105, "becom": 105, "therefor": 105, "off": 105, "mcbackend": 105, "like": [105, 108], "databas": 105, "clickhouse_driv": 105, "hagelkorn": 105, "perfect": 105, "fly": 105, "directli": 105, "order": [105, 110, 115], "server": 105, "purpos": 105, "command": [105, 108], "curl": 105, "sh": 105, "block": 105, "port": 105, "8123": 105, "9000": 105, "caution": 105, "wai": [105, 108], "product": 105, "robust": 105, "establish": 105, "connect": 105, "creat": [105, 107, 109, 110], "Then": 105, "db_host": 105, "localhost": 105, "db_pass": 105, "db_port": 105, "db_kwarg": 105, "host": 105, "password": 105, "client_main": 105, "client": 105, "db_name": 105, "testing_": 105, "client_sampl": 105, "fail": 105, "traceback": 105, "recent": 105, "file": [105, 108], "home": 105, "jadebeck": 105, "lib": 105, "python3": 105, "site": 105, "py": 105, "line": [105, 108], "_init_connect": 105, "325": 105, "socket": 105, "_create_socket": 105, "297": 105, "rais": 105, "err": 105, "sock": 105, "sa": 105, "connectionrefusederror": 105, "errno": 105, "refus": 105, "networkerror": 105, "tmp": 105, "ipykernel_19928": 105, "577530699": 105, "lt": [105, 108, 110, 111], "modul": [105, 108], "gt": [105, 108, 110, 111], "queri": 105, "with_column_typ": 105, "external_t": 105, "query_id": 105, "types_check": 105, "columnar": 105, "359": 105, "start_tim": 105, "360": 105, "disconnect_on_error": 105, "362": 105, "insert": 105, "363": 105, "now": [105, 109], "usr": 105, "contextlib": 105, "__enter__": 105, "del": 105, "arg": 105, "kwd": 105, "func": 105, "try": [105, 110], "gen": 105, "except": 105, "stopiter": 105, "runtimeerror": 105, "didn": 105, "yield": 105, "303": 105, "304": 105, "establish_connect": 105, "307": 105, "290": 105, "get_connect": 105, "make_query_set": 105, "292": 105, "force_connect": 105, "293": 105, "last_queri": 105, "queryinfo": 105, "294": 105, "253": 105, "254": 105, "255": 105, "ping": 105, "415": 105, "416": 105, "417": 105, "418": 105, "reset_st": 105, "clickhousebackend": 105, "mcbackendcallback": 105, "id": 105, "tey6cf": 105, "simpl": [105, 106, 110, 115], "gaussian": [105, 106, 108, 109, 110, 111, 115], "notic": [105, 108], "500": 105, "gaussianpropos": [105, 106, 109, 111], "stepsiz": [105, 108, 109, 110, 116], "result": [105, 108], "due": 105, "retriev": 105, "chain_idx": [105, 108], "get_run": 105, "run_id": 105, "get_chain": 105, "chain_metadata": 105, "get_draw": 105, "variable_": 105, "append": [105, 112], "sample_stat": 105, "00624689": 105, "00092455": 105, "00055598": 105, "860": 105, "58608515": 105, "803": 105, "39300557": 105, "880": 105, "30937015": 105, "dict_to_dataset": 105, "kind": 105, "kde": 105, "disconnect": 105, "illustr": [106, 108], "1e5": 106, "d": [106, 116], "origin": [106, 109], "classic": 106, "isotrop": 106, "approxim": 106, "locat": 106, "outsid": [106, 116], "region": 106, "li": 106, "insid": 106, "geometr": 106, "easi": [106, 108], "vanish": 106, "henc": 106, "leav": 106, "stuck": 106, "precis": 106, "remain": 106, "contrast": 106, "never": 106, "seen": 106, "monitor": 106, "lambda": [106, 108, 111], "add_box_constraint": [106, 110, 111], "1e3": [106, 110], "gaussianhitandrunpropos": [106, 111], "enumer": [106, 111], "001": [106, 111], "analyt": 106, "dpi": [106, 110], "300": [106, 110], "linestyl": [106, 109], "dash": [106, 109], "grai": [106, 109], "3d": 107, "20000": 107, "26653144": 107, "11889648": 107, "17080836": 107, "9418255": 107, "33957506": 107, "98207648": 107, "80278535": 107, "47749555": 107, "12280485": 107, "8399288": 107, "11007866": 107, "90024278": 107, "88967784": 107, "61249626": 107, "00471622": 107, "87693032": 107, "54067729": 107, "94710096": 107, "a_eq": 107, "b_eq": 107, "constrained_rectangl": 107, "add_equality_constraint": 107, "constrained_sampl": 107, "techniqu": 108, "improv": 108, "modal": 108, "core": [108, 111, 116], "prior": 108, "difficult": 108, "pi_0": 108, "temperatur": 108, "beta": 108, "pi_": 108, "cdot": [108, 109], "cold": 108, "hot": 108, "ascend": 108, "beta_0": 108, "beta_1": 108, "beta_n": 108, "theses": 108, "hast": 108, "simpler": 108, "properti": [108, 110], "hotter": 108, "explor": 108, "mixtur": [108, 115], "distinct": 108, "mode": 108, "vanilla": 108, "troubl": 108, "captur": 108, "broadli": 108, "colder": 108, "ipyparallel": 108, "ipp": 108, "later": 108, "mpi": 108, "commun": 108, "definit": 108, "synchron": 108, "exchang": 108, "reason": 108, "replica": 108, "below": 108, "run_tempered_chain": 108, "mpi4pi": 108, "gaussianmixtur": 108, "mu1": 108, "mu2": 108, "05": [108, 109], "cov": [108, 110], "ey": 108, "model1": 108, "model2": 108, "comm": 108, "comm_world": 108, "get_rank": 108, "syncrng": 108, "gaussiancoordinatehitandrunpropos": [108, 110], "paralleltemperingsyncrng": 108, "exchangeattemptprob": 108, "acc_rat": 108, "would": 108, "place": 108, "invok": 108, "mpiexec": 108, "n_temp": 108, "cluster": 108, "engin": 108, "rc": 108, "view": [108, 113], "broadcast_view": 108, "apply_sync": 108, "sort": 108, "hard": 108, "debug": 108, "good": [108, 109], "instanc": 108, "short": [108, 110], "launcher": 108, "mpienginesetlaunch": 108, "00": 108, "09": 108, "stop": 108, "1686395190": 108, "exit_cod": 108, "pid": 108, "15143": 108, "identifi": [108, 115], "ipengin": 108, "1686395189": 108, "mxy1": 108, "13460": 108, "control": 108, "15084": 108, "ipcontrol": 108, "simpli": 108, "done": 108, "spawn": 108, "550000": 108, "n_replica": 108, "starmap": 108, "1686395200": 108, "assembl": 108, "00129537": 108, "00123599": 108, "2691": 108, "51743799": 108, "2614": 108, "77034169": 108, "seem": 108, "fig": [108, 109], "sharei": 108, "set_titl": 108, "245": [108, 112], "beta_": 108, "truncat": 109, "restrict": 109, "simplex": [109, 110], "begin": 109, "pmatrix": 109, "vdot": 109, "x_n": 109, "mathbb": 109, "sinc": 109, "worri": [109, 110], "further": [109, 115], "adjust": 109, "being": 109, "deviat": 109, "fun": 109, "assess": 109, "per": [109, 110], "1010": 109, "threshold": 109, "set_xlabel": 109, "set_ylabel": 109, "2878": 109, "2892": 109, "2938": 109, "2862": 109, "chrr": 110, "cheap": 110, "overli": 110, "sensit": 110, "won": 110, "custommodel": 110, "determin": 110, "domain": [110, 115], "NOT": 110, "inheret": 110, "anyth": 110, "accord": 110, "dummi": 110, "mu": 110, "inv": 110, "mandatori": 110, "put": 110, "2d": 110, "intial": 110, "__main__": 110, "0x7f09d89bdae0": 110, "preprocess": 110, "computation": 110, "influenc": 110, "strong": 110, "contact": 110, "abl": 110, "give": 110, "concret": 110, "advic": 110, "need": [110, 116], "gain": 110, "after": 110, "centr": 110, "could": 110, "even": 110, "take": 110, "care": 110, "tuning_target": 110, "acceptanceratetarget": 110, "thompsonsamplingtun": 110, "tuning_posterior": 110, "thread": 110, "Of": 110, "cours": 110, "vari": 110, "cpu": 110, "10000": 110, "rather": 110, "what": 110, "were": 110, "23018200000000003": 110, "230638": 110, "22964800000000005": 110, "231132": 110, "reach": 110, "strict": 110, "limit": 110, "01": 110, "400": 110, "minimum": 110, "00004714": 110, "9999576": 110, "35364": 110, "96731354": 110, "37847": 110, "86539577": 110, "count": 110, "truncatedgaussianpropos": 111, "csmmalapropos": 111, "billiardmalapropos": 111, "dikinwalkpropos": 111, "250_000": 111, "scatter": 111, "histtyp": 111, "stepfil": 111, "std": 111, "ddof": 111, "theori": 111, "003717328432895571": 111, "9993054829707392": 111, "0007920047053880569": 111, "9989467812622056": 111, "00407619332020888": 111, "9984964219897617": 111, "004213253764616939": 111, "9990148075099534": 111, "0035644886495046573": 111, "0030206724358808": 111, "panda": 112, "pd": 112, "num_chain": 112, "read_csv": 112, "test_data": 112, "samples_": 112, "csv": 112, "x0": 112, "part": 113, "known": 115, "ignor": 115, "rosenbrock": 115, "banana": 115, "least": 115, "aim": [115, 116], "might": [115, 116], "necessari": [115, 116], "signatur": 115, "consist": 115, "mainli": 115, "desir": [115, 116], "appli": 115, "precondit": 115, "untransform": 115, "lie": [115, 116], "xyz": 115, "pypi": 115, "project": 115, "particulari": 116, "design": 116, "develop": 116, "avail": 116, "usabl": 116, "practition": 116, "filter": 116, "believ": 116, "sake": 116, "itself": 116, "nevertheless": 116, "rapid": 116, "prototyp": 116, "promis": 116, "instruct": 116, "ultim": 116, "wrap": 116, "pypropos": 116, "deleg": 116, "obvious": 116, "AND": 116, "TO": 116, "BE": 116, "rewritten": 116, "accept_propos": 116, "calculate_log_acceptance_prob": 116, "symmetr": 116, "infeas": 116, "infti": 116, "get_stat": 116, "set_stat": 116, "new_stat": 116, "get_propos": 116, "get_steps": 116, "set_steps": 116, "new_steps": 116, "get": 116, "get_nam": 116}, "objects": {"hopsy": [[4, 0, 1, "", "AcceptanceRateTarget"], [5, 0, 1, "", "AdaptiveMetropolisProposal"], [6, 0, 1, "", "BallWalkProposal"], [7, 0, 1, "", "CSmMALAProposal"], [8, 0, 1, "", "DikinWalkProposal"], [9, 0, 1, "", "ExpectedSquaredJumpDistanceTarget"], [10, 0, 1, "", "Gaussian"], [11, 0, 1, "", "GaussianCoordinateHitAndRunProposal"], [12, 0, 1, "", "GaussianHitAndRunProposal"], [13, 0, 1, "", "GaussianProposal"], [14, 0, 1, "", "MarkovChain"], [15, 0, 1, "", "Mixture"], [16, 0, 1, "", "Model"], [17, 0, 1, "", "Normal"], [18, 0, 1, "", "Problem"], [19, 0, 1, "", "Proposal"], [20, 0, 1, "", "PyModel"], [21, 0, 1, "", "PyProposal"], [22, 0, 1, "", "PyTuningTarget"], [23, 0, 1, "", "RandomNumberGenerator"], [24, 0, 1, "", "Rosenbrock"], [25, 0, 1, "", "ThompsonSamplingTuning"], [26, 0, 1, "", "TuningTarget"], [27, 0, 1, "", "Uniform"], [28, 0, 1, "", "UniformCoordinateHitAndRunProposal"], [29, 0, 1, "", "UniformHitAndRunProposal"], [30, 0, 1, "", "add_box_constraints"], [31, 0, 1, "", "compute_chebyshev_center"], [32, 0, 1, "", "ess"], [33, 0, 1, "", "mcse"], [34, 0, 1, "", "rhat"], [35, 0, 1, "", "round"], [36, 0, 1, "", "sample"], [37, 0, 1, "", "simplify"], [38, 0, 1, "", "tune"]], "hopsy.AdaptiveMetropolisProposal": [[39, 1, 1, "", "accept_proposal"], [40, 1, 1, "", "deepcopy"], [41, 1, 1, "", "propose"]], "hopsy.BallWalkProposal": [[42, 1, 1, "", "accept_proposal"], [43, 1, 1, "", "deepcopy"], [44, 1, 1, "", "propose"]], "hopsy.CSmMALAProposal": [[45, 1, 1, "", "accept_proposal"], [46, 1, 1, "", "deepcopy"], [47, 1, 1, "", "propose"]], "hopsy.DikinWalkProposal": [[48, 1, 1, "", "accept_proposal"], [49, 1, 1, "", "deepcopy"], [50, 1, 1, "", "propose"]], "hopsy.Gaussian": [[51, 1, 1, "", "compute_expected_fisher_information"], [52, 1, 1, "", "compute_log_likelihood_gradient"], [53, 1, 1, "", "compute_negative_log_likelihood"], [54, 1, 1, "", "grad_log_density"], [55, 1, 1, "", "hessian"], [56, 1, 1, "", "log_density"]], "hopsy.GaussianCoordinateHitAndRunProposal": [[57, 1, 1, "", "accept_proposal"], [58, 1, 1, "", "deepcopy"], [59, 1, 1, "", "propose"]], "hopsy.GaussianHitAndRunProposal": [[60, 1, 1, "", "accept_proposal"], [61, 1, 1, "", "deepcopy"], [62, 1, 1, "", "propose"]], "hopsy.GaussianProposal": [[63, 1, 1, "", "accept_proposal"], [64, 1, 1, "", "deepcopy"], [65, 1, 1, "", "propose"]], "hopsy.Mixture": [[66, 1, 1, "", "compute_expected_fisher_information"], [67, 1, 1, "", "compute_log_likelihood_gradient"], [68, 1, 1, "", "compute_negative_log_likelihood"], [69, 1, 1, "", "grad_log_density"], [70, 1, 1, "", "hessian"], [71, 1, 1, "", "log_density"]], "hopsy.Model": [[72, 1, 1, "", "compute_expected_fisher_information"], [73, 1, 1, "", "compute_log_likelihood_gradient"], [74, 1, 1, "", "compute_negative_log_likelihood"], [75, 1, 1, "", "grad_log_density"], [76, 1, 1, "", "hessian"], [77, 1, 1, "", "log_density"]], "hopsy.Normal": [[78, 1, 1, "", "__call__"]], "hopsy.PyModel": [[79, 1, 1, "", "compute_expected_fisher_information"], [80, 1, 1, "", "compute_log_likelihood_gradient"], [81, 1, 1, "", "compute_negative_log_likelihood"], [82, 1, 1, "", "grad_log_density"], [83, 1, 1, "", "hessian"], [84, 1, 1, "", "log_density"]], "hopsy.PyProposal": [[85, 1, 1, "", "accept_proposal"], [86, 1, 1, "", "deepcopy"], [87, 1, 1, "", "propose"]], "hopsy.RandomNumberGenerator": [[88, 1, 1, "", "__call__"]], "hopsy.Rosenbrock": [[89, 1, 1, "", "compute_expected_fisher_information"], [90, 1, 1, "", "compute_log_likelihood_gradient"], [91, 1, 1, "", "compute_negative_log_likelihood"], [92, 1, 1, "", "grad_log_density"], [93, 1, 1, "", "hessian"], [94, 1, 1, "", "log_density"]], "hopsy.Uniform": [[95, 1, 1, "", "__call__"]], "hopsy.UniformCoordinateHitAndRunProposal": [[96, 1, 1, "", "accept_proposal"], [97, 1, 1, "", "deepcopy"], [98, 1, 1, "", "propose"]], "hopsy.UniformHitAndRunProposal": [[99, 1, 1, "", "accept_proposal"], [100, 1, 1, "", "deepcopy"], [101, 1, 1, "", "propose"]]}, "objtypes": {"0": "py:class", "1": "py:method"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"]}, "titleterms": {"exampl": [0, 116], "first": [1, 107, 110], "step": 1, "instal": 2, "introduct": 3, "python": [3, 102], "implement": 3, "propos": [3, 19, 41, 44, 47, 50, 59, 62, 65, 87, 98, 101, 103, 116, 118], "model": [3, 16, 72, 73, 74, 75, 76, 77, 110, 115, 118], "hopsi": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 110], "acceptanceratetarget": 4, "adaptivemetropolispropos": [5, 39, 40, 41], "ballwalkpropos": [6, 42, 43, 44], "csmmalapropos": [7, 45, 46, 47], "dikinwalkpropos": [8, 48, 49, 50], "expectedsquaredjumpdistancetarget": 9, "gaussian": [10, 51, 52, 53, 54, 55, 56], "gaussiancoordinatehitandrunpropos": [11, 57, 58, 59], "gaussianhitandrunpropos": [12, 60, 61, 62], "gaussianpropos": [13, 63, 64, 65], "markovchain": 14, "mixtur": [15, 66, 67, 68, 69, 70, 71], "normal": [17, 78], "problem": [18, 115, 118], "pymodel": [20, 79, 80, 81, 82, 83, 84], "pypropos": [21, 85, 86, 87], "pytuningtarget": 22, "randomnumbergener": [23, 88], "rosenbrock": [24, 89, 90, 91, 92, 93, 94], "thompsonsamplingtun": 25, "tuningtarget": 26, "uniform": [27, 95], "uniformcoordinatehitandrunpropos": [28, 96, 97, 98], "uniformhitandrunpropos": [29, 99, 100, 101], "add_box_constraint": 30, "compute_chebyshev_cent": 31, "ess": [32, 103], "mcse": 33, "rhat": 34, "round": 35, "sampl": [36, 102, 103, 106, 107, 110, 111, 116], "simplifi": 37, "tune": [38, 117, 118], "accept_propos": [39, 42, 45, 48, 57, 60, 63, 85, 96, 99], "deepcopi": [40, 43, 46, 49, 58, 61, 64, 86, 97, 100], "compute_expected_fisher_inform": [51, 66, 72, 79, 89], "compute_log_likelihood_gradi": [52, 67, 73, 80, 90], "compute_negative_log_likelihood": [53, 68, 74, 81, 91], "grad_log_dens": [54, 69, 75, 82, 92], "hessian": [55, 70, 76, 83, 93], "log_dens": [56, 71, 77, 84, 94], "__call__": [78, 88, 95], "highli": 102, "optim": 102, "polytop": [102, 104], "further": 102, "resourc": 102, "benchmark": 103, "multiphas": 103, "mont": [103, 116], "carlo": [103, 116], "motiv": 103, "background": 103, "custom": 103, "more": 103, "complex": 103, "scheme": 103, "helper": 103, "function": 103, "paramet": 103, "visual": 103, "result": 103, "runtim": 103, "t": 103, "1": 103, "": 103, "conclus": 103, "appendix": 103, "birkhoff": 104, "callback": 105, "set": 105, "up": 105, "clickhous": 105, "constrain": 106, "without": 107, "equal": 107, "constraint": 107, "now": 107, "rectangl": 107, "2d": 107, "fix": 107, "third": 107, "dimens": 107, "2": 107, "5": 107, "parallel": 108, "temper": 108, "A": [109, 110], "quick": 109, "tutori": 109, "guid": [110, 113], "your": 110, "With": 110, "tmvn": 111, "user": 113, "post": 114, "process": 114, "refer": [114, 115, 116, 117, 118], "diagnost": [114, 118], "descript": 115, "linear": 115, "transform": 115, "markov": [116, 118], "chain": [116, 118], "distribut": 116, "code": 116, "random": [116, 118]}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"Examples": [[0, "examples"], [0, null]], "First Steps": [[1, "first-steps"], [1, null]], "Installation": [[2, "installation"]], "Introduction": [[3, "introduction"]], "Python-implemented proposals & models": [[3, "python-implemented-proposals-models"]], "hopsy.AcceptanceRateTarget": [[4, "hopsy-acceptanceratetarget"]], "hopsy.AdaptiveMetropolisProposal": [[5, "hopsy-adaptivemetropolisproposal"]], "hopsy.BallWalkProposal": [[6, "hopsy-ballwalkproposal"]], "hopsy.CSmMALAProposal": [[7, "hopsy-csmmalaproposal"]], "hopsy.DikinWalkProposal": [[8, "hopsy-dikinwalkproposal"]], "hopsy.ExpectedSquaredJumpDistanceTarget": [[9, "hopsy-expectedsquaredjumpdistancetarget"]], "hopsy.Gaussian": [[10, "hopsy-gaussian"]], "hopsy.GaussianCoordinateHitAndRunProposal": [[11, "hopsy-gaussiancoordinatehitandrunproposal"]], "hopsy.GaussianHitAndRunProposal": [[12, "hopsy-gaussianhitandrunproposal"]], "hopsy.GaussianProposal": [[13, "hopsy-gaussianproposal"]], "hopsy.MarkovChain": [[14, "hopsy-markovchain"]], "hopsy.Mixture": [[15, "hopsy-mixture"]], "hopsy.Model": [[16, "hopsy-model"]], "hopsy.Normal": [[17, "hopsy-normal"]], "hopsy.Problem": [[18, "hopsy-problem"]], "hopsy.Proposal": [[19, "hopsy-proposal"]], "hopsy.PyModel": [[20, "hopsy-pymodel"]], "hopsy.PyProposal": [[21, "hopsy-pyproposal"]], "hopsy.PyTuningTarget": [[22, "hopsy-pytuningtarget"]], "hopsy.RandomNumberGenerator": [[23, "hopsy-randomnumbergenerator"]], "hopsy.Rosenbrock": [[24, "hopsy-rosenbrock"]], "hopsy.ThompsonSamplingTuning": [[25, "hopsy-thompsonsamplingtuning"]], "hopsy.TuningTarget": [[26, "hopsy-tuningtarget"]], "hopsy.Uniform": [[27, "hopsy-uniform"]], "hopsy.UniformCoordinateHitAndRunProposal": [[28, "hopsy-uniformcoordinatehitandrunproposal"]], "hopsy.UniformHitAndRunProposal": [[29, "hopsy-uniformhitandrunproposal"]], "hopsy.add_box_constraints": [[30, "hopsy-add-box-constraints"]], "hopsy.compute_chebyshev_center": [[31, "hopsy-compute-chebyshev-center"]], "hopsy.ess": [[32, "hopsy-ess"]], "hopsy.mcse": [[33, "hopsy-mcse"]], "hopsy.rhat": [[34, "hopsy-rhat"]], "hopsy.round": [[35, "hopsy-round"]], "hopsy.sample": [[36, "hopsy-sample"]], "hopsy.simplify": [[37, "hopsy-simplify"]], "hopsy.tune": [[38, "hopsy-tune"]], "hopsy.AdaptiveMetropolisProposal.accept_proposal": [[39, "hopsy-adaptivemetropolisproposal-accept-proposal"]], "hopsy.AdaptiveMetropolisProposal.deepcopy": [[40, "hopsy-adaptivemetropolisproposal-deepcopy"]], "hopsy.AdaptiveMetropolisProposal.propose": [[41, "hopsy-adaptivemetropolisproposal-propose"]], "hopsy.BallWalkProposal.accept_proposal": [[42, "hopsy-ballwalkproposal-accept-proposal"]], "hopsy.BallWalkProposal.deepcopy": [[43, "hopsy-ballwalkproposal-deepcopy"]], "hopsy.BallWalkProposal.propose": [[44, "hopsy-ballwalkproposal-propose"]], "hopsy.CSmMALAProposal.accept_proposal": [[45, "hopsy-csmmalaproposal-accept-proposal"]], "hopsy.CSmMALAProposal.deepcopy": [[46, "hopsy-csmmalaproposal-deepcopy"]], "hopsy.CSmMALAProposal.propose": [[47, "hopsy-csmmalaproposal-propose"]], "hopsy.DikinWalkProposal.accept_proposal": [[48, "hopsy-dikinwalkproposal-accept-proposal"]], "hopsy.DikinWalkProposal.deepcopy": [[49, "hopsy-dikinwalkproposal-deepcopy"]], "hopsy.DikinWalkProposal.propose": [[50, "hopsy-dikinwalkproposal-propose"]], "hopsy.Gaussian.compute_expected_fisher_information": [[51, "hopsy-gaussian-compute-expected-fisher-information"]], "hopsy.Gaussian.compute_log_likelihood_gradient": [[52, "hopsy-gaussian-compute-log-likelihood-gradient"]], "hopsy.Gaussian.compute_negative_log_likelihood": [[53, "hopsy-gaussian-compute-negative-log-likelihood"]], "hopsy.Gaussian.grad_log_density": [[54, "hopsy-gaussian-grad-log-density"]], "hopsy.Gaussian.hessian": [[55, "hopsy-gaussian-hessian"]], "hopsy.Gaussian.log_density": [[56, "hopsy-gaussian-log-density"]], "hopsy.GaussianCoordinateHitAndRunProposal.accept_proposal": [[57, "hopsy-gaussiancoordinatehitandrunproposal-accept-proposal"]], "hopsy.GaussianCoordinateHitAndRunProposal.deepcopy": [[58, "hopsy-gaussiancoordinatehitandrunproposal-deepcopy"]], "hopsy.GaussianCoordinateHitAndRunProposal.propose": [[59, "hopsy-gaussiancoordinatehitandrunproposal-propose"]], "hopsy.GaussianHitAndRunProposal.accept_proposal": [[60, "hopsy-gaussianhitandrunproposal-accept-proposal"]], "hopsy.GaussianHitAndRunProposal.deepcopy": [[61, "hopsy-gaussianhitandrunproposal-deepcopy"]], "hopsy.GaussianHitAndRunProposal.propose": [[62, "hopsy-gaussianhitandrunproposal-propose"]], "hopsy.GaussianProposal.accept_proposal": [[63, "hopsy-gaussianproposal-accept-proposal"]], "hopsy.GaussianProposal.deepcopy": [[64, "hopsy-gaussianproposal-deepcopy"]], "hopsy.GaussianProposal.propose": [[65, "hopsy-gaussianproposal-propose"]], "hopsy.Mixture.compute_expected_fisher_information": [[66, "hopsy-mixture-compute-expected-fisher-information"]], "hopsy.Mixture.compute_log_likelihood_gradient": [[67, "hopsy-mixture-compute-log-likelihood-gradient"]], "hopsy.Mixture.compute_negative_log_likelihood": [[68, "hopsy-mixture-compute-negative-log-likelihood"]], "hopsy.Mixture.grad_log_density": [[69, "hopsy-mixture-grad-log-density"]], "hopsy.Mixture.hessian": [[70, "hopsy-mixture-hessian"]], "hopsy.Mixture.log_density": [[71, "hopsy-mixture-log-density"]], "hopsy.Model.compute_expected_fisher_information": [[72, "hopsy-model-compute-expected-fisher-information"]], "hopsy.Model.compute_log_likelihood_gradient": [[73, "hopsy-model-compute-log-likelihood-gradient"]], "hopsy.Model.compute_negative_log_likelihood": [[74, "hopsy-model-compute-negative-log-likelihood"]], "hopsy.Model.grad_log_density": [[75, "hopsy-model-grad-log-density"]], "hopsy.Model.hessian": [[76, "hopsy-model-hessian"]], "hopsy.Model.log_density": [[77, "hopsy-model-log-density"]], "hopsy.Normal.__call__": [[78, "hopsy-normal-call"]], "hopsy.PyModel.compute_expected_fisher_information": [[79, "hopsy-pymodel-compute-expected-fisher-information"]], "hopsy.PyModel.compute_log_likelihood_gradient": [[80, "hopsy-pymodel-compute-log-likelihood-gradient"]], "hopsy.PyModel.compute_negative_log_likelihood": [[81, "hopsy-pymodel-compute-negative-log-likelihood"]], "hopsy.PyModel.grad_log_density": [[82, "hopsy-pymodel-grad-log-density"]], "hopsy.PyModel.hessian": [[83, "hopsy-pymodel-hessian"]], "hopsy.PyModel.log_density": [[84, "hopsy-pymodel-log-density"]], "hopsy.PyProposal.accept_proposal": [[85, "hopsy-pyproposal-accept-proposal"]], "hopsy.PyProposal.deepcopy": [[86, "hopsy-pyproposal-deepcopy"]], "hopsy.PyProposal.propose": [[87, "hopsy-pyproposal-propose"]], "hopsy.RandomNumberGenerator.__call__": [[88, "hopsy-randomnumbergenerator-call"]], "hopsy.Rosenbrock.compute_expected_fisher_information": [[89, "hopsy-rosenbrock-compute-expected-fisher-information"]], "hopsy.Rosenbrock.compute_log_likelihood_gradient": [[90, "hopsy-rosenbrock-compute-log-likelihood-gradient"]], "hopsy.Rosenbrock.compute_negative_log_likelihood": [[91, "hopsy-rosenbrock-compute-negative-log-likelihood"]], "hopsy.Rosenbrock.grad_log_density": [[92, "hopsy-rosenbrock-grad-log-density"]], "hopsy.Rosenbrock.hessian": [[93, "hopsy-rosenbrock-hessian"]], "hopsy.Rosenbrock.log_density": [[94, "hopsy-rosenbrock-log-density"]], "hopsy.Uniform.__call__": [[95, "hopsy-uniform-call"]], "hopsy.UniformCoordinateHitAndRunProposal.accept_proposal": [[96, "hopsy-uniformcoordinatehitandrunproposal-accept-proposal"]], "hopsy.UniformCoordinateHitAndRunProposal.deepcopy": [[97, "hopsy-uniformcoordinatehitandrunproposal-deepcopy"]], "hopsy.UniformCoordinateHitAndRunProposal.propose": [[98, "hopsy-uniformcoordinatehitandrunproposal-propose"]], "hopsy.UniformHitAndRunProposal.accept_proposal": [[99, "hopsy-uniformhitandrunproposal-accept-proposal"]], "hopsy.UniformHitAndRunProposal.deepcopy": [[100, "hopsy-uniformhitandrunproposal-deepcopy"]], "hopsy.UniformHitAndRunProposal.propose": [[101, "hopsy-uniformhitandrunproposal-propose"]], "hopsy - Highly Optimized Polytope Sampling in Python": [[102, "hopsy-highly-optimized-polytope-sampling-in-python"]], "Further resources": [[102, "further-resources"]], "Benchmarking Multiphase Monte Carlo Sampling": [[103, "Benchmarking-Multiphase-Monte-Carlo-Sampling"]], "Motivation": [[103, "Motivation"]], "Background": [[103, "Background"]], "Custom proposals": [[103, "Custom-proposals"]], "More complex custom sampling schemes": [[103, "More-complex-custom-sampling-schemes"]], "Helper functions": [[103, "Helper-functions"]], "Benchmark parameters": [[103, "Benchmark-parameters"]], "Benchmarking": [[103, "Benchmarking"]], "Visualizing the results": [[103, "Visualizing-the-results"]], "visualize runtimes": [[103, "visualize-runtimes"]], "visualize ESS/t [1/s]": [[103, "visualize-ESS/t-[1/s]"]], "Conclusion": [[103, "Conclusion"]], "Appendix": [[103, "Appendix"]], "Visualizing the samples": [[103, "Visualizing-the-samples"]], "Birkhoff polytope": [[104, "Birkhoff-polytope"]], "Callbacks": [[105, "Callbacks"]], "Setting up Clickhouse": [[105, "Setting-up-Clickhouse"]], "Constrained Sampling": [[106, "Constrained-Sampling"]], "First sample without equality constraints": [[107, "First-sample-without-equality-constraints"]], "Now constraint rectangle to 2D by fixing third dimension at 2.5": [[107, "Now-constraint-rectangle-to-2D-by-fixing-third-dimension-at-2.5"]], "Parallel Tempering": [[108, "Parallel-Tempering"]], "A Quick Tutorial": [[109, "A-Quick-Tutorial"]], "A Guide to Sampling Your First Model With hopsy": [[110, "A-Guide-to-Sampling-Your-First-Model-With-hopsy"]], "TMVN Sampling": [[111, "TMVN-Sampling"]], "User Guide": [[113, "user-guide"], [113, null]], "Post-Processing": [[114, "post-processing"]], "Reference": [[114, "reference"], [115, "reference"], [116, "reference"], [117, "reference"], [118, "reference"]], "Diagnostics": [[114, "diagnostics"], [118, "diagnostics"]], "Problem Description": [[115, "problem-description"]], "Problem": [[115, "problem"], [115, "id2"], [118, "problem"]], "Linear Transformations": [[115, "linear-transformations"]], "Models": [[115, "models"], [118, "models"]], "Markov Chain Monte Carlo Sampling": [[116, "markov-chain-monte-carlo-sampling"]], "Markov Chains": [[116, "markov-chains"]], "Proposal Distributions": [[116, "proposal-distributions"]], "Example code": [[116, "example-code"]], "Proposals": [[116, "proposals"], [118, "proposals"]], "Markov Chain": [[116, "markov-chain"], [118, "markov-chain"]], "Random": [[116, "random"], [118, "random"]], "Tuning": [[117, "tuning"], [117, "id1"], [118, "tuning"]]}, "indexentries": {"acceptanceratetarget (class in hopsy)": [[4, "hopsy.AcceptanceRateTarget"]], "adaptivemetropolisproposal (class in hopsy)": [[5, "hopsy.AdaptiveMetropolisProposal"]], "ballwalkproposal (class in hopsy)": [[6, "hopsy.BallWalkProposal"]], "csmmalaproposal (class in hopsy)": [[7, "hopsy.CSmMALAProposal"]], "dikinwalkproposal (class in hopsy)": [[8, "hopsy.DikinWalkProposal"]], "expectedsquaredjumpdistancetarget (class in hopsy)": [[9, "hopsy.ExpectedSquaredJumpDistanceTarget"]], "gaussian (class in hopsy)": [[10, "hopsy.Gaussian"]], "gaussiancoordinatehitandrunproposal (class in hopsy)": [[11, "hopsy.GaussianCoordinateHitAndRunProposal"]], "gaussianhitandrunproposal (class in hopsy)": [[12, "hopsy.GaussianHitAndRunProposal"]], "gaussianproposal (class in hopsy)": [[13, "hopsy.GaussianProposal"]], "markovchain (class in hopsy)": [[14, "hopsy.MarkovChain"]], "mixture (class in hopsy)": [[15, "hopsy.Mixture"]], "model (class in hopsy)": [[16, "hopsy.Model"]], "normal (class in hopsy)": [[17, "hopsy.Normal"]], "problem (class in hopsy)": [[18, "hopsy.Problem"]], "proposal (class in hopsy)": [[19, "hopsy.Proposal"]], "pymodel (class in hopsy)": [[20, "hopsy.PyModel"]], "pyproposal (class in hopsy)": [[21, "hopsy.PyProposal"]], "pytuningtarget (class in hopsy)": [[22, "hopsy.PyTuningTarget"]], "randomnumbergenerator (class in hopsy)": [[23, "hopsy.RandomNumberGenerator"]], "rosenbrock (class in hopsy)": [[24, "hopsy.Rosenbrock"]], "thompsonsamplingtuning (class in hopsy)": [[25, "hopsy.ThompsonSamplingTuning"]], "tuningtarget (class in hopsy)": [[26, "hopsy.TuningTarget"]], "uniform (class in hopsy)": [[27, "hopsy.Uniform"]], "uniformcoordinatehitandrunproposal (class in hopsy)": [[28, "hopsy.UniformCoordinateHitAndRunProposal"]], "uniformhitandrunproposal (class in hopsy)": [[29, "hopsy.UniformHitAndRunProposal"]], "add_box_constraints (class in hopsy)": [[30, "hopsy.add_box_constraints"]], "compute_chebyshev_center (class in hopsy)": [[31, "hopsy.compute_chebyshev_center"]], "ess (class in hopsy)": [[32, "hopsy.ess"]], "mcse (class in hopsy)": [[33, "hopsy.mcse"]], "rhat (class in hopsy)": [[34, "hopsy.rhat"]], "round (class in hopsy)": [[35, "hopsy.round"]], "sample (class in hopsy)": [[36, "hopsy.sample"]], "simplify (class in hopsy)": [[37, "hopsy.simplify"]], "tune (class in hopsy)": [[38, "hopsy.tune"]], "accept_proposal() (hopsy.adaptivemetropolisproposal method)": [[39, "hopsy.AdaptiveMetropolisProposal.accept_proposal"]], "deepcopy() (hopsy.adaptivemetropolisproposal method)": [[40, "hopsy.AdaptiveMetropolisProposal.deepcopy"]], "propose() (hopsy.adaptivemetropolisproposal method)": [[41, "hopsy.AdaptiveMetropolisProposal.propose"]], "accept_proposal() (hopsy.ballwalkproposal method)": [[42, "hopsy.BallWalkProposal.accept_proposal"]], "deepcopy() (hopsy.ballwalkproposal method)": [[43, "hopsy.BallWalkProposal.deepcopy"]], "propose() (hopsy.ballwalkproposal method)": [[44, "hopsy.BallWalkProposal.propose"]], "accept_proposal() (hopsy.csmmalaproposal method)": [[45, "hopsy.CSmMALAProposal.accept_proposal"]], "deepcopy() (hopsy.csmmalaproposal method)": [[46, "hopsy.CSmMALAProposal.deepcopy"]], "propose() (hopsy.csmmalaproposal method)": [[47, "hopsy.CSmMALAProposal.propose"]], "accept_proposal() (hopsy.dikinwalkproposal method)": [[48, "hopsy.DikinWalkProposal.accept_proposal"]], "deepcopy() (hopsy.dikinwalkproposal method)": [[49, "hopsy.DikinWalkProposal.deepcopy"]], "propose() (hopsy.dikinwalkproposal method)": [[50, "hopsy.DikinWalkProposal.propose"]], "compute_expected_fisher_information() (hopsy.gaussian method)": [[51, "hopsy.Gaussian.compute_expected_fisher_information"]], "compute_log_likelihood_gradient() (hopsy.gaussian method)": [[52, "hopsy.Gaussian.compute_log_likelihood_gradient"]], "compute_negative_log_likelihood() (hopsy.gaussian method)": [[53, "hopsy.Gaussian.compute_negative_log_likelihood"]], "grad_log_density() (hopsy.gaussian method)": [[54, "hopsy.Gaussian.grad_log_density"]], "hessian() (hopsy.gaussian method)": [[55, "hopsy.Gaussian.hessian"]], "log_density() (hopsy.gaussian method)": [[56, "hopsy.Gaussian.log_density"]], "accept_proposal() (hopsy.gaussiancoordinatehitandrunproposal method)": [[57, "hopsy.GaussianCoordinateHitAndRunProposal.accept_proposal"]], "deepcopy() (hopsy.gaussiancoordinatehitandrunproposal method)": [[58, "hopsy.GaussianCoordinateHitAndRunProposal.deepcopy"]], "propose() (hopsy.gaussiancoordinatehitandrunproposal method)": [[59, "hopsy.GaussianCoordinateHitAndRunProposal.propose"]], "accept_proposal() (hopsy.gaussianhitandrunproposal method)": [[60, "hopsy.GaussianHitAndRunProposal.accept_proposal"]], "deepcopy() (hopsy.gaussianhitandrunproposal method)": [[61, "hopsy.GaussianHitAndRunProposal.deepcopy"]], "propose() (hopsy.gaussianhitandrunproposal method)": [[62, "hopsy.GaussianHitAndRunProposal.propose"]], "accept_proposal() (hopsy.gaussianproposal method)": [[63, "hopsy.GaussianProposal.accept_proposal"]], "deepcopy() (hopsy.gaussianproposal method)": [[64, "hopsy.GaussianProposal.deepcopy"]], "propose() (hopsy.gaussianproposal method)": [[65, "hopsy.GaussianProposal.propose"]], "compute_expected_fisher_information() (hopsy.mixture method)": [[66, "hopsy.Mixture.compute_expected_fisher_information"]], "compute_log_likelihood_gradient() (hopsy.mixture method)": [[67, "hopsy.Mixture.compute_log_likelihood_gradient"]], "compute_negative_log_likelihood() (hopsy.mixture method)": [[68, "hopsy.Mixture.compute_negative_log_likelihood"]], "grad_log_density() (hopsy.mixture method)": [[69, "hopsy.Mixture.grad_log_density"]], "hessian() (hopsy.mixture method)": [[70, "hopsy.Mixture.hessian"]], "log_density() (hopsy.mixture method)": [[71, "hopsy.Mixture.log_density"]], "compute_expected_fisher_information() (hopsy.model method)": [[72, "hopsy.Model.compute_expected_fisher_information"]], "compute_log_likelihood_gradient() (hopsy.model method)": [[73, "hopsy.Model.compute_log_likelihood_gradient"]], "compute_negative_log_likelihood() (hopsy.model method)": [[74, "hopsy.Model.compute_negative_log_likelihood"]], "grad_log_density() (hopsy.model method)": [[75, "hopsy.Model.grad_log_density"]], "hessian() (hopsy.model method)": [[76, "hopsy.Model.hessian"]], "log_density() (hopsy.model method)": [[77, "hopsy.Model.log_density"]], "__call__() (hopsy.normal method)": [[78, "hopsy.Normal.__call__"]], "compute_expected_fisher_information() (hopsy.pymodel method)": [[79, "hopsy.PyModel.compute_expected_fisher_information"]], "compute_log_likelihood_gradient() (hopsy.pymodel method)": [[80, "hopsy.PyModel.compute_log_likelihood_gradient"]], "compute_negative_log_likelihood() (hopsy.pymodel method)": [[81, "hopsy.PyModel.compute_negative_log_likelihood"]], "grad_log_density() (hopsy.pymodel method)": [[82, "hopsy.PyModel.grad_log_density"]], "hessian() (hopsy.pymodel method)": [[83, "hopsy.PyModel.hessian"]], "log_density() (hopsy.pymodel method)": [[84, "hopsy.PyModel.log_density"]], "accept_proposal() (hopsy.pyproposal method)": [[85, "hopsy.PyProposal.accept_proposal"]], "deepcopy() (hopsy.pyproposal method)": [[86, "hopsy.PyProposal.deepcopy"]], "propose() (hopsy.pyproposal method)": [[87, "hopsy.PyProposal.propose"]], "__call__() (hopsy.randomnumbergenerator method)": [[88, "hopsy.RandomNumberGenerator.__call__"]], "compute_expected_fisher_information() (hopsy.rosenbrock method)": [[89, "hopsy.Rosenbrock.compute_expected_fisher_information"]], "compute_log_likelihood_gradient() (hopsy.rosenbrock method)": [[90, "hopsy.Rosenbrock.compute_log_likelihood_gradient"]], "compute_negative_log_likelihood() (hopsy.rosenbrock method)": [[91, "hopsy.Rosenbrock.compute_negative_log_likelihood"]], "grad_log_density() (hopsy.rosenbrock method)": [[92, "hopsy.Rosenbrock.grad_log_density"]], "hessian() (hopsy.rosenbrock method)": [[93, "hopsy.Rosenbrock.hessian"]], "log_density() (hopsy.rosenbrock method)": [[94, "hopsy.Rosenbrock.log_density"]], "__call__() (hopsy.uniform method)": [[95, "hopsy.Uniform.__call__"]], "accept_proposal() (hopsy.uniformcoordinatehitandrunproposal method)": [[96, "hopsy.UniformCoordinateHitAndRunProposal.accept_proposal"]], "deepcopy() (hopsy.uniformcoordinatehitandrunproposal method)": [[97, "hopsy.UniformCoordinateHitAndRunProposal.deepcopy"]], "propose() (hopsy.uniformcoordinatehitandrunproposal method)": [[98, "hopsy.UniformCoordinateHitAndRunProposal.propose"]], "accept_proposal() (hopsy.uniformhitandrunproposal method)": [[99, "hopsy.UniformHitAndRunProposal.accept_proposal"]], "deepcopy() (hopsy.uniformhitandrunproposal method)": [[100, "hopsy.UniformHitAndRunProposal.deepcopy"]], "propose() (hopsy.uniformhitandrunproposal method)": [[101, "hopsy.UniformHitAndRunProposal.propose"]]}})