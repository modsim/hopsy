Search.setIndex({"docnames": ["examples", "firststeps", "firststeps/installation", "firststeps/introduction", "generated/hopsy.AcceptanceRateTarget", "generated/hopsy.AdaptiveMetropolisProposal", "generated/hopsy.BallWalkProposal", "generated/hopsy.BilliardWalkProposal", "generated/hopsy.BirkhoffPolytope", "generated/hopsy.CSmMALAProposal", "generated/hopsy.DikinWalkProposal", "generated/hopsy.ExpectedSquaredJumpDistanceTarget", "generated/hopsy.Gaussian", "generated/hopsy.GaussianCoordinateHitAndRunProposal", "generated/hopsy.GaussianHitAndRunProposal", "generated/hopsy.GaussianProposal", "generated/hopsy.LP", "generated/hopsy.MarkovChain", "generated/hopsy.Mixture", "generated/hopsy.Model", "generated/hopsy.Normal", "generated/hopsy.Problem", "generated/hopsy.Proposal", "generated/hopsy.PyModel", "generated/hopsy.PyProposal", "generated/hopsy.PyTuningTarget", "generated/hopsy.RandomNumberGenerator", "generated/hopsy.ReversibleJumpProposal", "generated/hopsy.Rosenbrock", "generated/hopsy.ThompsonSamplingTuning", "generated/hopsy.TuningTarget", "generated/hopsy.Uniform", "generated/hopsy.UniformCoordinateHitAndRunProposal", "generated/hopsy.UniformHitAndRunProposal", "generated/hopsy.add_box_constraints", "generated/hopsy.add_equality_constraints", "generated/hopsy.back_transform", "generated/hopsy.compute_chebyshev_center", "generated/hopsy.ess", "generated/hopsy.generate_unit_hypercube", "generated/hopsy.generate_unit_simplex", "generated/hopsy.is_polytope_empty", "generated/hopsy.mcse", "generated/hopsy.rhat", "generated/hopsy.round", "generated/hopsy.run_multiphase_sampling", "generated/hopsy.sample", "generated/hopsy.simplify", "generated/hopsy.transform", "generated/hopsy.tune", "generated/objname/hopsy.AdaptiveMetropolisProposal.accept_proposal", "generated/objname/hopsy.AdaptiveMetropolisProposal.deepcopy", "generated/objname/hopsy.AdaptiveMetropolisProposal.propose", "generated/objname/hopsy.BallWalkProposal.accept_proposal", "generated/objname/hopsy.BallWalkProposal.deepcopy", "generated/objname/hopsy.BallWalkProposal.propose", "generated/objname/hopsy.BilliardWalkProposal.accept_proposal", "generated/objname/hopsy.BilliardWalkProposal.deepcopy", "generated/objname/hopsy.BilliardWalkProposal.propose", "generated/objname/hopsy.BirkhoffPolytope.convert_to_full_space", "generated/objname/hopsy.CSmMALAProposal.accept_proposal", "generated/objname/hopsy.CSmMALAProposal.deepcopy", "generated/objname/hopsy.CSmMALAProposal.propose", "generated/objname/hopsy.DikinWalkProposal.accept_proposal", "generated/objname/hopsy.DikinWalkProposal.deepcopy", "generated/objname/hopsy.DikinWalkProposal.propose", "generated/objname/hopsy.Gaussian.compute_expected_fisher_information", "generated/objname/hopsy.Gaussian.compute_log_likelihood_gradient", "generated/objname/hopsy.Gaussian.compute_negative_log_likelihood", "generated/objname/hopsy.Gaussian.log_curvature", "generated/objname/hopsy.Gaussian.log_density", "generated/objname/hopsy.Gaussian.log_gradient", "generated/objname/hopsy.GaussianCoordinateHitAndRunProposal.accept_proposal", "generated/objname/hopsy.GaussianCoordinateHitAndRunProposal.deepcopy", "generated/objname/hopsy.GaussianCoordinateHitAndRunProposal.propose", "generated/objname/hopsy.GaussianHitAndRunProposal.accept_proposal", "generated/objname/hopsy.GaussianHitAndRunProposal.deepcopy", "generated/objname/hopsy.GaussianHitAndRunProposal.propose", "generated/objname/hopsy.GaussianProposal.accept_proposal", "generated/objname/hopsy.GaussianProposal.deepcopy", "generated/objname/hopsy.GaussianProposal.propose", "generated/objname/hopsy.LP.reset", "generated/objname/hopsy.Mixture.compute_expected_fisher_information", "generated/objname/hopsy.Mixture.compute_log_likelihood_gradient", "generated/objname/hopsy.Mixture.compute_negative_log_likelihood", "generated/objname/hopsy.Mixture.log_curvature", "generated/objname/hopsy.Mixture.log_density", "generated/objname/hopsy.Mixture.log_gradient", "generated/objname/hopsy.Model.compute_expected_fisher_information", "generated/objname/hopsy.Model.compute_log_likelihood_gradient", "generated/objname/hopsy.Model.compute_negative_log_likelihood", "generated/objname/hopsy.Model.log_curvature", "generated/objname/hopsy.Model.log_density", "generated/objname/hopsy.Model.log_gradient", "generated/objname/hopsy.Normal.__call__", "generated/objname/hopsy.Problem.slacks", "generated/objname/hopsy.PyModel.compute_expected_fisher_information", "generated/objname/hopsy.PyModel.compute_log_likelihood_gradient", "generated/objname/hopsy.PyModel.compute_negative_log_likelihood", "generated/objname/hopsy.PyModel.log_curvature", "generated/objname/hopsy.PyModel.log_density", "generated/objname/hopsy.PyModel.log_gradient", "generated/objname/hopsy.PyProposal.accept_proposal", "generated/objname/hopsy.PyProposal.deepcopy", "generated/objname/hopsy.PyProposal.propose", "generated/objname/hopsy.RandomNumberGenerator.__call__", "generated/objname/hopsy.ReversibleJumpProposal.accept_proposal", "generated/objname/hopsy.ReversibleJumpProposal.deepcopy", "generated/objname/hopsy.ReversibleJumpProposal.propose", "generated/objname/hopsy.Rosenbrock.compute_expected_fisher_information", "generated/objname/hopsy.Rosenbrock.compute_log_likelihood_gradient", "generated/objname/hopsy.Rosenbrock.compute_negative_log_likelihood", "generated/objname/hopsy.Rosenbrock.log_curvature", "generated/objname/hopsy.Rosenbrock.log_density", "generated/objname/hopsy.Rosenbrock.log_gradient", "generated/objname/hopsy.Uniform.__call__", "generated/objname/hopsy.UniformCoordinateHitAndRunProposal.accept_proposal", "generated/objname/hopsy.UniformCoordinateHitAndRunProposal.deepcopy", "generated/objname/hopsy.UniformCoordinateHitAndRunProposal.propose", "generated/objname/hopsy.UniformHitAndRunProposal.accept_proposal", "generated/objname/hopsy.UniformHitAndRunProposal.deepcopy", "generated/objname/hopsy.UniformHitAndRunProposal.propose", "index", "notebooks/BenchmarkingMultiphaseMonteCarloSampling", "notebooks/BirkhoffPolytope", "notebooks/Callbacks", "notebooks/CheckIfPolytopeIsEmpty", "notebooks/ConstrainedSampling", "notebooks/EqualityConstraints", "notebooks/MultiphaseMonteCarlo", "notebooks/ParallelTempering", "notebooks/QuickTutorial", "notebooks/SamplingAdvice", "notebooks/TruncatedGaussianProposal", "notebooks/eval_pt_samples", "userguide", "userguide/postprocessing", "userguide/problem", "userguide/sampling", "userguide/tuning", "zreference"], "filenames": ["examples.rst", "firststeps.rst", "firststeps/installation.rst", "firststeps/introduction.rst", "generated/hopsy.AcceptanceRateTarget.rst", "generated/hopsy.AdaptiveMetropolisProposal.rst", "generated/hopsy.BallWalkProposal.rst", "generated/hopsy.BilliardWalkProposal.rst", "generated/hopsy.BirkhoffPolytope.rst", "generated/hopsy.CSmMALAProposal.rst", "generated/hopsy.DikinWalkProposal.rst", "generated/hopsy.ExpectedSquaredJumpDistanceTarget.rst", "generated/hopsy.Gaussian.rst", "generated/hopsy.GaussianCoordinateHitAndRunProposal.rst", "generated/hopsy.GaussianHitAndRunProposal.rst", "generated/hopsy.GaussianProposal.rst", "generated/hopsy.LP.rst", "generated/hopsy.MarkovChain.rst", "generated/hopsy.Mixture.rst", "generated/hopsy.Model.rst", "generated/hopsy.Normal.rst", "generated/hopsy.Problem.rst", "generated/hopsy.Proposal.rst", "generated/hopsy.PyModel.rst", "generated/hopsy.PyProposal.rst", "generated/hopsy.PyTuningTarget.rst", "generated/hopsy.RandomNumberGenerator.rst", "generated/hopsy.ReversibleJumpProposal.rst", "generated/hopsy.Rosenbrock.rst", "generated/hopsy.ThompsonSamplingTuning.rst", "generated/hopsy.TuningTarget.rst", "generated/hopsy.Uniform.rst", "generated/hopsy.UniformCoordinateHitAndRunProposal.rst", "generated/hopsy.UniformHitAndRunProposal.rst", "generated/hopsy.add_box_constraints.rst", "generated/hopsy.add_equality_constraints.rst", "generated/hopsy.back_transform.rst", "generated/hopsy.compute_chebyshev_center.rst", "generated/hopsy.ess.rst", "generated/hopsy.generate_unit_hypercube.rst", "generated/hopsy.generate_unit_simplex.rst", "generated/hopsy.is_polytope_empty.rst", "generated/hopsy.mcse.rst", "generated/hopsy.rhat.rst", "generated/hopsy.round.rst", "generated/hopsy.run_multiphase_sampling.rst", "generated/hopsy.sample.rst", "generated/hopsy.simplify.rst", "generated/hopsy.transform.rst", "generated/hopsy.tune.rst", "generated/objname/hopsy.AdaptiveMetropolisProposal.accept_proposal.rst", "generated/objname/hopsy.AdaptiveMetropolisProposal.deepcopy.rst", "generated/objname/hopsy.AdaptiveMetropolisProposal.propose.rst", "generated/objname/hopsy.BallWalkProposal.accept_proposal.rst", "generated/objname/hopsy.BallWalkProposal.deepcopy.rst", "generated/objname/hopsy.BallWalkProposal.propose.rst", "generated/objname/hopsy.BilliardWalkProposal.accept_proposal.rst", "generated/objname/hopsy.BilliardWalkProposal.deepcopy.rst", "generated/objname/hopsy.BilliardWalkProposal.propose.rst", "generated/objname/hopsy.BirkhoffPolytope.convert_to_full_space.rst", "generated/objname/hopsy.CSmMALAProposal.accept_proposal.rst", "generated/objname/hopsy.CSmMALAProposal.deepcopy.rst", "generated/objname/hopsy.CSmMALAProposal.propose.rst", "generated/objname/hopsy.DikinWalkProposal.accept_proposal.rst", "generated/objname/hopsy.DikinWalkProposal.deepcopy.rst", "generated/objname/hopsy.DikinWalkProposal.propose.rst", "generated/objname/hopsy.Gaussian.compute_expected_fisher_information.rst", "generated/objname/hopsy.Gaussian.compute_log_likelihood_gradient.rst", "generated/objname/hopsy.Gaussian.compute_negative_log_likelihood.rst", "generated/objname/hopsy.Gaussian.log_curvature.rst", "generated/objname/hopsy.Gaussian.log_density.rst", "generated/objname/hopsy.Gaussian.log_gradient.rst", "generated/objname/hopsy.GaussianCoordinateHitAndRunProposal.accept_proposal.rst", "generated/objname/hopsy.GaussianCoordinateHitAndRunProposal.deepcopy.rst", "generated/objname/hopsy.GaussianCoordinateHitAndRunProposal.propose.rst", "generated/objname/hopsy.GaussianHitAndRunProposal.accept_proposal.rst", "generated/objname/hopsy.GaussianHitAndRunProposal.deepcopy.rst", "generated/objname/hopsy.GaussianHitAndRunProposal.propose.rst", "generated/objname/hopsy.GaussianProposal.accept_proposal.rst", "generated/objname/hopsy.GaussianProposal.deepcopy.rst", "generated/objname/hopsy.GaussianProposal.propose.rst", "generated/objname/hopsy.LP.reset.rst", "generated/objname/hopsy.Mixture.compute_expected_fisher_information.rst", "generated/objname/hopsy.Mixture.compute_log_likelihood_gradient.rst", "generated/objname/hopsy.Mixture.compute_negative_log_likelihood.rst", "generated/objname/hopsy.Mixture.log_curvature.rst", "generated/objname/hopsy.Mixture.log_density.rst", "generated/objname/hopsy.Mixture.log_gradient.rst", "generated/objname/hopsy.Model.compute_expected_fisher_information.rst", "generated/objname/hopsy.Model.compute_log_likelihood_gradient.rst", "generated/objname/hopsy.Model.compute_negative_log_likelihood.rst", "generated/objname/hopsy.Model.log_curvature.rst", "generated/objname/hopsy.Model.log_density.rst", "generated/objname/hopsy.Model.log_gradient.rst", "generated/objname/hopsy.Normal.__call__.rst", "generated/objname/hopsy.Problem.slacks.rst", "generated/objname/hopsy.PyModel.compute_expected_fisher_information.rst", "generated/objname/hopsy.PyModel.compute_log_likelihood_gradient.rst", "generated/objname/hopsy.PyModel.compute_negative_log_likelihood.rst", "generated/objname/hopsy.PyModel.log_curvature.rst", "generated/objname/hopsy.PyModel.log_density.rst", "generated/objname/hopsy.PyModel.log_gradient.rst", "generated/objname/hopsy.PyProposal.accept_proposal.rst", "generated/objname/hopsy.PyProposal.deepcopy.rst", "generated/objname/hopsy.PyProposal.propose.rst", "generated/objname/hopsy.RandomNumberGenerator.__call__.rst", "generated/objname/hopsy.ReversibleJumpProposal.accept_proposal.rst", "generated/objname/hopsy.ReversibleJumpProposal.deepcopy.rst", "generated/objname/hopsy.ReversibleJumpProposal.propose.rst", "generated/objname/hopsy.Rosenbrock.compute_expected_fisher_information.rst", "generated/objname/hopsy.Rosenbrock.compute_log_likelihood_gradient.rst", "generated/objname/hopsy.Rosenbrock.compute_negative_log_likelihood.rst", "generated/objname/hopsy.Rosenbrock.log_curvature.rst", "generated/objname/hopsy.Rosenbrock.log_density.rst", "generated/objname/hopsy.Rosenbrock.log_gradient.rst", "generated/objname/hopsy.Uniform.__call__.rst", "generated/objname/hopsy.UniformCoordinateHitAndRunProposal.accept_proposal.rst", "generated/objname/hopsy.UniformCoordinateHitAndRunProposal.deepcopy.rst", "generated/objname/hopsy.UniformCoordinateHitAndRunProposal.propose.rst", "generated/objname/hopsy.UniformHitAndRunProposal.accept_proposal.rst", "generated/objname/hopsy.UniformHitAndRunProposal.deepcopy.rst", "generated/objname/hopsy.UniformHitAndRunProposal.propose.rst", "index.rst", "notebooks/BenchmarkingMultiphaseMonteCarloSampling.ipynb", "notebooks/BirkhoffPolytope.ipynb", "notebooks/Callbacks.ipynb", "notebooks/CheckIfPolytopeIsEmpty.ipynb", "notebooks/ConstrainedSampling.ipynb", "notebooks/EqualityConstraints.ipynb", "notebooks/MultiphaseMonteCarlo.ipynb", "notebooks/ParallelTempering.ipynb", "notebooks/QuickTutorial.ipynb", "notebooks/SamplingAdvice.ipynb", "notebooks/TruncatedGaussianProposal.ipynb", "notebooks/eval_pt_samples.ipynb", "userguide.rst", "userguide/postprocessing.rst", "userguide/problem.rst", "userguide/sampling.rst", "userguide/tuning.rst", "zreference.rst"], "titles": ["Examples", "First Steps", "Installation", "Introduction", "hopsy.AcceptanceRateTarget", "hopsy.AdaptiveMetropolisProposal", "hopsy.BallWalkProposal", "hopsy.BilliardWalkProposal", "hopsy.BirkhoffPolytope", "hopsy.CSmMALAProposal", "hopsy.DikinWalkProposal", "hopsy.ExpectedSquaredJumpDistanceTarget", "hopsy.Gaussian", "hopsy.GaussianCoordinateHitAndRunProposal", "hopsy.GaussianHitAndRunProposal", "hopsy.GaussianProposal", "hopsy.LP", "hopsy.MarkovChain", "hopsy.Mixture", "hopsy.Model", "hopsy.Normal", "hopsy.Problem", "hopsy.Proposal", "hopsy.PyModel", "hopsy.PyProposal", "hopsy.PyTuningTarget", "hopsy.RandomNumberGenerator", "hopsy.ReversibleJumpProposal", "hopsy.Rosenbrock", "hopsy.ThompsonSamplingTuning", "hopsy.TuningTarget", "hopsy.Uniform", "hopsy.UniformCoordinateHitAndRunProposal", "hopsy.UniformHitAndRunProposal", "hopsy.add_box_constraints", "hopsy.add_equality_constraints", "hopsy.back_transform", "hopsy.compute_chebyshev_center", "hopsy.ess", "hopsy.generate_unit_hypercube", "hopsy.generate_unit_simplex", "hopsy.is_polytope_empty", "hopsy.mcse", "hopsy.rhat", "hopsy.round", "hopsy.run_multiphase_sampling", "hopsy.sample", "hopsy.simplify", "hopsy.transform", "hopsy.tune", "hopsy.AdaptiveMetropolisProposal.accept_proposal", "hopsy.AdaptiveMetropolisProposal.deepcopy", "hopsy.AdaptiveMetropolisProposal.propose", "hopsy.BallWalkProposal.accept_proposal", "hopsy.BallWalkProposal.deepcopy", "hopsy.BallWalkProposal.propose", "hopsy.BilliardWalkProposal.accept_proposal", "hopsy.BilliardWalkProposal.deepcopy", "hopsy.BilliardWalkProposal.propose", "hopsy.BirkhoffPolytope.convert_to_full_space", "hopsy.CSmMALAProposal.accept_proposal", "hopsy.CSmMALAProposal.deepcopy", "hopsy.CSmMALAProposal.propose", "hopsy.DikinWalkProposal.accept_proposal", "hopsy.DikinWalkProposal.deepcopy", "hopsy.DikinWalkProposal.propose", "hopsy.Gaussian.compute_expected_fisher_information", "hopsy.Gaussian.compute_log_likelihood_gradient", "hopsy.Gaussian.compute_negative_log_likelihood", "hopsy.Gaussian.log_curvature", "hopsy.Gaussian.log_density", "hopsy.Gaussian.log_gradient", "hopsy.GaussianCoordinateHitAndRunProposal.accept_proposal", "hopsy.GaussianCoordinateHitAndRunProposal.deepcopy", "hopsy.GaussianCoordinateHitAndRunProposal.propose", "hopsy.GaussianHitAndRunProposal.accept_proposal", "hopsy.GaussianHitAndRunProposal.deepcopy", "hopsy.GaussianHitAndRunProposal.propose", "hopsy.GaussianProposal.accept_proposal", "hopsy.GaussianProposal.deepcopy", "hopsy.GaussianProposal.propose", "hopsy.LP.reset", "hopsy.Mixture.compute_expected_fisher_information", "hopsy.Mixture.compute_log_likelihood_gradient", "hopsy.Mixture.compute_negative_log_likelihood", "hopsy.Mixture.log_curvature", "hopsy.Mixture.log_density", "hopsy.Mixture.log_gradient", "hopsy.Model.compute_expected_fisher_information", "hopsy.Model.compute_log_likelihood_gradient", "hopsy.Model.compute_negative_log_likelihood", "hopsy.Model.log_curvature", "hopsy.Model.log_density", "hopsy.Model.log_gradient", "hopsy.Normal.__call__", "hopsy.Problem.slacks", "hopsy.PyModel.compute_expected_fisher_information", "hopsy.PyModel.compute_log_likelihood_gradient", "hopsy.PyModel.compute_negative_log_likelihood", "hopsy.PyModel.log_curvature", "hopsy.PyModel.log_density", "hopsy.PyModel.log_gradient", "hopsy.PyProposal.accept_proposal", "hopsy.PyProposal.deepcopy", "hopsy.PyProposal.propose", "hopsy.RandomNumberGenerator.__call__", "hopsy.ReversibleJumpProposal.accept_proposal", "hopsy.ReversibleJumpProposal.deepcopy", "hopsy.ReversibleJumpProposal.propose", "hopsy.Rosenbrock.compute_expected_fisher_information", "hopsy.Rosenbrock.compute_log_likelihood_gradient", "hopsy.Rosenbrock.compute_negative_log_likelihood", "hopsy.Rosenbrock.log_curvature", "hopsy.Rosenbrock.log_density", "hopsy.Rosenbrock.log_gradient", "hopsy.Uniform.__call__", "hopsy.UniformCoordinateHitAndRunProposal.accept_proposal", "hopsy.UniformCoordinateHitAndRunProposal.deepcopy", "hopsy.UniformCoordinateHitAndRunProposal.propose", "hopsy.UniformHitAndRunProposal.accept_proposal", "hopsy.UniformHitAndRunProposal.deepcopy", "hopsy.UniformHitAndRunProposal.propose", "hopsy - Highly Optimized Polytope Sampling in Python", "Benchmarking Multiphase Monte Carlo Sampling", "Birkhoff polytope", "Callbacks", "Checking polytope feasibility", "Constrained Sampling", "Equality Constraints", "Demo for Multiphase Monte Carlo in hopsy", "Parallel Tempering", "A Quick Tutorial", "A Guide to Sampling Your First Model With hopsy", "TMVN Sampling", "Visualizing samples from parallel tempering", "User Guide", "Post-Processing", "Problem Description", "Markov Chain Monte Carlo Sampling", "Tuning", "Reference"], "terms": {"A": [0, 1, 28, 34, 35, 37, 39, 40, 41, 44, 95, 122, 123, 124, 125, 127, 128, 129, 130, 133, 137], "guid": [0, 1, 122], "sampl": [0, 1, 3, 17, 36, 38, 42, 43, 45, 47, 48, 59, 124, 125, 126, 128, 130, 131, 135, 137], "your": [0, 1, 2, 88, 89, 91, 93, 122, 130], "first": [0, 39, 40, 46, 47, 122, 128, 135], "model": [0, 1, 12, 18, 23, 66, 67, 68, 69, 70, 71, 82, 83, 84, 85, 86, 87, 96, 97, 98, 99, 100, 101, 122, 123, 124, 125, 126, 130, 131, 133, 138], "With": [0, 1, 122, 130], "hopsi": [0, 1, 2, 3, 123, 124, 125, 126, 127, 128, 130, 131, 133, 135, 137, 138], "quick": [0, 1, 122], "tutori": [0, 1, 122], "constrain": [0, 3, 34, 35, 122, 128], "check": [0, 34, 41, 122, 123, 132], "polytop": [0, 8, 34, 37, 41, 44, 47, 95, 123, 131, 132, 137, 138], "feasibl": [0, 122], "equal": [0, 35, 47, 88, 89, 91, 93, 122, 124, 126, 130], "constraint": [0, 8, 34, 35, 44, 47, 122, 126, 132], "tmvn": [0, 122], "benchmark": [0, 122], "multiphas": [0, 45, 122], "mont": [0, 122, 135], "carlo": [0, 122, 135], "birkhoff": [0, 8, 122, 123], "demo": [0, 122], "parallel": [0, 17, 38, 42, 43, 46, 122, 131, 132], "temper": [0, 122], "visual": [0, 122], "from": [0, 2, 3, 12, 16, 19, 36, 43, 46, 48, 122, 123, 124, 125, 129, 130, 132], "callback": [0, 46, 122], "The": [1, 12, 17, 18, 23, 35, 37, 38, 41, 43, 44, 46, 66, 67, 68, 69, 70, 71, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 109, 110, 111, 112, 113, 114, 123, 124, 127, 130, 131, 132, 137, 138], "contain": [1, 34, 35, 37, 44, 46, 135, 137], "instal": [1, 122], "an": [1, 12, 122, 123, 130], "introduct": [1, 122], "problem": [1, 17, 34, 35, 36, 37, 41, 44, 45, 47, 48, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 135, 138], "solv": [1, 138], "can": [2, 12, 17, 34, 46, 88, 89, 91, 93, 122, 123, 125, 127, 130, 132, 137], "easili": [2, 138], "python": [2, 16, 18, 23, 130, 137, 138], "packag": 2, "index": 2, "us": [2, 3, 34, 35, 37, 38, 41, 42, 43, 44, 46, 66, 67, 68, 82, 83, 84, 88, 89, 90, 91, 93, 96, 97, 98, 109, 110, 111, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 137, 138], "pip": [2, 122], "altern": [2, 91], "you": [2, 3, 23, 34, 88, 89, 91, 93, 122, 123, 132, 137], "download": 2, "sourc": [2, 122], "code": [2, 122, 130, 132], "our": [2, 122, 123], "github": [2, 38, 42, 43, 122], "repositori": 2, "git": 2, "clone": 2, "http": [2, 16, 28, 38, 42, 43, 45, 123, 125, 129, 137], "com": [2, 16, 125], "modsim": 2, "recurs": 2, "compil": 2, "either": 2, "binari": 2, "wheel": 2, "dep": 2, "standard": [2, 12, 42, 131], "cmake": 2, "routin": 2, "mkdir": 2, "build": [2, 123, 130], "releas": 2, "cd": 2, "make": [2, 135, 138], "note": [2, 37, 38, 43, 66, 67, 68, 69, 70, 71, 95, 132], "howev": [2, 12, 123, 125, 137], "produc": [2, 46, 137], "actual": [2, 46], "dist": 2, "x": [2, 3, 18, 41, 66, 67, 68, 69, 70, 71, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 109, 110, 111, 112, 113, 114, 122, 123, 124, 125, 130, 131, 133, 137, 138], "y": [2, 123, 129, 138], "z": [2, 43], "tag": 2, "whl": 2, "where": [2, 3, 12, 38, 43, 59, 122, 123], "version": 2, "depend": [2, 130, 137], "verison": 2, "environ": [2, 125], "For": [3, 38, 42, 43, 46, 88, 89, 91, 93, 122, 125, 126, 129, 130, 132, 137, 138], "high": [3, 125, 130], "flexibl": [3, 122, 123, 129], "when": [3, 43, 47, 122, 125, 126, 131, 132], "hop": [3, 23, 122, 123, 130, 137, 138], "we": [3, 12, 34, 41, 69, 123, 126, 131, 132, 137, 138], "made": 3, "algorithm": [3, 45, 122, 123, 127, 129, 132, 137, 138], "well": [3, 45, 123, 129, 130, 132], "defin": [3, 12, 37, 44, 46, 47, 85, 123, 130, 132], "likelihood": [3, 67, 68, 83, 84, 89, 110, 111, 132, 137, 138], "consid": [3, 12, 127], "metropoli": [3, 130, 138], "criterion": [3, 38], "alpha": [3, 123, 127, 129, 130, 132, 133, 134], "theta": 3, "min": [3, 46, 123], "big": [3, 12], "1": [3, 12, 18, 34, 35, 37, 38, 42, 43, 45, 46, 66, 67, 68, 69, 70, 71, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 109, 110, 111, 112, 113, 114, 122, 124, 125, 127, 128, 129, 130, 131, 132, 133, 137, 138], "frac": [3, 38, 43, 123, 127, 138], "pi": [3, 130], "q": 3, "which": [3, 12, 34, 35, 37, 38, 43, 44, 46, 47, 69, 81, 91, 95, 122, 123, 125, 126, 127, 129, 132, 137, 138], "comput": [3, 37, 38, 42, 43, 66, 67, 68, 69, 70, 71, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 95, 125, 130, 132, 137, 138], "accept": [3, 12, 46, 125, 127, 131, 132], "probabl": [3, 38, 67, 68, 70, 71, 83, 84, 86, 87, 127, 130], "move": [3, 127], "gener": [3, 38, 39, 40, 42, 43, 46, 82, 85, 124, 127, 130, 131, 132, 138], "i": [3, 12, 18, 34, 35, 37, 38, 39, 40, 41, 43, 45, 46, 47, 59, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 137, 138], "distribut": [3, 43, 125, 127, 130, 131, 137], "target": [3, 43, 45, 122, 125, 130, 132, 137], "wish": 3, "draw": [3, 38, 46], "In": [3, 35, 38, 42, 43, 123, 125, 127, 129, 131, 132, 137], "assum": [3, 18, 127, 137], "exp": [3, 12, 130, 133], "f": [3, 12, 18, 83, 84, 86, 87, 123, 124, 125, 129, 130], "neg": [3, 68, 84, 111, 132, 137], "log": [3, 67, 68, 83, 84, 85, 86, 87, 89, 110, 111, 112, 130, 132, 137], "have": [3, 34, 43, 46, 66, 67, 68, 69, 70, 71, 95, 125, 127, 130, 131, 132, 137], "provid": [3, 122, 123, 124, 126, 137], "want": [3, 123, 132], "self": [3, 12, 18, 66, 67, 68, 69, 70, 71, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 109, 110, 111, 112, 113, 114, 123, 130, 132], "To": [3, 37, 43], "read": 3, "more": [3, 19, 43, 122, 127, 132, 135, 137], "about": [3, 46, 131, 137], "detail": [3, 19, 135, 137], "how": [3, 16, 19, 123, 129], "custom": [3, 19, 88, 89, 90, 91, 92, 93, 122, 129, 132, 137, 138], "pleas": [3, 122, 125, 137], "refer": [3, 28, 38, 42, 43, 47, 122, 129, 130], "thi": [3, 12, 19, 34, 35, 43, 44, 45, 46, 66, 69, 82, 85, 90, 92, 112, 122, 123, 125, 126, 127, 129, 130, 131, 132, 137, 138], "page": 3, "although": 3, "ship": [3, 137], "numer": 3, "optim": [3, 132, 137, 138], "work": [3, 19, 23, 37, 45, 122, 123, 129, 132, 138], "linearili": [3, 122], "space": [3, 36, 37, 48, 59, 95, 122, 123, 124, 130, 137], "written": 3, "c": [3, 122, 123, 134, 137, 138], "also": [3, 12, 34, 44, 46, 122, 123, 130, 132, 137, 138], "possibl": [3, 123, 130, 137, 138], "class": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 42, 43, 44, 45, 46, 49, 123, 124, 130, 132, 133, 137, 138], "attribut": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 23, 24, 26, 27, 28, 29, 31, 32, 33, 46], "method": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 42, 43, 82, 85, 90, 92, 123, 132, 137], "size": [8, 38, 46, 124, 132], "int": [8, 12, 34, 35, 36, 38, 39, 40, 42, 43, 45, 46, 48, 123, 129, 130], "helper": 8, "manag": 8, "transform": [8, 35, 36, 37, 43, 44, 95, 123], "state": [8, 17, 46, 123, 126, 127, 130, 131, 137, 138], "mean": [12, 34, 38, 42, 123, 125, 127, 130, 131, 132, 133, 137], "0": [12, 38, 42, 43, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 138], "covari": [12, 66, 69, 130], "inact": 12, "invari": [12, 137], "some": [12, 88, 89, 91, 93, 123, 127, 129, 131, 137, 138], "dimens": [12, 28, 34, 39, 40, 47, 59, 66, 67, 68, 69, 70, 71, 125, 127, 129, 137], "input": [12, 66, 67, 68, 69, 70, 71, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 109, 110, 111, 112, 113, 114, 137], "vector": [12, 34, 35, 37, 39, 40, 44, 66, 67, 68, 69, 70, 71, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 109, 110, 111, 112, 113, 114, 132, 137], "As": [12, 123, 138], "exampl": [12, 91, 122, 123, 125, 127, 131, 132], "one": [12, 43, 91, 123, 132], "dimension": [12, 28, 35, 39, 40, 88, 89, 91, 93, 124, 125, 131], "squar": [12, 91, 124], "exponenti": 12, "function": [12, 19, 23, 28, 34, 38, 44, 67, 68, 70, 71, 83, 84, 87, 122, 126, 130, 132, 137, 138], "two": [12, 38, 43, 46, 123, 125, 130], "variabl": 12, "x_1": [12, 131], "x_2": 12, "2": [12, 38, 39, 40, 45, 123, 124, 125, 127, 129, 130, 131, 132, 133], "under": 12, "second": [12, 39, 40, 46, 128], "sai": 12, "compon": [12, 18, 83, 84, 86, 87, 137], "degener": 12, "multivari": [12, 66, 67, 68, 69, 70, 71, 137], "regular": 12, "n": [12, 18, 34, 35, 37, 38, 39, 40, 42, 43, 59, 66, 67, 68, 69, 70, 71, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 123, 124, 127, 130, 131], "k": [12, 38, 66, 67, 68, 69, 70, 71, 127, 133], "ha": [12, 35, 37, 41, 43, 46, 66, 67, 68, 69, 70, 71, 123, 125, 127, 130, 132, 137, 138], "its": [12, 18, 127, 132], "ar": [12, 18, 19, 34, 35, 37, 38, 41, 42, 43, 46, 81, 95, 123, 124, 125, 126, 130, 132, 137, 138], "technic": [12, 130], "realiz": 12, "remov": [12, 34, 47, 125], "row": [12, 34, 88, 89, 91, 93, 124], "column": [12, 123, 124], "matrix": [12, 34, 35, 37, 39, 40, 44, 66, 69, 88, 91, 109, 112, 137], "correspond": [12, 138], "basic": [12, 38], "construct": [12, 17, 123, 130], "unlik": [12, 130], "still": [12, 19, 38, 66, 67, 68, 69, 70, 71, 132], "onli": [12, 37, 38, 41, 42, 43, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133], "pass": [12, 17, 23, 37, 38, 42, 43, 46, 125, 126, 130, 137], "empti": 12, "list": [12, 17, 18, 45, 46, 123], "common": [12, 131, 137], "paramet": [12, 16, 18, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 66, 67, 68, 69, 70, 71, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 96, 97, 98, 99, 100, 101, 109, 110, 111, 112, 113, 114, 124, 126, 127, 128, 129, 130, 132, 133], "numpi": [12, 34, 35, 37, 38, 42, 43, 46, 59, 66, 67, 68, 69, 70, 71, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 109, 110, 111, 112, 113, 114, 123, 124, 125, 126, 127, 128, 130, 132, 133, 138], "ndarrai": [12, 34, 35, 37, 38, 39, 40, 41, 42, 43, 46, 59, 66, 67, 68, 69, 70, 71, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 109, 110, 111, 112, 113, 114, 123, 138], "so": [12, 18, 19, 38, 42, 43, 91], "entri": 12, "should": [12, 19, 34, 35, 37, 43, 44, 47, 90, 92, 132, 137, 138], "between": [12, 43], "arg": 16, "kwarg": [16, 38, 42, 43], "singleton": [16, 47], "control": [16, 130], "polyround": [16, 34, 44, 47, 81, 123, 126, 137], "linear": [16, 91, 122], "program": [16, 122], "pattern": 16, "medium": 16, "analyt": [16, 127], "vidhya": 16, "creat": [16, 125, 128, 131, 132], "thread": [16, 132], "safe": 16, "822e1170a7f6": 16, "propos": [17, 19, 45, 46, 88, 89, 91, 93, 122, 125, 127, 130, 131, 132, 133], "gaussianhitandrun": 17, "starting_point": [17, 45, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133], "none": [17, 18, 38, 41, 42, 43, 46, 82, 85, 123, 125, 129, 133, 138], "given": [17, 18, 23, 41, 95, 123, 130, 131], "object": [17, 18, 23, 122, 132, 137], "markov": [17, 42, 46, 122, 123, 127, 130, 131, 132, 135], "chain": [17, 38, 42, 43, 46, 122, 123, 125, 127, 129, 130, 131, 132, 133, 135], "keep": 17, "track": 17, "intern": [17, 138], "select": [17, 38, 42, 43], "mechan": [17, 19], "see": [17, 19, 38, 41, 43, 123, 126, 127], "argument": 17, "sever": 17, "them": [17, 123, 132], "weight": [18, 83, 84, 87, 137], "sum": [18, 83, 84, 87, 124], "unnorm": [18, 67, 68, 70, 71, 83, 84, 86, 87, 89, 93, 110, 111, 113, 114], "densiti": [18, 67, 68, 70, 71, 83, 84, 86, 87, 123, 127, 129, 130, 132, 133, 134], "sum_": [18, 38, 83, 84, 86, 87], "w_i": [18, 83, 84, 86, 87], "f_i": [18, 83, 84, 86, 87], "mai": [18, 34, 137], "arbitrari": [18, 23, 124, 137], "implement": [18, 19, 23, 38, 82, 85, 90, 91, 92, 122, 123, 125, 129, 130, 132, 137, 138], "requir": [18, 19, 23, 37, 47, 90, 92, 125, 126, 138], "pymodel": [18, 137], "": [18, 34, 38, 41, 44, 46, 122, 129, 130, 137, 138], "float": [18, 34, 35, 36, 38, 42, 48, 68, 70, 84, 86, 90, 92, 98, 100, 111, 113, 123, 138], "If": [18, 34, 37, 43, 46, 88, 89, 91, 93, 122, 132], "thei": [18, 19, 126, 132], "all": [18, 19, 34, 43, 46, 81, 123, 127, 130, 132, 138], "base": [19, 122, 123, 130, 132], "while": [19, 123], "inherit": 19, "allow": [23, 122, 123, 130], "interfac": [23, 123, 132, 137], "correctli": 23, "compute_negative_log_likelihood": [23, 130, 132, 133, 137], "compute_log_likelihood_gradi": [23, 137], "compute_expected_fisher_inform": [23, 137], "multi": [28, 130], "2n": [28, 34, 109, 110, 111, 112, 113, 114], "doi": 28, "org": [28, 38, 43, 137], "10": [28, 122, 123, 125, 127, 128, 130, 131, 132, 133], "1162": 28, "evco": 28, "2009": 28, "17": [28, 123], "3": [28, 45, 123, 124, 125, 127, 128, 129, 131, 132, 133], "437": 28, "lower_bound": 34, "_supportsarrai": [34, 35, 36, 48], "dtype": [34, 35, 36, 48], "ani": [34, 35, 36, 48, 90, 92, 132, 138], "_nestedsequ": [34, 35, 36, 48], "bool": [34, 35, 36, 37, 38, 46, 48], "complex": [34, 35, 36, 48], "str": [34, 35, 36, 38, 42, 43, 46, 48, 123, 130, 133, 134, 138], "byte": [34, 35, 36, 48], "upper_bound": 34, "simplifi": [34, 35, 126], "true": [34, 37, 123, 125, 126, 129, 130, 132, 133, 134], "add": [34, 35, 126], "box": [34, 127], "extend": 34, "b": [34, 35, 37, 39, 40, 41, 44, 95, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 137], "return": [34, 35, 37, 38, 39, 40, 42, 43, 44, 46, 47, 66, 67, 68, 69, 70, 71, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 109, 110, 111, 112, 113, 114, 123, 130, 132, 137, 138], "m": [34, 35, 38, 68, 70, 124, 131], "ad": [34, 126], "naiv": 34, "do": [34, 91, 131, 138], "neither": 34, "whether": [34, 41, 126], "alreadi": [34, 123, 125, 137], "somehow": 34, "bound": 34, "nor": 34, "veri": [34, 127, 130, 131], "same": [34, 123, 127, 130], "exist": [34, 82, 85, 123], "redund": [34, 44, 47], "effici": [34, 47, 122, 123, 130, 132], "toolbox": [34, 137], "round": [34, 36, 37, 47, 48, 95, 123, 124, 132, 137], "both": [34, 123], "everi": [34, 38, 42, 43, 46, 132], "lb": 34, "leq": [34, 35, 37, 44, 122, 131, 137], "x_i": 34, "ub": 34, "appropri": 34, "length": 34, "lb_i": 34, "ub_i": 34, "ax": [34, 35, 37, 41, 44, 122, 130, 131, 132, 137], "float64": [34, 35, 37, 88, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 109, 110, 111, 112, 113, 114], "specifi": [34, 35], "lower": 34, "upper": 34, "type": [34, 35, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 66, 67, 68, 69, 70, 71, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 109, 110, 111, 112, 113, 114, 123, 132, 137], "a_eq": [35, 126, 128], "b_eq": [35, 126, 128], "chang": 35, "incorpor": 35, "origin": [35, 36, 37, 127, 131], "param": [35, 59, 88, 90, 91, 92, 95], "order": [35, 125, 132, 137], "obtain": [35, 46], "result": [35, 41, 125, 130], "automat": [35, 47], "lh": 35, "rh": 35, "most": [35, 43, 131, 132, 137], "like": [35, 125, 130], "reduc": [35, 59, 66, 69, 123], "point": [36, 48, 95, 123, 130, 132], "back": [36, 123, 124], "typic": [36, 47, 48, 85], "original_spac": 37, "fals": [37, 38, 46, 123, 125, 126], "chebyshev": [37, 132], "center": [37, 123, 131], "midpoint": 37, "non": [37, 45, 123, 124, 126, 127, 128, 129, 132, 133, 137], "uniqu": 37, "largest": 37, "inscrib": 37, "ball": 37, "e": [37, 46, 95, 123, 130, 138], "g": [37, 46, 95, 130, 138], "trigger": 37, "backtransform": 37, "been": [37, 43, 95, 123, 132], "default": [37, 38, 42, 43, 81, 125], "shift": [37, 44, 123, 137], "store": [37, 44, 125, 138], "data": [38, 42, 43, 125], "seri": [38, 42, 43, 131], "bulk": 38, "rel": [38, 43], "prob": [38, 42], "dask_kwarg": [38, 42, 43], "calcul": [38, 42, 43], "estim": [38, 43], "effect": [38, 43, 47, 127, 130, 132], "mcmc": [38, 42, 43, 46, 125, 130, 131, 132], "shape": [38, 39, 40, 42, 43, 46, 123, 124, 129, 132, 133, 138], "n_chain": [38, 42, 43, 46, 124, 125, 131], "n_draw": [38, 42, 43, 46], "dim": [38, 42, 43, 46, 123, 127, 129, 133], "rang": [38, 42, 43, 123, 124, 125, 127, 129, 130, 131, 132, 134], "valu": [38, 39, 40, 42, 43, 46, 81, 88, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 123, 132], "onc": [38, 42, 43, 130], "whole": [38, 42, 43], "valid": [38, 42, 43], "tail": 38, "option": [38, 41, 42, 46, 126, 138], "quantil": [38, 42], "old": 38, "sd": [38, 42], "median": [38, 42], "mad": 38, "absolut": 38, "devianc": 38, "z_scale": [38, 43], "fold": [38, 43], "ident": [38, 43, 123, 127], "local": 38, "ress": 38, "tupl": [38, 39, 40, 46], "n_proc": [38, 42, 43, 45, 46, 123, 124, 125, 129], "combin": [38, 42, 43, 122, 137], "subprocess": [38, 42, 43, 130], "dict": [38, 42, 43, 46, 123, 125], "dask": [38, 42, 43], "relat": [38, 42, 43], "wrap_xarray_ufunc": [38, 42, 43], "hat": [38, 43, 131], "_": [38, 123, 125, 127, 128, 129, 130, 132, 133], "eff": 38, "n_": [38, 131], "mathit": [38, 123], "diagnost": [38, 43, 122, 123], "mn": 38, "tau": 38, "t": [38, 44, 132, 133], "p": [38, 122, 123, 137, 138], "number": [38, 46, 59, 88, 89, 91, 93, 130, 131, 132, 137], "rho": 38, "_t": 38, "_autocorrel": 38, "lag": 38, "last": [38, 123], "integ": 38, "2k": 38, "posit": [38, 91], "current": [38, 123, 138], "similar": 38, "stan": 38, "geyer": 38, "initi": [38, 43], "monoton": 38, "sequenc": [38, 130], "1992": [38, 43], "2011": 38, "vehtari": [38, 43], "et": [38, 43], "al": [38, 43], "2019": [38, 43], "arxiv": [38, 43], "ab": [38, 43, 123], "1903": [38, 43], "08008": [38, 43], "arviz": [38, 42, 43, 124, 125], "dev": [38, 42, 43], "io": [38, 42, 43], "api": [38, 42, 43, 122, 123, 137], "html": [38, 42, 43], "mc": [38, 124, 127, 128, 130, 132, 133], "doc": [38, 125], "2_18": 38, "manual": 38, "section": [38, 122, 123, 138], "15": [38, 123, 130], "4": [38, 66, 67, 68, 82, 83, 84, 88, 89, 90, 96, 97, 98, 109, 110, 111, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133], "gelman": [38, 43], "bda": [38, 43], "2014": [38, 43], "formula": 38, "11": [38, 123, 124, 126, 127, 128, 129, 130, 132, 133], "8": [38, 123, 125, 128, 130, 132, 133, 134], "unit": [39, 40], "hypercub": 39, "cube": [39, 40], "np": [39, 40, 123, 124, 125, 126, 127, 128, 130, 132, 133], "simplex": [40, 131, 132], "h": 41, "sx": 41, "solut": [41, 82, 85], "precis": [41, 127], "lp": [41, 47, 126], "solver": [41, 126], "set": [41, 43, 47, 81, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 137, 138], "recommend": [41, 43, 137], "gurobi": 41, "numericfocu": 41, "hard": [41, 130], "access": [41, 123], "error": 42, "statist": [42, 43, 122, 130, 131], "inform": [42, 46, 66, 69, 82, 85, 88, 91, 109, 112, 122], "msce": 42, "dataset": [42, 43], "rank": [43, 130], "normal": [43, 123], "splitr": 43, "trace": 43, "r": [43, 123, 127, 130, 131], "test": [43, 122, 123, 125, 137, 138], "lack": 43, "converg": [43, 88, 89, 91, 93, 123, 124, 130, 131, 132], "compar": [43, 123, 132, 133, 135], "varianc": 43, "multipl": [43, 125, 130], "within": [43, 130], "each": [43, 46, 88, 91, 130], "achiev": [43, 46], "detect": 43, "evid": 43, "nonconverg": 43, "start": [43, 122, 123, 125, 127, 130, 131, 132], "dispers": 43, "split": 43, "potenti": [43, 131], "scale": [43, 131], "reduct": [43, 131], "factor": [43, 131], "v": 43, "w": 43, "posterior": [43, 125, 130], "pool": [43, 46, 130], "uniti": 43, "greater": [43, 123], "than": [43, 47, 123], "indic": [43, 131], "yet": 43, "over": [43, 132], "scipi": [43, 124], "stat": 43, "rankdata": 43, "follow": [43, 125, 130, 131], "brook": 43, "1998": 43, "rubin": 43, "inequ": [44, 47, 131, 132, 137], "strip": 44, "unround": [44, 137], "uniformproblem": 44, "Its": [44, 122], "left": 44, "hand": [44, 138], "side": 44, "oper": [44, 123], "right": 44, "math": 44, "core": [45, 130, 133, 138], "seed": [45, 122, 123, 124, 125, 127, 129, 130, 131, 132, 133], "steps_per_phas": [45, 123, 129], "target_ess": [45, 123], "1000": [45, 122, 123, 127, 131, 133], "billiardwalkpropos": [45, 123], "limit_singular_value_ratio": 45, "run": [45, 46, 123, 125, 127, 130, 132], "suggest": [45, 123, 132], "drop": [45, 123, 125, 129], "dagstuhl": [45, 123, 129], "de": [45, 123, 129], "opu": [45, 123, 129], "volltext": [45, 123, 129], "2021": [45, 123, 129], "13820": [45, 123, 129], "pdf": [45, 123, 129], "lipic": [45, 123, 129], "socg": [45, 123, 129], "21": [45, 123, 129], "bewar": 45, "uniform": [45, 123, 124, 129], "BUT": 45, "offici": 45, "support": 45, "markov_chain": [46, 123, 130, 132], "rng": [46, 122, 123, 124, 125, 127, 128, 130, 131, 132, 133], "n_sampl": [46, 122, 123, 124, 125, 128, 130, 131, 132], "thin": [46, 122, 123, 124, 125, 128, 131, 132], "respect": 46, "random": [46, 122, 123, 125, 131], "thu": [46, 127, 137, 138], "len": [46, 123, 127, 129, 133], "match": 46, "markovchain": [46, 122, 123, 124, 125, 127, 128, 130, 131, 132, 133], "simul": [46, 122, 132, 137], "randomnumbergener": [46, 122, 123, 124, 125, 127, 128, 130, 131, 132, 133], "singl": [46, 130], "wa": [46, 137], "must": [46, 130], "discard": 46, "inbetween": 46, "save": [46, 125], "increas": [46, 127], "n_thread": [46, 132], "deprec": [46, 66, 67, 68, 82, 83, 84, 88, 89, 90, 96, 97, 98, 109, 110, 111, 138], "process": [46, 122, 130, 135], "multiprocess": [46, 130], "worker": 46, "record_meta": 46, "string": 46, "acceptance_r": [46, 123, 132], "record": 46, "here": [46, 129, 130, 132], "state_negative_log_likelihood": 46, "in_memori": [46, 125], "flag": 46, "enabl": [46, 130], "disabl": 46, "memori": [46, 125], "metadata": [46, 125], "deriv": [46, 124], "observ": 46, "dure": [46, 123, 125], "write": [46, 125, 129], "onlin": 46, "perman": 46, "storag": [46, 125], "analysi": [46, 122], "hold": 46, "meta": [46, 124, 125], "without": 46, "rate": [46, 125, 127, 131, 132], "found": [46, 122, 123, 130], "becaus": [46, 47, 123, 126, 130, 132], "typo": 46, "Will": 46, "refunct": 47, "case": [47, 112, 123, 125, 127, 130, 131, 132, 138], "width": 47, "less": [47, 130], "thresh": 47, "simplif": 47, "step": [47, 122, 132, 133, 135], "befor": [47, 123, 126, 130], "It": [47, 122, 123, 124, 126, 127], "call": [47, 69, 123, 130, 132, 138], "convert": [59, 124], "full": [59, 123, 124, 137], "d": [59, 127, 138], "arrai": [59, 124, 125, 126, 127, 128, 130, 132, 133], "log_curvatur": [66, 82, 88, 96, 109], "instead": [66, 67, 68, 82, 83, 84, 88, 89, 90, 96, 97, 98, 109, 110, 111, 123, 138], "expect": [66, 69, 82, 85, 88, 109, 112, 127, 132], "fisher": [66, 69, 82, 85, 88, 91, 109, 112], "turn": [66, 69, 125], "out": [66, 69], "just": [66, 69, 88, 89, 91, 93], "narrai": [66, 69], "log_gradi": [67, 83, 89, 97, 110], "gradient": [67, 71, 83, 87, 88, 89, 91, 93, 110, 114], "logarithm": [67, 68, 71, 83, 84, 87, 138], "log_dens": [68, 71, 84, 87, 90, 93, 98, 111, 114], "context": 69, "regard": [81, 122], "itself": [81, 138], "close": [82, 85, 125, 127, 132], "form": [82, 85, 122, 137, 138], "nabla": [83, 87], "curvatur": [85, 91, 112], "help": [88, 89, 91, 93, 122], "faster": [88, 89, 91, 93, 130], "long": [88, 89, 91, 93, 127, 132], "too": [88, 89, 91, 93, 132], "slow": [88, 89, 91, 93], "fast": [88, 89, 91, 93, 125], "enough": [88, 89, 91, 93, 123], "zero": [88, 89, 91, 93, 123, 125, 127, 128, 133], "correct": [88, 89, 91, 93, 132, 137], "col": [88, 91], "rtype": [88, 90, 91, 92, 95], "compute_negative_log_likelihod": [90, 98], "semi": 91, "definit": [91, 130], "hessian": 91, "approxim": [91, 127], "after": [95, 132], "scientif": 122, "tool": 122, "convex": 122, "mathcal": [122, 137], "often": [122, 123, 137], "aris": [122, 124], "bayesian": 122, "metabol": 122, "flux": 122, "built": 122, "pybind11": 122, "power": 122, "goal": 122, "backend": [122, 125], "languag": 122, "whilst": 122, "maintain": 122, "comprehens": 122, "interoper": 122, "other": [122, 130, 132, 133], "librari": 122, "offer": [122, 125], "magnitud": 122, "special": [122, 127, 132], "sampler": [122, 123, 127, 133, 138], "similarili": [122, 138], "besid": 122, "few": [122, 131], "user": 122, "includ": [122, 131], "13": [122, 123], "mathrm": 122, "bioreactor": 122, "kinet": 122, "physic": 122, "sir": 122, "import": [122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134], "task": 122, "especi": [122, 130], "expens": 122, "evalu": 122, "tune": [122, 132, 135], "hyperparamet": [122, 131], "thompson": 122, "approach": [122, 130], "perform": [122, 123, 132, 138], "differ": [122, 130, 132], "chapter": 122, "encount": [122, 126], "bug": 122, "feel": [122, 132], "free": [122, 132], "open": 122, "issu": [122, 126], "find": 122, "question": 122, "feedback": 122, "visit": 122, "u": [122, 123, 132], "gitter": 122, "pip3": 122, "matplotlib": [122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134], "pyplot": [122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134], "plt": [122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134], "5": [122, 123, 125, 127, 129, 130, 132, 133, 134], "42": [122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133], "accrat": [122, 127, 131, 133], "content": 122, "descript": [122, 135], "post": [122, 135], "research": 123, "interest": [123, 137], "new": [123, 132, 138], "togeth": [123, 137, 138], "art": 123, "framework": 123, "conduct": 123, "comparison": 123, "focu": 123, "scaffold": 123, "o": 123, "show": [123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134], "notebook": [123, 126, 129, 130], "adapt": [123, 132], "plugin": 123, "avail": [123, 138], "multiphasemontecarlo": 123, "ipynb": [123, 129], "short": [123, 129, 130, 132], "report": 123, "strategi": [123, 130], "underli": 123, "idea": [123, 130, 138], "previou": [123, 132], "artifici": 123, "coordin": [123, 132], "hit": [123, 127, 132], "optgp": 123, "stabl": 123, "pubm": 123, "ncbi": 123, "nlm": 123, "nih": 123, "gov": 123, "28158334": 123, "those": [123, 138], "resurrect": 123, "shown": [123, 130], "better": [123, 130], "time": [123, 124, 127, 130, 131], "yourself": 123, "small": [123, 125], "seamlessi": 123, "integr": 123, "workflow": 123, "overrelax": 123, "ui": 123, "adsab": 123, "harvard": 123, "edu": 123, "2015ijmpc": 123, "2650010d": 123, "abstract": 123, "overrelaxedhitandrunpropos": 123, "def": [123, 130, 132], "__init__": [123, 130], "epsilon": [123, 130], "1e": 123, "direct": 123, "randn": 123, "linalg": [123, 132], "norm": 123, "axi": 123, "inverse_dist": 123, "nan_to_num": 123, "divid": 123, "forward_dist": 123, "max": 123, "backward_dist": 123, "l": 123, "t_1": 123, "sqrt": 123, "t_0": 123, "addit": 123, "billiard": 123, "walk": 123, "svd_round": 123, "concaten": 123, "n_dim": [123, 129], "n_iter": 123, "stacked_sampl": 123, "vstack": 123, "vh": 123, "svd": 123, "rescal": 123, "mention": 123, "s_ratio": 123, "els": [123, 127, 129, 133], "ones": [123, 130, 133], "rounding_matrix": 123, "transpos": 123, "dot": [123, 130, 133], "diag": 123, "sub_problem": 123, "apply_shift": 123, "apply_transform": 123, "execut": [123, 125], "run_multiphase_sampl": [123, 129], "limit_singular_ratio_valu": 123, "assert": [123, 125, 126, 132], "iter": [123, 129, 132], "sampling_tim": 123, "last_iteration_did_round": 123, "print": [123, 128, 131, 132, 133], "titer": 123, "internal_polytop": 123, "_sampl": 123, "end": [123, 130, 131], "measur": 123, "ts_ratio": 123, "next": [123, 132], "j": [123, 125, 130], "tess": 123, "100": [123, 129, 130, 133, 134], "back_transform": 123, "run_sampl": 123, "6": [123, 124, 125, 128, 130, 132, 133, 134], "rounded_problem": 123, "generate_polytop": 123, "name": [123, 138], "bp5": 123, "bp": [123, 124, 129], "birkhoffpolytop": [123, 124, 129], "mutable_class": 123, "parameter_nam": 123, "5d": 123, "elif": 123, "e_coli": 123, "original_polytop": 123, "static_class": 123, "parse_sbml_stoichiometri": 123, "stoichiometrypars": 123, "parse_sbml_cobrapi": 123, "extern": 123, "resourc": 123, "e_coli_cor": 123, "xml": 123, "polyroundapi": 123, "simplify_polytop": 123, "transform_polytop": 123, "up": [123, 131, 135], "proposaltyp": 123, "chrrt": 123, "uniformcoordinatehitandrunpropos": [123, 124, 133], "ohrr": 123, "problems_to_benchmark": 123, "loop": 123, "ess_t": 123, "problem_select": 123, "item": [123, 133], "tpropos": 123, "reset": [123, 126], "preprocessed_polytop": 123, "problem_nam": 123, "20": [123, 129, 130], "chebi": [123, 129], "compute_chebyshev_cent": [123, 124, 129, 132], "flatten": [123, 125, 130, 133], "rhat": [123, 124, 125, 130, 131, 132], "ttime": 123, "usernam": [123, 124, 126, 127, 128, 129, 132, 133], "academ": [123, 124, 126, 127, 128, 129, 132, 133], "licens": [123, 124, 126, 127, 128, 129, 132, 133], "commerci": [123, 124, 126, 127, 128, 129, 132, 133], "expir": [123, 124, 126, 127, 128, 129, 132, 133], "2023": [123, 124, 126, 127, 128, 129, 132, 133], "30": [123, 124, 126, 127, 128, 129, 132, 133], "3847452299003395": 123, "231": 123, "4835868364245": 123, "627": 123, "6793244654275": 123, "990": 123, "5612889618237": 123, "1583": 123, "2881720652492": 123, "447": 123, "64227280442987": 123, "320": 123, "863": 123, "8258778056024": 123, "640": 123, "1324": 123, "526979068286": 123, "960": 123, "7": [123, 125, 128, 130, 131, 132, 134], "066940654698069": 123, "978791384060571": 123, "822526600431221": 123, "14": [123, 127, 131], "644470085574461": 123, "1280": 123, "18": 123, "35148293619599": 123, "1600": 123, "16": [123, 129, 133], "62222639251434": 123, "1920": 123, "23": 123, "833699742670035": 123, "2240": 123, "41": 123, "20876776311011": 123, "2560": 123, "9": [123, 125, 130, 132], "57": 123, "886912910344414": 123, "2880": 123, "37": 123, "382289849801055": 123, "3200": 123, "62": 123, "344564915244966": 123, "3520": 123, "12": [123, 130, 131, 132], "79": 123, "15850821798082": 123, "3840": 123, "74": 123, "36071172518442": 123, "4160": 123, "95342031751828": 123, "4480": 123, "113": 123, "47926517779857": 123, "4800": 123, "121": 123, "72186371924973": 123, "5120": 123, "3492478009126": 123, "5440": 123, "127": 123, "77424100111836": 123, "5760": 123, "19": 123, "136": 123, "9696137423155": 123, "6080": 123, "144": 123, "16940525794976": 123, "6400": 123, "139": 123, "2192539731686": 123, "6720": 123, "22": 123, "156": 123, "53500273176687": 123, "7040": 123, "175": 123, "14217193906293": 123, "7360": 123, "24": [123, 129], "182": 123, "43273042583925": 123, "7680": 123, "25": [123, 130, 132, 133], "191": 123, "5815328961723": 123, "8000": 123, "26": 123, "210": 123, "41931304680313": 123, "8320": 123, "27": 123, "224": 123, "31970085590208": 123, "8640": 123, "28": 123, "226": 123, "62768566905982": 123, "8960": 123, "29": 123, "237": 123, "75902910720876": 123, "9280": 123, "243": 123, "67493216855976": 123, "9600": 123, "31": 123, "257": 123, "3021980390406": 123, "9920": 123, "32": 123, "273": 123, "8199561717506": 123, "10240": 123, "33": 123, "294": 123, "20112361746465": 123, "10560": 123, "34": 123, "293": 123, "48158227555297": 123, "10880": 123, "35": 123, "300": [123, 127, 132], "45975910082853": 123, "11200": 123, "36": 123, "317": 123, "7535136265973": 123, "11520": 123, "336": 123, "3692862259476": 123, "11840": 123, "38": 123, "331": 123, "9082473463359": 123, "12160": 123, "39": [123, 130, 133], "346": 123, "2916329510095": 123, "12480": 123, "40": 123, "357": 123, "96934334556954": 123, "12800": 123, "363": 123, "54227418015665": 123, "13120": 123, "383": 123, "5858067647125": 123, "13440": 123, "43": [123, 128, 129], "382": 123, "0381927501071": 123, "13760": 123, "44": [123, 129], "401": 123, "5143488947238": 123, "14080": 123, "45": [123, 129], "420": 123, "64939968763684": 123, "14400": 123, "46": 123, "449": 123, "08326901564647": 123, "14720": 123, "47": 123, "452": 123, "80046753169904": 123, "15040": 123, "48": 123, "450": 123, "12839321675506": 123, "15360": 123, "49": 123, "462": 123, "2771927927099": 123, "15680": 123, "50": [123, 132, 133], "461": 123, "9902539847381": 123, "16000": 123, "51": 123, "481": 123, "53977928686703": 123, "16320": 123, "52": 123, "508": 123, "6649066292897": 123, "16640": 123, "53": 123, "504": 123, "20807661962795": 123, "16960": 123, "54": 123, "521": 123, "5147013905246": 123, "17280": 123, "55": 123, "544": 123, "7993417778594": 123, "17600": 123, "56": 123, "535": 123, "5840942302711": 123, "17920": 123, "551": 123, "2635026918439": 123, "18240": 123, "58": 123, "569": 123, "2310737012456": 123, "18560": 123, "59": 123, "588": 123, "0058452604753": 123, "18880": 123, "60": 123, "593": 123, "8488910778029": 123, "19200": 123, "61": 123, "615": 123, "6596139884347": 123, "19520": 123, "635": 123, "4306913517988": 123, "19840": 123, "63": 123, "646": 123, "0405907460345": 123, "20160": 123, "64": 123, "644": 123, "4425753035002": 123, "20480": 123, "65": 123, "8043239236227": 123, "20800": 123, "66": 123, "664": 123, "2919147742286": 123, "21120": 123, "67": 123, "674": 123, "3680356181259": 123, "21440": 123, "68": 123, "680": 123, "3837001518382": 123, "21760": 123, "69": 123, "698": 123, "4208197353897": 123, "22080": 123, "70": 123, "709": 123, "8115678575414": 123, "22400": 123, "71": 123, "722": 123, "2190007599912": 123, "22720": 123, "72": 123, "729": 123, "2378725295657": 123, "23040": 123, "73": 123, "749": 123, "2232824472641": 123, "23360": 123, "750": 123, "6074062950678": 123, "23680": 123, "75": [123, 129], "779": 123, "3189674698466": 123, "24000": 123, "76": 123, "793": 123, "5895044612517": 123, "24320": 123, "77": 123, "788": 123, "1310770304416": 123, "24640": 123, "78": 123, "813": 123, "4174519025988": 123, "24960": 123, "818": 123, "7102630963842": 123, "25280": 123, "80": 123, "825": 123, "1911302157964": 123, "25600": 123, "81": 123, "824": 123, "4797274295319": 123, "25920": 123, "82": 123, "832": 123, "4798666785565": 123, "26240": 123, "83": 123, "834": 123, "0921425432099": 123, "26560": 123, "84": 123, "856": 123, "1355113591557": 123, "26880": 123, "85": 123, "854": 123, "4998018509373": 123, "27200": 123, "86": 123, "870": 123, "6301466142817": 123, "27520": 123, "87": 123, "875": 123, "9356221946373": 123, "27840": 123, "88": 123, "891": 123, "1700748102612": 123, "28160": 123, "89": 123, "903": 123, "7960059093062": 123, "28480": 123, "90": 123, "886": 123, "178835961187": 123, "28800": 123, "91": 123, "867": 123, "117458057039": 123, "29120": 123, "92": 123, "881": 123, "9490684846811": 123, "29440": 123, "93": 123, "890": 123, "5241990028626": 123, "29760": 123, "94": 123, "913": 123, "5607895586063": 123, "30080": 123, "95": [123, 129], "932": 123, "2398882121701": 123, "30400": 123, "96": 123, "951": 123, "138292074147": 123, "30720": 123, "97": 123, "964": 123, "61299347187": 123, "31040": 123, "98": 123, "983": 123, "6391765927045": 123, "31360": 123, "99": 123, "979": 123, "9236321935331": 123, "31680": 123, "1003": 123, "9031482727333": 123, "32000": 123, "0061219415504485": 123, "006207630257062": 123, "0070773467273284": 123, "07052469253540039": 123, "0217652320861816": 123, "2099902629852295": 123, "22450": 123, "12512845066": 123, "1296": 123, "3124379990331": 123, "161": 123, "65937558010646": 123, "963156850679276": 123, "872243577042705": 123, "96780496221293": 123, "133013163411473": 123, "92514821624308": 123, "03213882586069": 123, "480721222145224": 123, "114165738738418": 123, "3472103720655264": 123, "652": 123, "8113104108883": 123, "1462979782508014": 123, "957": 123, "7149285139645": 123, "2013": 123, "7358952432155": 123, "524": 123, "5375595198544": 123, "480": 123, "1188": 123, "850821488119": 123, "269631083291744": 123, "323446416265532": 123, "888495302103292": 123, "1440": 123, "891013536977999": 123, "43496232034734": 123, "2400": 123, "882887827988935": 123, "49037801963015": 123, "3360": 123, "348358594863743": 123, "099764817877734": 123, "4320": 123, "0052664057525": 123, "11942312187279": 123, "5280": 123, "189888275506522": 123, "00693166294697": 123, "6240": 123, "89547451072042": 123, "45378494069976": 123, "7200": 123, "2195031632737": 123, "91470052686886": 123, "8160": 123, "54628640266824": 123, "120": 123, "38209736486483": 123, "9120": 123, "117": 123, "68114663878684": 123, "124": 123, "75070422853102": 123, "10080": 123, "116": 123, "34655760555961": 123, "18592232344665": 123, "11040": 123, "123": 123, "19323837905226": 123, "46386173862024": 123, "12000": 123, "148": 123, "09968539854086": 123, "147": 123, "95311563377672": 123, "12960": 123, "145": 123, "98511902334084": 123, "158": 123, "51895860514378": 123, "13920": 123, "169": 123, "69689177481715": 123, "174": 123, "49127005693168": 123, "14880": 123, "180": 123, "42261318891497": 123, "192": 123, "96616757403754": 123, "15840": 123, "189": 123, "6869567126621": 123, "185": 123, "9907738397535": 123, "16800": 123, "82170148987922": 123, "204": 123, "65635395883973": 123, "17760": 123, "207": 123, "05551739174868": 123, "216": 123, "1649396014175": 123, "18720": 123, "218": 123, "65560668780427": 123, "67365262048054": 123, "19680": 123, "233": 123, "2337269481389": 123, "245": [123, 130, 134], "04918297452195": 123, "20640": 123, "253": 123, "35676743095638": 123, "268": 123, "2333892323007": 123, "21600": 123, "180948810766": 123, "272": 123, "81001761513676": 123, "22560": 123, "916065225228": 123, "42112849368127": 123, "23520": 123, "254": 123, "7582764932103": 123, "258": 123, "4069792053966": 123, "24480": 123, "86342243004873": 123, "284": 123, "17271357899097": 123, "25440": 123, "297": 123, "20253324691765": 123, "302": 123, "52499273424024": 123, "26400": 123, "286": 123, "611087547339": 123, "280": 123, "915655001863": 123, "27360": 123, "288": 123, "3164101913765": 123, "42292722611387": 123, "28320": 123, "310": 123, "9952497255533": 123, "313": 123, "1100359628566": 123, "29280": 123, "289": 123, "67804817589433": 123, "2058222243669": 123, "30240": 123, "40643896165045": 123, "8918695327726": 123, "31200": 123, "312": 123, "2361613765037": 123, "322": 123, "9219106586677": 123, "32160": 123, "323": 123, "7545394540001": 123, "32640": 123, "32520571689747": 123, "33120": 123, "345": 123, "85424928547764": 123, "33600": 123, "358": 123, "3048911770299": 123, "34080": 123, "361": 123, "084743896345": 123, "34560": 123, "365": 123, "47086073740763": 123, "35040": 123, "39780160630573": 123, "35520": 123, "392": 123, "63094158894984": 123, "36000": 123, "398": 123, "9072807479651": 123, "36480": 123, "384": 123, "2964391944638": 123, "36960": 123, "7667317498958": 123, "37440": 123, "391": 123, "4770094651921": 123, "37920": 123, "386": 123, "190724216923": 123, "38400": 123, "85858663180676": 123, "38880": 123, "399": 123, "76548583077005": 123, "39360": 123, "406": 123, "45084635182735": 123, "39840": 123, "414": 123, "13634315764835": 123, "40320": 123, "424": 123, "17051913321086": 123, "40800": 123, "431": 123, "3602734254215": 123, "41280": 123, "422": 123, "556096368053": 123, "41760": 123, "432": 123, "7105172995434": 123, "42240": 123, "442": 123, "42073630007786": 123, "42720": 123, "451": 123, "6280904320013": 123, "43200": 123, "454": 123, "8288496773367": 123, "43680": 123, "459": 123, "7049865712104": 123, "44160": 123, "463": 123, "64262501125734": 123, "44640": 123, "3284616055022": 123, "45120": 123, "458": 123, "5231384856301": 123, "45600": 123, "467": 123, "2708211331568": 123, "46080": 123, "483": 123, "29399688389447": 123, "46560": 123, "489": 123, "9114233381726": 123, "47040": 123, "482": 123, "25565920814455": 123, "47520": 123, "488": 123, "76061956249976": 123, "48000": 123, "101": 123, "501": 123, "2216755056666": 123, "48480": 123, "102": 123, "509": 123, "151199607025": 123, "48960": 123, "103": 123, "512": 123, "2207523382951": 123, "49440": 123, "104": 123, "522": 123, "8707944154959": 123, "49920": 123, "105": 123, "530": 123, "9119480393842": 123, "50400": 123, "106": 123, "534": 123, "6566181063171": 123, "50880": 123, "107": 123, "537": 123, "3787114531068": 123, "51360": 123, "108": 123, "549": 123, "4299895513893": 123, "51840": 123, "109": 123, "545": 123, "6206413795908": 123, "52320": 123, "110": 123, "554": 123, "906174875836": 123, "52800": 123, "111": 123, "573": 123, "7119220600656": 123, "53280": 123, "112": 123, "4093051480813": 123, "53760": 123, "582": 123, "5343562401797": 123, "54240": 123, "114": 123, "592": 123, "634209761512": 123, "54720": 123, "115": 123, "601": 123, "744572032569": 123, "55200": 123, "605": 123, "1492755287037": 123, "55680": 123, "609": 123, "6353624312007": 123, "56160": 123, "118": 123, "613": 123, "5433468342083": 123, "56640": 123, "119": 123, "612": 123, "6171354877015": 123, "57120": 123, "618": 123, "69924574814": 123, "57600": 123, "628": 123, "4239828653435": 123, "58080": 123, "122": 123, "639": 123, "0665758373954": 123, "58560": 123, "8951662610747": 123, "59040": 123, "658": 123, "5648101217669": 123, "59520": 123, "125": 123, "672": 123, "2232482053716": 123, "60000": 123, "126": 123, "692": 123, "9192879813564": 123, "60480": 123, "701": 123, "1431658990771": 123, "60960": 123, "128": 123, "702": 123, "7340761365899": 123, "61440": 123, "129": 123, "707": 123, "3541719676651": 123, "61920": 123, "130": 123, "0297752389649": 123, "62400": 123, "131": 123, "706": 123, "8995244779946": 123, "62880": 123, "132": 123, "4908108847167": 123, "63360": 123, "133": 123, "689": 123, "3472197901951": 123, "63840": 123, "134": 123, "703": 123, "0003376779357": 123, "64320": 123, "135": 123, "708": 123, "2335934188095": 123, "64800": 123, "725": 123, "1838266734792": 123, "65280": 123, "137": 123, "735": 123, "3205579025181": 123, "65760": 123, "138": 123, "737": 123, "0318459845154": 123, "66240": 123, "754": 123, "6120288318377": 123, "66720": 123, "140": 123, "599634946338": 123, "67200": 123, "141": 123, "752": 123, "9040639999432": 123, "67680": 123, "142": 123, "766": 123, "2687113077193": 123, "68160": 123, "143": 123, "781": 123, "7276660620391": 123, "68640": 123, "790": 123, "6849726861673": 123, "69120": 123, "795": 123, "7596388427546": 123, "69600": 123, "146": 123, "799": 123, "5584972022341": 123, "70080": 123, "798": 123, "8247767068805": 123, "70560": 123, "797": 123, "1372057741078": 123, "71040": 123, "149": 123, "794": 123, "4879887657187": 123, "71520": 123, "150": 123, "4262537658255": 123, "72000": 123, "151": 123, "821": 123, "3439821865887": 123, "72480": 123, "152": 123, "836": 123, "785381934779": 123, "72960": 123, "153": 123, "833": 123, "192533643803": 123, "73440": 123, "154": 123, "2367310967214": 123, "73920": 123, "155": 123, "027337432633": 123, "74400": 123, "847": 123, "6213170291394": 123, "74880": 123, "157": 123, "883": 123, "55387018975": 123, "75360": 123, "888": 123, "4084908886016": 123, "75840": 123, "159": 123, "878": 123, "3560544642794": 123, "76320": 123, "160": 123, "8099320680594": 123, "76800": 123, "865": 123, "3342989956125": 123, "77280": 123, "162": 123, "868": 123, "7924805999716": 123, "77760": 123, "163": 123, "879": 123, "929282710091": 123, "78240": 123, "164": 123, "2971775291669": 123, "78720": 123, "165": 123, "906": 123, "4353233136444": 123, "79200": 123, "166": 123, "889": 123, "0828926155659": 123, "79680": 123, "167": 123, "873": 123, "9690238366554": 123, "80160": 123, "168": 123, "877": 123, "7212806671587": 123, "80640": 123, "894": 123, "2714684714002": 123, "81120": 123, "170": 123, "904": 123, "8308346920122": 123, "81600": 123, "171": 123, "912": 123, "2855347087361": 123, "82080": 123, "172": 123, "909": 123, "33882150071": 123, "82560": 123, "173": 123, "897": 123, "4864706687231": 123, "83040": 123, "899": 123, "1382480787717": 123, "83520": 123, "4533159265078": 123, "84000": 123, "176": 123, "910": 123, "0445241340408": 123, "84480": 123, "177": 123, "922": 123, "005723922873": 123, "84960": 123, "178": 123, "928": 123, "7932859860817": 123, "85440": 123, "179": 123, "908": 123, "783058613329": 123, "85920": 123, "895": 123, "3797915865479": 123, "86400": 123, "181": 123, "859": 123, "4890207031966": 123, "86880": 123, "845": 123, "2343124097703": 123, "87360": 123, "183": 123, "839": 123, "1122789551176": 123, "87840": 123, "184": 123, "844": 123, "7127039219682": 123, "88320": 123, "846": 123, "3151169334295": 123, "88800": 123, "186": 123, "842": 123, "6175583860781": 123, "89280": 123, "187": 123, "5348864903817": 123, "89760": 123, "188": 123, "649272511435": 123, "90240": 123, "850": 123, "4409680273976": 123, "90720": 123, "190": 123, "5363180594184": 123, "91200": 123, "864": 123, "6976297034453": 123, "91680": 123, "1598273380728": 123, "92160": 123, "193": 123, "8863528631218": 123, "92640": 123, "194": 123, "880": [123, 125], "6299643478253": 123, "93120": 123, "195": 123, "887": 123, "41821530269": 123, "93600": 123, "196": 123, "893": 123, "1249868133013": 123, "94080": 123, "197": 123, "896": 123, "4293587625341": 123, "94560": 123, "198": 123, "194064688584": 123, "95040": 123, "199": 123, "901": 123, "6836008572618": 123, "95520": 123, "200": 123, "905": 123, "9720995421688": 123, "96000": 123, "201": 123, "915": 123, "0415219542131": 123, "96480": 123, "202": 123, "8491612710968": 123, "96960": 123, "203": 123, "5235691609382": 123, "97440": 123, "066821525769": 123, "97920": 123, "205": 123, "6897456054767": 123, "98400": 123, "206": 123, "5696263301422": 123, "98880": 123, "1574968563857": 123, "99360": 123, "208": 123, "914": 123, "8511270258749": 123, "99840": 123, "209": 123, "919": 123, "2598470161788": 123, "100320": 123, "931": 123, "6724515215465": 123, "100800": 123, "211": 123, "938": 123, "2402200850552": 123, "101280": 123, "212": 123, "943": 123, "4875208804775": 123, "101760": 123, "213": 123, "949": 123, "8135147561189": 123, "102240": 123, "214": 123, "955": 123, "7309221867911": 123, "102720": 123, "215": 123, "970": 123, "4592801029347": 123, "103200": 123, "974": 123, "074172962726": 123, "103680": 123, "217": 123, "1099965408358": 123, "104160": 123, "973": 123, "4666570148554": 123, "104640": 123, "219": 123, "7461092409185": 123, "105120": 123, "220": 123, "988": 123, "1624730606339": 123, "105600": 123, "221": 123, "986": 123, "9052574352414": 123, "106080": 123, "222": 123, "65235118233": 123, "106560": 123, "223": 123, "987": 123, "6559013720048": 123, "107040": 123, "992": 123, "0311000409187": 123, "107520": 123, "225": 123, "984": 123, "9431648604796": 123, "108000": 123, "980": 123, "0972109888816": 123, "108480": 123, "227": 123, "1343984234693": 123, "108960": 123, "228": 123, "3988313773265": 123, "109440": 123, "229": 123, "7939674138657": 123, "109920": 123, "230": 123, "997": 123, "9588361482485": 123, "110400": 123, "1004": 123, "1998163525403": 123, "110880": 123, "0024606528800506": 123, "010601159852741": 123, "0063622147724012": 123, "5347769260406494": 123, "9749472141265869": 123, "83063769340515": 123, "1312": 123, "0707387999137": 123, "1219": 123, "400193428071": 123, "63880606756764": 123, "title_f": [123, 129], "label_f": [123, 129], "tick_f": [123, 129], "legend_f": [123, 129], "img_format": [123, 129], "times_to_plot": 123, "ess_t_to_plot": 123, "restructur": 123, "easier": 123, "plot": [123, 124, 125, 127, 130, 131, 133], "figur": [123, 127, 128, 129, 132, 133, 134], "figsiz": [123, 129, 130, 131, 133], "titl": [123, 128, 129, 132], "fontsiz": [123, 129, 131], "x_tick": 123, "x_axi": 123, "arang": [123, 133], "bar": 123, "hatch": 123, "label": [123, 127, 129, 130, 131, 132, 133, 134], "ylabel": [123, 127, 132], "xlabel": [123, 127, 132], "xtick": [123, 129], "ytick": [123, 129], "tight_layout": [123, 129, 130], "legend": [123, 127, 130, 131, 132, 133, 134], "savefig": 123, "benchmarkruntimeresult": 123, "benchmarkperformanceresult": 123, "doe": [123, 132], "against": 123, "modern": 123, "furthermor": 123, "dependend": 123, "main": 123, "script": 123, "much": 123, "quickli": [123, 125, 127], "fair": 123, "novel": 123, "via": 123, "kei": [123, 130], "n_col": [123, 129], "n_row": [123, 129], "subplot": [123, 129, 130, 131], "suptitl": [123, 129], "margin": [123, 125, 129], "bin": [123, 129, 130, 132, 133, 134], "hist": [123, 128, 129, 130, 132, 133, 134], "color": [123, 127, 131], "c0": 123, "c1": 123, "c2": 123, "figlegend": [123, 129], "rect": [123, 129], "03": [123, 129], "popular": [124, 137], "structur": 124, "mathemat": 124, "matric": 124, "whose": 124, "conveni": [124, 125, 129, 132], "verifi": 124, "5000": [124, 133], "stream": [124, 125, 131], "ess": [124, 125, 129, 130, 132], "00034304": 124, "00039326": 124, "00091834": 124, "00156559": 124, "5256": 124, "24117096": 124, "5350": 124, "23984171": 124, "4018": 124, "57055206": 124, "4524": 124, "92053992": 124, "samples_ful": 124, "convert_to_full_spac": 124, "reshap": [124, 130, 132], "plot_pair": [124, 125], "convert_to_inference_data": 124, "size_squar": 124, "By": [125, 130], "usual": [125, 131], "fine": 125, "larg": [125, 130], "lot": 125, "becom": 125, "therefor": 125, "off": 125, "mcbackend": 125, "databas": 125, "clickhouse_driv": 125, "hagelkorn": 125, "perfect": 125, "fly": 125, "directli": [125, 126], "server": 125, "purpos": [125, 126], "command": [125, 130], "curl": 125, "sh": 125, "block": 125, "port": 125, "8123": 125, "9000": 125, "caution": 125, "wai": [125, 126, 130], "product": 125, "robust": 125, "establish": 125, "connect": 125, "Then": 125, "db_host": 125, "localhost": 125, "db_pass": 125, "db_port": 125, "db_kwarg": 125, "host": 125, "password": 125, "client_main": 125, "client": 125, "db_name": 125, "testing_": 125, "client_sampl": 125, "clickhousebackend": 125, "mcbackendcallback": 125, "id": 125, "6y5dh7": 125, "simpl": [125, 126, 127, 132, 137], "gaussian": [125, 127, 130, 131, 132, 133, 137], "notic": [125, 130], "500": 125, "gaussianpropos": [125, 127, 131, 133], "stepsiz": [125, 130, 131, 132, 138], "due": 125, "retriev": 125, "chain_idx": [125, 130], "get_run": 125, "run_id": 125, "get_chain": 125, "chain_metadata": 125, "get_draw": 125, "variable_": 125, "append": [125, 134], "sample_stat": 125, "00624689": 125, "00092455": 125, "00055598": 125, "860": 125, "58608515": 125, "803": 125, "39300557": 125, "30937015": 125, "dict_to_dataset": 125, "kind": 125, "kde": 125, "disconnect": 125, "empty_a": 126, "empty_b": 126, "empty_problem": 126, "is_polytope_empti": 126, "is_problem_polytope_empti": 126, "valid_a": 126, "valid_b": 126, "valid_problem": 126, "invalid_equality_constraint_matrix": 126, "invalid_equality_bound": 126, "There": 126, "add_equality_constraint": [126, 128], "rais": 126, "valueerror": 126, "manipul": 126, "try": [126, 132], "invalid_problem": 126, "except": 126, "infeas": [126, 138], "statu": 126, "illustr": [127, 130], "1e5": 127, "classic": 127, "isotrop": 127, "locat": 127, "outsid": [127, 138], "region": 127, "li": 127, "insid": 127, "geometr": 127, "easi": [127, 130], "vanish": 127, "henc": 127, "leav": 127, "stuck": 127, "remain": 127, "contrast": [127, 129], "never": 127, "seen": 127, "monitor": 127, "lambda": [127, 130, 133], "add_box_constraint": [127, 132, 133], "1e3": [127, 132], "gaussianhitandrunpropos": [127, 133], "enumer": [127, 133], "001": [127, 133], "dpi": [127, 132], "linestyl": [127, 131], "dash": [127, 131], "grai": [127, 131], "3d": 128, "20000": 128, "26653144": 128, "11889648": 128, "17080836": 128, "9418255": 128, "33957506": 128, "98207648": 128, "80278535": 128, "47749555": 128, "12280485": 128, "8399288": 128, "11007866": 128, "90024278": 128, "88967784": 128, "61249626": 128, "00471622": 128, "87693032": 128, "54067729": 128, "94710096": 128, "constrained_rectangl": 128, "constrained_sampl": 128, "benchmarkingmultiphasemontecarlosampl": 129, "demonstr": 129, "preimplement": 129, "variant": 129, "everydai": 129, "runtim": 129, "techniqu": 130, "improv": 130, "modal": 130, "prior": 130, "difficult": 130, "pi_0": 130, "temperatur": 130, "beta": 130, "pi_": 130, "cdot": [130, 131], "cold": 130, "hot": 130, "ascend": 130, "beta_0": 130, "beta_1": 130, "beta_n": 130, "theses": 130, "hast": 130, "simpler": 130, "properti": [130, 132], "hotter": 130, "explor": 130, "mixtur": [130, 137], "distinct": 130, "mode": 130, "vanilla": 130, "troubl": 130, "captur": 130, "broadli": 130, "colder": 130, "ipyparallel": 130, "ipp": 130, "file": 130, "later": 130, "mpi": 130, "commun": 130, "synchron": 130, "exchang": 130, "reason": 130, "replica": 130, "below": 130, "run_tempered_chain": 130, "mpi4pi": 130, "gaussianmixtur": 130, "mu1": 130, "mu2": 130, "05": [130, 131], "cov": [130, 132], "ey": 130, "model1": 130, "model2": 130, "comm": 130, "comm_world": 130, "get_rank": 130, "syncrng": 130, "gaussiancoordinatehitandrunpropos": [130, 132], "paralleltemperingsyncrng": 130, "exchangeattemptprob": 130, "acc_rat": 130, "would": 130, "place": 130, "invok": 130, "mpiexec": 130, "line": 130, "n_temp": 130, "cluster": 130, "engin": 130, "rc": 130, "view": [130, 135], "broadcast_view": 130, "apply_sync": 130, "sort": 130, "debug": 130, "good": [130, 131], "instanc": 130, "lt": [130, 132, 133], "launcher": 130, "mpienginesetlaunch": 130, "gt": [130, 132, 133], "00": 130, "09": 130, "stop": 130, "1686395190": 130, "exit_cod": 130, "pid": 130, "15143": 130, "identifi": [130, 137], "ipengin": 130, "1686395189": 130, "mxy1": 130, "13460": 130, "15084": 130, "ipcontrol": 130, "simpli": 130, "done": 130, "modul": 130, "spawn": 130, "550000": 130, "n_replica": 130, "starmap": 130, "1686395200": 130, "assembl": 130, "00129537": 130, "00123599": 130, "2691": 130, "51743799": 130, "2614": 130, "77034169": 130, "seem": 130, "fig": [130, 131], "sharei": 130, "set_titl": 130, "beta_": 130, "truncat": 131, "restrict": 131, "begin": 131, "pmatrix": 131, "vdot": 131, "x_n": 131, "mathbb": 131, "sinc": 131, "worri": [131, 132], "further": [131, 137], "adjust": 131, "being": 131, "deviat": 131, "now": 131, "fun": 131, "assess": 131, "per": [131, 132], "1010": 131, "threshold": 131, "set_xlabel": 131, "set_ylabel": 131, "2878": 131, "2892": 131, "2938": 131, "2862": 131, "chrr": 132, "cheap": 132, "overli": 132, "sensit": 132, "won": 132, "custommodel": 132, "determin": 132, "domain": [132, 137], "NOT": 132, "inheret": 132, "anyth": 132, "accord": 132, "dummi": 132, "mu": 132, "inv": 132, "mandatori": 132, "put": 132, "2d": 132, "intial": 132, "__main__": 132, "0x7f09d89bdae0": 132, "preprocess": 132, "computation": 132, "influenc": 132, "strong": 132, "contact": 132, "abl": 132, "give": 132, "concret": 132, "advic": 132, "need": [132, 138], "gain": 132, "centr": 132, "could": 132, "even": 132, "take": 132, "care": 132, "tuning_target": 132, "acceptanceratetarget": 132, "thompsonsamplingtun": 132, "tuning_posterior": 132, "Of": 132, "cours": 132, "vari": 132, "cpu": 132, "10000": 132, "rather": 132, "what": 132, "were": 132, "23018200000000003": 132, "230638": 132, "22964800000000005": 132, "231132": 132, "reach": 132, "strict": 132, "limit": 132, "01": 132, "400": 132, "minimum": 132, "00004714": 132, "9999576": 132, "35364": 132, "96731354": 132, "37847": 132, "86539577": 132, "count": 132, "truncatedgaussianpropos": 133, "csmmalapropos": 133, "billiardmalapropos": 133, "dikinwalkpropos": 133, "250_000": 133, "scatter": 133, "histtyp": 133, "stepfil": 133, "std": 133, "ddof": 133, "theori": 133, "003717328432895571": 133, "9993054829707392": 133, "0007920047053880569": 133, "9989467812622056": 133, "00407619332020888": 133, "9984964219897617": 133, "004213253764616939": 133, "9990148075099534": 133, "0035644886495046573": 133, "0030206724358808": 133, "panda": 134, "pd": 134, "num_chain": 134, "read_csv": 134, "test_data": 134, "samples_": 134, "csv": 134, "x0": 134, "part": 135, "known": 137, "ignor": 137, "rosenbrock": 137, "banana": 137, "least": 137, "aim": [137, 138], "might": [137, 138], "necessari": [137, 138], "signatur": 137, "consist": 137, "mainli": 137, "desir": [137, 138], "appli": 137, "precondit": 137, "untransform": 137, "lie": [137, 138], "xyz": 137, "pypi": 137, "project": 137, "particulari": 138, "design": 138, "develop": 138, "usabl": 138, "practition": 138, "filter": 138, "believ": 138, "sake": 138, "nevertheless": 138, "rapid": 138, "prototyp": 138, "promis": 138, "instruct": 138, "ultim": 138, "wrap": 138, "pypropos": 138, "deleg": 138, "obvious": 138, "AND": 138, "TO": 138, "BE": 138, "rewritten": 138, "accept_propos": 138, "calculate_log_acceptance_prob": 138, "symmetr": 138, "infti": 138, "get_stat": 138, "set_stat": 138, "new_stat": 138, "get_propos": 138, "get_steps": 138, "set_steps": 138, "new_steps": 138, "get": 138, "get_nam": 138}, "objects": {"hopsy": [[4, 0, 1, "", "AcceptanceRateTarget"], [5, 0, 1, "", "AdaptiveMetropolisProposal"], [6, 0, 1, "", "BallWalkProposal"], [7, 0, 1, "", "BilliardWalkProposal"], [8, 0, 1, "", "BirkhoffPolytope"], [9, 0, 1, "", "CSmMALAProposal"], [10, 0, 1, "", "DikinWalkProposal"], [11, 0, 1, "", "ExpectedSquaredJumpDistanceTarget"], [12, 0, 1, "", "Gaussian"], [13, 0, 1, "", "GaussianCoordinateHitAndRunProposal"], [14, 0, 1, "", "GaussianHitAndRunProposal"], [15, 0, 1, "", "GaussianProposal"], [16, 0, 1, "", "LP"], [17, 0, 1, "", "MarkovChain"], [18, 0, 1, "", "Mixture"], [19, 0, 1, "", "Model"], [20, 0, 1, "", "Normal"], [21, 0, 1, "", "Problem"], [22, 0, 1, "", "Proposal"], [23, 0, 1, "", "PyModel"], [24, 0, 1, "", "PyProposal"], [25, 0, 1, "", "PyTuningTarget"], [26, 0, 1, "", "RandomNumberGenerator"], [27, 0, 1, "", "ReversibleJumpProposal"], [28, 0, 1, "", "Rosenbrock"], [29, 0, 1, "", "ThompsonSamplingTuning"], [30, 0, 1, "", "TuningTarget"], [31, 0, 1, "", "Uniform"], [32, 0, 1, "", "UniformCoordinateHitAndRunProposal"], [33, 0, 1, "", "UniformHitAndRunProposal"], [34, 0, 1, "", "add_box_constraints"], [35, 2, 1, "", "add_equality_constraints"], [36, 2, 1, "", "back_transform"], [37, 0, 1, "", "compute_chebyshev_center"], [38, 0, 1, "", "ess"], [39, 2, 1, "", "generate_unit_hypercube"], [40, 2, 1, "", "generate_unit_simplex"], [41, 2, 1, "", "is_polytope_empty"], [42, 0, 1, "", "mcse"], [43, 0, 1, "", "rhat"], [44, 0, 1, "", "round"], [45, 2, 1, "", "run_multiphase_sampling"], [46, 0, 1, "", "sample"], [47, 2, 1, "", "simplify"], [48, 2, 1, "", "transform"], [49, 0, 1, "", "tune"]], "hopsy.AdaptiveMetropolisProposal": [[50, 1, 1, "", "accept_proposal"], [51, 1, 1, "", "deepcopy"], [52, 1, 1, "", "propose"]], "hopsy.BallWalkProposal": [[53, 1, 1, "", "accept_proposal"], [54, 1, 1, "", "deepcopy"], [55, 1, 1, "", "propose"]], "hopsy.BilliardWalkProposal": [[56, 1, 1, "", "accept_proposal"], [57, 1, 1, "", "deepcopy"], [58, 1, 1, "", "propose"]], "hopsy.BirkhoffPolytope": [[59, 1, 1, "", "convert_to_full_space"]], "hopsy.CSmMALAProposal": [[60, 1, 1, "", "accept_proposal"], [61, 1, 1, "", "deepcopy"], [62, 1, 1, "", "propose"]], "hopsy.DikinWalkProposal": [[63, 1, 1, "", "accept_proposal"], [64, 1, 1, "", "deepcopy"], [65, 1, 1, "", "propose"]], "hopsy.Gaussian": [[66, 1, 1, "", "compute_expected_fisher_information"], [67, 1, 1, "", "compute_log_likelihood_gradient"], [68, 1, 1, "", "compute_negative_log_likelihood"], [69, 1, 1, "", "log_curvature"], [70, 1, 1, "", "log_density"], [71, 1, 1, "", "log_gradient"]], "hopsy.GaussianCoordinateHitAndRunProposal": [[72, 1, 1, "", "accept_proposal"], [73, 1, 1, "", "deepcopy"], [74, 1, 1, "", "propose"]], "hopsy.GaussianHitAndRunProposal": [[75, 1, 1, "", "accept_proposal"], [76, 1, 1, "", "deepcopy"], [77, 1, 1, "", "propose"]], "hopsy.GaussianProposal": [[78, 1, 1, "", "accept_proposal"], [79, 1, 1, "", "deepcopy"], [80, 1, 1, "", "propose"]], "hopsy.LP": [[81, 1, 1, "", "reset"]], "hopsy.Mixture": [[82, 1, 1, "", "compute_expected_fisher_information"], [83, 1, 1, "", "compute_log_likelihood_gradient"], [84, 1, 1, "", "compute_negative_log_likelihood"], [85, 1, 1, "", "log_curvature"], [86, 1, 1, "", "log_density"], [87, 1, 1, "", "log_gradient"]], "hopsy.Model": [[88, 1, 1, "", "compute_expected_fisher_information"], [89, 1, 1, "", "compute_log_likelihood_gradient"], [90, 1, 1, "", "compute_negative_log_likelihood"], [91, 1, 1, "", "log_curvature"], [92, 1, 1, "", "log_density"], [93, 1, 1, "", "log_gradient"]], "hopsy.Normal": [[94, 1, 1, "", "__call__"]], "hopsy.Problem": [[95, 1, 1, "", "slacks"]], "hopsy.PyModel": [[96, 1, 1, "", "compute_expected_fisher_information"], [97, 1, 1, "", "compute_log_likelihood_gradient"], [98, 1, 1, "", "compute_negative_log_likelihood"], [99, 1, 1, "", "log_curvature"], [100, 1, 1, "", "log_density"], [101, 1, 1, "", "log_gradient"]], "hopsy.PyProposal": [[102, 1, 1, "", "accept_proposal"], [103, 1, 1, "", "deepcopy"], [104, 1, 1, "", "propose"]], "hopsy.RandomNumberGenerator": [[105, 1, 1, "", "__call__"]], "hopsy.ReversibleJumpProposal": [[106, 1, 1, "", "accept_proposal"], [107, 1, 1, "", "deepcopy"], [108, 1, 1, "", "propose"]], "hopsy.Rosenbrock": [[109, 1, 1, "", "compute_expected_fisher_information"], [110, 1, 1, "", "compute_log_likelihood_gradient"], [111, 1, 1, "", "compute_negative_log_likelihood"], [112, 1, 1, "", "log_curvature"], [113, 1, 1, "", "log_density"], [114, 1, 1, "", "log_gradient"]], "hopsy.Uniform": [[115, 1, 1, "", "__call__"]], "hopsy.UniformCoordinateHitAndRunProposal": [[116, 1, 1, "", "accept_proposal"], [117, 1, 1, "", "deepcopy"], [118, 1, 1, "", "propose"]], "hopsy.UniformHitAndRunProposal": [[119, 1, 1, "", "accept_proposal"], [120, 1, 1, "", "deepcopy"], [121, 1, 1, "", "propose"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"]}, "titleterms": {"exampl": [0, 126, 128, 138], "first": [1, 132], "step": 1, "instal": 2, "introduct": 3, "python": [3, 122], "implement": 3, "propos": [3, 22, 52, 55, 58, 62, 65, 74, 77, 80, 104, 108, 118, 121, 123, 138, 140], "model": [3, 19, 88, 89, 90, 91, 92, 93, 132, 137, 140], "hopsi": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 129, 132], "acceptanceratetarget": 4, "adaptivemetropolispropos": [5, 50, 51, 52], "ballwalkpropos": [6, 53, 54, 55], "billiardwalkpropos": [7, 56, 57, 58], "birkhoffpolytop": [8, 59], "csmmalapropos": [9, 60, 61, 62], "dikinwalkpropos": [10, 63, 64, 65], "expectedsquaredjumpdistancetarget": 11, "gaussian": [12, 66, 67, 68, 69, 70, 71], "gaussiancoordinatehitandrunpropos": [13, 72, 73, 74], "gaussianhitandrunpropos": [14, 75, 76, 77], "gaussianpropos": [15, 78, 79, 80], "lp": [16, 81], "markovchain": 17, "mixtur": [18, 82, 83, 84, 85, 86, 87], "normal": [20, 94], "problem": [21, 95, 129, 137, 140], "pymodel": [23, 96, 97, 98, 99, 100, 101], "pypropos": [24, 102, 103, 104], "pytuningtarget": 25, "randomnumbergener": [26, 105], "reversiblejumppropos": [27, 106, 107, 108], "rosenbrock": [28, 109, 110, 111, 112, 113, 114], "thompsonsamplingtun": 29, "tuningtarget": 30, "uniform": [31, 115], "uniformcoordinatehitandrunpropos": [32, 116, 117, 118], "uniformhitandrunpropos": [33, 119, 120, 121], "add_box_constraint": 34, "add_equality_constraint": 35, "back_transform": 36, "compute_chebyshev_cent": 37, "ess": [38, 123], "generate_unit_hypercub": 39, "generate_unit_simplex": 40, "is_polytope_empti": 41, "mcse": 42, "rhat": 43, "round": 44, "run_multiphase_sampl": 45, "sampl": [46, 122, 123, 127, 129, 132, 133, 134, 138], "simplifi": 47, "transform": [48, 137], "tune": [49, 139, 140], "accept_propos": [50, 53, 56, 60, 63, 72, 75, 78, 102, 106, 116, 119], "deepcopi": [51, 54, 57, 61, 64, 73, 76, 79, 103, 107, 117, 120], "convert_to_full_spac": 59, "compute_expected_fisher_inform": [66, 82, 88, 96, 109], "compute_log_likelihood_gradi": [67, 83, 89, 97, 110], "compute_negative_log_likelihood": [68, 84, 90, 98, 111], "log_curvatur": [69, 85, 91, 99, 112], "log_dens": [70, 86, 92, 100, 113], "log_gradi": [71, 87, 93, 101, 114], "reset": 81, "__call__": [94, 105, 115], "slack": 95, "highli": 122, "optim": 122, "polytop": [122, 124, 126, 140], "further": 122, "resourc": 122, "benchmark": 123, "multiphas": [123, 129], "mont": [123, 129, 138], "carlo": [123, 129, 138], "motiv": 123, "preimplement": 123, "background": 123, "custom": 123, "more": 123, "complex": 123, "scheme": 123, "helper": 123, "function": [123, 140], "paramet": 123, "visual": [123, 129, 134], "result": 123, "runtim": 123, "t": 123, "1": [123, 126], "": 123, "conclus": 123, "appendix": 123, "birkhoff": [124, 140], "callback": 125, "set": 125, "up": 125, "clickhous": 125, "check": 126, "feasibl": 126, "empti": 126, "x": 126, "2": [126, 128], "valid": 126, "0": 126, "3": 126, "invalid": 126, "5": [126, 128], "constrain": 127, "equal": 128, "constraint": 128, "basic": 128, "without": 128, "qqualiti": 128, "now": 128, "rectangl": 128, "2d": 128, "fix": 128, "third": 128, "dimens": 128, "demo": 129, "defin": 129, "run": 129, "parallel": [130, 134], "temper": [130, 134], "A": [131, 132], "quick": 131, "tutori": 131, "guid": [132, 135], "your": 132, "With": 132, "tmvn": 133, "from": 134, "user": 135, "post": 136, "process": 136, "refer": [136, 137, 138, 139, 140], "diagnost": [136, 140], "descript": 137, "linear": [137, 140], "markov": [138, 140], "chain": [138, 140], "distribut": 138, "code": 138, "random": [138, 140], "program": 140}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"Examples": [[0, "examples"], [0, null]], "First Steps": [[1, "first-steps"], [1, null]], "Installation": [[2, "installation"]], "Introduction": [[3, "introduction"]], "Python-implemented proposals & models": [[3, "python-implemented-proposals-models"]], "hopsy.AcceptanceRateTarget": [[4, "hopsy-acceptanceratetarget"]], "hopsy.AdaptiveMetropolisProposal": [[5, "hopsy-adaptivemetropolisproposal"]], "hopsy.BallWalkProposal": [[6, "hopsy-ballwalkproposal"]], "hopsy.BilliardWalkProposal": [[7, "hopsy-billiardwalkproposal"]], "hopsy.BirkhoffPolytope": [[8, "hopsy-birkhoffpolytope"]], "hopsy.CSmMALAProposal": [[9, "hopsy-csmmalaproposal"]], "hopsy.DikinWalkProposal": [[10, "hopsy-dikinwalkproposal"]], "hopsy.ExpectedSquaredJumpDistanceTarget": [[11, "hopsy-expectedsquaredjumpdistancetarget"]], "hopsy.Gaussian": [[12, "hopsy-gaussian"]], "hopsy.GaussianCoordinateHitAndRunProposal": [[13, "hopsy-gaussiancoordinatehitandrunproposal"]], "hopsy.GaussianHitAndRunProposal": [[14, "hopsy-gaussianhitandrunproposal"]], "hopsy.GaussianProposal": [[15, "hopsy-gaussianproposal"]], "hopsy.LP": [[16, "hopsy-lp"]], "hopsy.MarkovChain": [[17, "hopsy-markovchain"]], "hopsy.Mixture": [[18, "hopsy-mixture"]], "hopsy.Model": [[19, "hopsy-model"]], "hopsy.Normal": [[20, "hopsy-normal"]], "hopsy.Problem": [[21, "hopsy-problem"]], "hopsy.Proposal": [[22, "hopsy-proposal"]], "hopsy.PyModel": [[23, "hopsy-pymodel"]], "hopsy.PyProposal": [[24, "hopsy-pyproposal"]], "hopsy.PyTuningTarget": [[25, "hopsy-pytuningtarget"]], "hopsy.RandomNumberGenerator": [[26, "hopsy-randomnumbergenerator"]], "hopsy.ReversibleJumpProposal": [[27, "hopsy-reversiblejumpproposal"]], "hopsy.Rosenbrock": [[28, "hopsy-rosenbrock"]], "hopsy.ThompsonSamplingTuning": [[29, "hopsy-thompsonsamplingtuning"]], "hopsy.TuningTarget": [[30, "hopsy-tuningtarget"]], "hopsy.Uniform": [[31, "hopsy-uniform"]], "hopsy.UniformCoordinateHitAndRunProposal": [[32, "hopsy-uniformcoordinatehitandrunproposal"]], "hopsy.UniformHitAndRunProposal": [[33, "hopsy-uniformhitandrunproposal"]], "hopsy.add_box_constraints": [[34, "hopsy-add-box-constraints"]], "hopsy.add_equality_constraints": [[35, "hopsy-add-equality-constraints"]], "hopsy.back_transform": [[36, "hopsy-back-transform"]], "hopsy.compute_chebyshev_center": [[37, "hopsy-compute-chebyshev-center"]], "hopsy.ess": [[38, "hopsy-ess"]], "hopsy.generate_unit_hypercube": [[39, "hopsy-generate-unit-hypercube"]], "hopsy.generate_unit_simplex": [[40, "hopsy-generate-unit-simplex"]], "hopsy.is_polytope_empty": [[41, "hopsy-is-polytope-empty"]], "hopsy.mcse": [[42, "hopsy-mcse"]], "hopsy.rhat": [[43, "hopsy-rhat"]], "hopsy.round": [[44, "hopsy-round"]], "hopsy.run_multiphase_sampling": [[45, "hopsy-run-multiphase-sampling"]], "hopsy.sample": [[46, "hopsy-sample"]], "hopsy.simplify": [[47, "hopsy-simplify"]], "hopsy.transform": [[48, "hopsy-transform"]], "hopsy.tune": [[49, "hopsy-tune"]], "hopsy.AdaptiveMetropolisProposal.accept_proposal": [[50, "hopsy-adaptivemetropolisproposal-accept-proposal"]], "hopsy.AdaptiveMetropolisProposal.deepcopy": [[51, "hopsy-adaptivemetropolisproposal-deepcopy"]], "hopsy.AdaptiveMetropolisProposal.propose": [[52, "hopsy-adaptivemetropolisproposal-propose"]], "hopsy.BallWalkProposal.accept_proposal": [[53, "hopsy-ballwalkproposal-accept-proposal"]], "hopsy.BallWalkProposal.deepcopy": [[54, "hopsy-ballwalkproposal-deepcopy"]], "hopsy.BallWalkProposal.propose": [[55, "hopsy-ballwalkproposal-propose"]], "hopsy.BilliardWalkProposal.accept_proposal": [[56, "hopsy-billiardwalkproposal-accept-proposal"]], "hopsy.BilliardWalkProposal.deepcopy": [[57, "hopsy-billiardwalkproposal-deepcopy"]], "hopsy.BilliardWalkProposal.propose": [[58, "hopsy-billiardwalkproposal-propose"]], "hopsy.BirkhoffPolytope.convert_to_full_space": [[59, "hopsy-birkhoffpolytope-convert-to-full-space"]], "hopsy.CSmMALAProposal.accept_proposal": [[60, "hopsy-csmmalaproposal-accept-proposal"]], "hopsy.CSmMALAProposal.deepcopy": [[61, "hopsy-csmmalaproposal-deepcopy"]], "hopsy.CSmMALAProposal.propose": [[62, "hopsy-csmmalaproposal-propose"]], "hopsy.DikinWalkProposal.accept_proposal": [[63, "hopsy-dikinwalkproposal-accept-proposal"]], "hopsy.DikinWalkProposal.deepcopy": [[64, "hopsy-dikinwalkproposal-deepcopy"]], "hopsy.DikinWalkProposal.propose": [[65, "hopsy-dikinwalkproposal-propose"]], "hopsy.Gaussian.compute_expected_fisher_information": [[66, "hopsy-gaussian-compute-expected-fisher-information"]], "hopsy.Gaussian.compute_log_likelihood_gradient": [[67, "hopsy-gaussian-compute-log-likelihood-gradient"]], "hopsy.Gaussian.compute_negative_log_likelihood": [[68, "hopsy-gaussian-compute-negative-log-likelihood"]], "hopsy.Gaussian.log_curvature": [[69, "hopsy-gaussian-log-curvature"]], "hopsy.Gaussian.log_density": [[70, "hopsy-gaussian-log-density"]], "hopsy.Gaussian.log_gradient": [[71, "hopsy-gaussian-log-gradient"]], "hopsy.GaussianCoordinateHitAndRunProposal.accept_proposal": [[72, "hopsy-gaussiancoordinatehitandrunproposal-accept-proposal"]], "hopsy.GaussianCoordinateHitAndRunProposal.deepcopy": [[73, "hopsy-gaussiancoordinatehitandrunproposal-deepcopy"]], "hopsy.GaussianCoordinateHitAndRunProposal.propose": [[74, "hopsy-gaussiancoordinatehitandrunproposal-propose"]], "hopsy.GaussianHitAndRunProposal.accept_proposal": [[75, "hopsy-gaussianhitandrunproposal-accept-proposal"]], "hopsy.GaussianHitAndRunProposal.deepcopy": [[76, "hopsy-gaussianhitandrunproposal-deepcopy"]], "hopsy.GaussianHitAndRunProposal.propose": [[77, "hopsy-gaussianhitandrunproposal-propose"]], "hopsy.GaussianProposal.accept_proposal": [[78, "hopsy-gaussianproposal-accept-proposal"]], "hopsy.GaussianProposal.deepcopy": [[79, "hopsy-gaussianproposal-deepcopy"]], "hopsy.GaussianProposal.propose": [[80, "hopsy-gaussianproposal-propose"]], "hopsy.LP.reset": [[81, "hopsy-lp-reset"]], "hopsy.Mixture.compute_expected_fisher_information": [[82, "hopsy-mixture-compute-expected-fisher-information"]], "hopsy.Mixture.compute_log_likelihood_gradient": [[83, "hopsy-mixture-compute-log-likelihood-gradient"]], "hopsy.Mixture.compute_negative_log_likelihood": [[84, "hopsy-mixture-compute-negative-log-likelihood"]], "hopsy.Mixture.log_curvature": [[85, "hopsy-mixture-log-curvature"]], "hopsy.Mixture.log_density": [[86, "hopsy-mixture-log-density"]], "hopsy.Mixture.log_gradient": [[87, "hopsy-mixture-log-gradient"]], "hopsy.Model.compute_expected_fisher_information": [[88, "hopsy-model-compute-expected-fisher-information"]], "hopsy.Model.compute_log_likelihood_gradient": [[89, "hopsy-model-compute-log-likelihood-gradient"]], "hopsy.Model.compute_negative_log_likelihood": [[90, "hopsy-model-compute-negative-log-likelihood"]], "hopsy.Model.log_curvature": [[91, "hopsy-model-log-curvature"]], "hopsy.Model.log_density": [[92, "hopsy-model-log-density"]], "hopsy.Model.log_gradient": [[93, "hopsy-model-log-gradient"]], "hopsy.Normal.__call__": [[94, "hopsy-normal-call"]], "hopsy.Problem.slacks": [[95, "hopsy-problem-slacks"]], "hopsy.PyModel.compute_expected_fisher_information": [[96, "hopsy-pymodel-compute-expected-fisher-information"]], "hopsy.PyModel.compute_log_likelihood_gradient": [[97, "hopsy-pymodel-compute-log-likelihood-gradient"]], "hopsy.PyModel.compute_negative_log_likelihood": [[98, "hopsy-pymodel-compute-negative-log-likelihood"]], "hopsy.PyModel.log_curvature": [[99, "hopsy-pymodel-log-curvature"]], "hopsy.PyModel.log_density": [[100, "hopsy-pymodel-log-density"]], "hopsy.PyModel.log_gradient": [[101, "hopsy-pymodel-log-gradient"]], "hopsy.PyProposal.accept_proposal": [[102, "hopsy-pyproposal-accept-proposal"]], "hopsy.PyProposal.deepcopy": [[103, "hopsy-pyproposal-deepcopy"]], "hopsy.PyProposal.propose": [[104, "hopsy-pyproposal-propose"]], "hopsy.RandomNumberGenerator.__call__": [[105, "hopsy-randomnumbergenerator-call"]], "hopsy.ReversibleJumpProposal.accept_proposal": [[106, "hopsy-reversiblejumpproposal-accept-proposal"]], "hopsy.ReversibleJumpProposal.deepcopy": [[107, "hopsy-reversiblejumpproposal-deepcopy"]], "hopsy.ReversibleJumpProposal.propose": [[108, "hopsy-reversiblejumpproposal-propose"]], "hopsy.Rosenbrock.compute_expected_fisher_information": [[109, "hopsy-rosenbrock-compute-expected-fisher-information"]], "hopsy.Rosenbrock.compute_log_likelihood_gradient": [[110, "hopsy-rosenbrock-compute-log-likelihood-gradient"]], "hopsy.Rosenbrock.compute_negative_log_likelihood": [[111, "hopsy-rosenbrock-compute-negative-log-likelihood"]], "hopsy.Rosenbrock.log_curvature": [[112, "hopsy-rosenbrock-log-curvature"]], "hopsy.Rosenbrock.log_density": [[113, "hopsy-rosenbrock-log-density"]], "hopsy.Rosenbrock.log_gradient": [[114, "hopsy-rosenbrock-log-gradient"]], "hopsy.Uniform.__call__": [[115, "hopsy-uniform-call"]], "hopsy.UniformCoordinateHitAndRunProposal.accept_proposal": [[116, "hopsy-uniformcoordinatehitandrunproposal-accept-proposal"]], "hopsy.UniformCoordinateHitAndRunProposal.deepcopy": [[117, "hopsy-uniformcoordinatehitandrunproposal-deepcopy"]], "hopsy.UniformCoordinateHitAndRunProposal.propose": [[118, "hopsy-uniformcoordinatehitandrunproposal-propose"]], "hopsy.UniformHitAndRunProposal.accept_proposal": [[119, "hopsy-uniformhitandrunproposal-accept-proposal"]], "hopsy.UniformHitAndRunProposal.deepcopy": [[120, "hopsy-uniformhitandrunproposal-deepcopy"]], "hopsy.UniformHitAndRunProposal.propose": [[121, "hopsy-uniformhitandrunproposal-propose"]], "hopsy - Highly Optimized Polytope Sampling in Python": [[122, "hopsy-highly-optimized-polytope-sampling-in-python"]], "Further resources": [[122, "further-resources"]], "Benchmarking Multiphase Monte Carlo Sampling": [[123, "Benchmarking-Multiphase-Monte-Carlo-Sampling"]], "Motivation": [[123, "Motivation"]], "Preimplemented Multiphase sampling": [[123, "Preimplemented-Multiphase-sampling"]], "Background": [[123, "Background"]], "Custom proposals": [[123, "Custom-proposals"]], "More complex custom sampling schemes": [[123, "More-complex-custom-sampling-schemes"]], "Helper functions": [[123, "Helper-functions"]], "Benchmark parameters": [[123, "Benchmark-parameters"]], "Benchmarking": [[123, "Benchmarking"]], "Visualizing the results": [[123, "Visualizing-the-results"]], "visualize runtimes": [[123, "visualize-runtimes"]], "visualize ESS/t [1/s]": [[123, "visualize-ESS/t-[1/s]"]], "Conclusion": [[123, "Conclusion"]], "Appendix": [[123, "Appendix"]], "Visualizing the samples": [[123, "Visualizing-the-samples"]], "Birkhoff polytope": [[124, "Birkhoff-polytope"]], "Callbacks": [[125, "Callbacks"]], "Setting up Clickhouse": [[125, "Setting-up-Clickhouse"]], "Checking polytope feasibility": [[126, "Checking-polytope-feasibility"]], "Example 1: empty polytope x < 1 and x > 2": [[126, "Example-1:-empty-polytope-x-<-1-and-x->-2"]], "Example 2: valid polytope x < 1 and x > 0": [[126, "Example-2:-valid-polytope-x-<-1-and-x->-0"]], "Example 3: invalid polytope x < 1 and x > 0 and x=5": [[126, "Example-3:-invalid-polytope-x-<-1-and-x->-0-and-x=5"]], "Constrained Sampling": [[127, "Constrained-Sampling"]], "Equality Constraints": [[128, "Equality-Constraints"]], "Basic example without qquality constraints": [[128, "Basic-example-without-qquality-constraints"]], "Now constraint rectangle to 2D by fixing third dimension at 2.5": [[128, "Now-constraint-rectangle-to-2D-by-fixing-third-dimension-at-2.5"]], "Demo for Multiphase Monte Carlo in hopsy": [[129, "Demo-for-Multiphase-Monte-Carlo-in-hopsy"]], "define problem and run sampling": [[129, "define-problem-and-run-sampling"]], "visualize samples": [[129, "visualize-samples"]], "Parallel Tempering": [[130, "Parallel-Tempering"]], "A Quick Tutorial": [[131, "A-Quick-Tutorial"]], "A Guide to Sampling Your First Model With hopsy": [[132, "A-Guide-to-Sampling-Your-First-Model-With-hopsy"]], "TMVN Sampling": [[133, "TMVN-Sampling"]], "Visualizing samples from parallel tempering": [[134, "Visualizing-samples-from-parallel-tempering"]], "User Guide": [[135, "user-guide"], [135, null]], "Post-Processing": [[136, "post-processing"]], "Reference": [[136, "reference"], [137, "reference"], [138, "reference"], [139, "reference"], [140, "reference"]], "Diagnostics": [[136, "diagnostics"], [140, "diagnostics"]], "Problem Description": [[137, "problem-description"]], "Problem": [[137, "problem"], [137, "id2"], [140, "problem"]], "Linear Transformations": [[137, "linear-transformations"]], "Models": [[137, "models"], [140, "models"]], "Markov Chain Monte Carlo Sampling": [[138, "markov-chain-monte-carlo-sampling"]], "Markov Chains": [[138, "markov-chains"]], "Proposal Distributions": [[138, "proposal-distributions"]], "Example code": [[138, "example-code"]], "Proposals": [[138, "proposals"], [140, "proposals"]], "Markov Chain": [[138, "markov-chain"], [140, "markov-chain"]], "Random": [[138, "random"], [140, "random"]], "Tuning": [[139, "tuning"], [139, "id1"], [140, "tuning"]], "Functions": [[140, "functions"]], "Linear Programming": [[140, "linear-programming"]], "Birkhoff Polytope": [[140, "birkhoff-polytope"]]}, "indexentries": {"acceptanceratetarget (class in hopsy)": [[4, "hopsy.AcceptanceRateTarget"]], "adaptivemetropolisproposal (class in hopsy)": [[5, "hopsy.AdaptiveMetropolisProposal"]], "ballwalkproposal (class in hopsy)": [[6, "hopsy.BallWalkProposal"]], "billiardwalkproposal (class in hopsy)": [[7, "hopsy.BilliardWalkProposal"]], "birkhoffpolytope (class in hopsy)": [[8, "hopsy.BirkhoffPolytope"]], "csmmalaproposal (class in hopsy)": [[9, "hopsy.CSmMALAProposal"]], "dikinwalkproposal (class in hopsy)": [[10, "hopsy.DikinWalkProposal"]], "expectedsquaredjumpdistancetarget (class in hopsy)": [[11, "hopsy.ExpectedSquaredJumpDistanceTarget"]], "gaussian (class in hopsy)": [[12, "hopsy.Gaussian"]], "gaussiancoordinatehitandrunproposal (class in hopsy)": [[13, "hopsy.GaussianCoordinateHitAndRunProposal"]], "gaussianhitandrunproposal (class in hopsy)": [[14, "hopsy.GaussianHitAndRunProposal"]], "gaussianproposal (class in hopsy)": [[15, "hopsy.GaussianProposal"]], "lp (class in hopsy)": [[16, "hopsy.LP"]], "markovchain (class in hopsy)": [[17, "hopsy.MarkovChain"]], "mixture (class in hopsy)": [[18, "hopsy.Mixture"]], "model (class in hopsy)": [[19, "hopsy.Model"]], "normal (class in hopsy)": [[20, "hopsy.Normal"]], "problem (class in hopsy)": [[21, "hopsy.Problem"]], "proposal (class in hopsy)": [[22, "hopsy.Proposal"]], "pymodel (class in hopsy)": [[23, "hopsy.PyModel"]], "pyproposal (class in hopsy)": [[24, "hopsy.PyProposal"]], "pytuningtarget (class in hopsy)": [[25, "hopsy.PyTuningTarget"]], "randomnumbergenerator (class in hopsy)": [[26, "hopsy.RandomNumberGenerator"]], "reversiblejumpproposal (class in hopsy)": [[27, "hopsy.ReversibleJumpProposal"]], "rosenbrock (class in hopsy)": [[28, "hopsy.Rosenbrock"]], "thompsonsamplingtuning (class in hopsy)": [[29, "hopsy.ThompsonSamplingTuning"]], "tuningtarget (class in hopsy)": [[30, "hopsy.TuningTarget"]], "uniform (class in hopsy)": [[31, "hopsy.Uniform"]], "uniformcoordinatehitandrunproposal (class in hopsy)": [[32, "hopsy.UniformCoordinateHitAndRunProposal"]], "uniformhitandrunproposal (class in hopsy)": [[33, "hopsy.UniformHitAndRunProposal"]], "add_box_constraints (class in hopsy)": [[34, "hopsy.add_box_constraints"]], "add_equality_constraints() (in module hopsy)": [[35, "hopsy.add_equality_constraints"]], "back_transform() (in module hopsy)": [[36, "hopsy.back_transform"]], "compute_chebyshev_center (class in hopsy)": [[37, "hopsy.compute_chebyshev_center"]], "ess (class in hopsy)": [[38, "hopsy.ess"]], "generate_unit_hypercube() (in module hopsy)": [[39, "hopsy.generate_unit_hypercube"]], "generate_unit_simplex() (in module hopsy)": [[40, "hopsy.generate_unit_simplex"]], "is_polytope_empty() (in module hopsy)": [[41, "hopsy.is_polytope_empty"]], "mcse (class in hopsy)": [[42, "hopsy.mcse"]], "rhat (class in hopsy)": [[43, "hopsy.rhat"]], "round (class in hopsy)": [[44, "hopsy.round"]], "run_multiphase_sampling() (in module hopsy)": [[45, "hopsy.run_multiphase_sampling"]], "sample (class in hopsy)": [[46, "hopsy.sample"]], "simplify() (in module hopsy)": [[47, "hopsy.simplify"]], "transform() (in module hopsy)": [[48, "hopsy.transform"]], "tune (class in hopsy)": [[49, "hopsy.tune"]], "accept_proposal() (hopsy.adaptivemetropolisproposal method)": [[50, "hopsy.AdaptiveMetropolisProposal.accept_proposal"]], "deepcopy() (hopsy.adaptivemetropolisproposal method)": [[51, "hopsy.AdaptiveMetropolisProposal.deepcopy"]], "propose() (hopsy.adaptivemetropolisproposal method)": [[52, "hopsy.AdaptiveMetropolisProposal.propose"]], "accept_proposal() (hopsy.ballwalkproposal method)": [[53, "hopsy.BallWalkProposal.accept_proposal"]], "deepcopy() (hopsy.ballwalkproposal method)": [[54, "hopsy.BallWalkProposal.deepcopy"]], "propose() (hopsy.ballwalkproposal method)": [[55, "hopsy.BallWalkProposal.propose"]], "accept_proposal() (hopsy.billiardwalkproposal method)": [[56, "hopsy.BilliardWalkProposal.accept_proposal"]], "deepcopy() (hopsy.billiardwalkproposal method)": [[57, "hopsy.BilliardWalkProposal.deepcopy"]], "propose() (hopsy.billiardwalkproposal method)": [[58, "hopsy.BilliardWalkProposal.propose"]], "convert_to_full_space() (hopsy.birkhoffpolytope method)": [[59, "hopsy.BirkhoffPolytope.convert_to_full_space"]], "accept_proposal() (hopsy.csmmalaproposal method)": [[60, "hopsy.CSmMALAProposal.accept_proposal"]], "deepcopy() (hopsy.csmmalaproposal method)": [[61, "hopsy.CSmMALAProposal.deepcopy"]], "propose() (hopsy.csmmalaproposal method)": [[62, "hopsy.CSmMALAProposal.propose"]], "accept_proposal() (hopsy.dikinwalkproposal method)": [[63, "hopsy.DikinWalkProposal.accept_proposal"]], "deepcopy() (hopsy.dikinwalkproposal method)": [[64, "hopsy.DikinWalkProposal.deepcopy"]], "propose() (hopsy.dikinwalkproposal method)": [[65, "hopsy.DikinWalkProposal.propose"]], "compute_expected_fisher_information() (hopsy.gaussian method)": [[66, "hopsy.Gaussian.compute_expected_fisher_information"]], "compute_log_likelihood_gradient() (hopsy.gaussian method)": [[67, "hopsy.Gaussian.compute_log_likelihood_gradient"]], "compute_negative_log_likelihood() (hopsy.gaussian method)": [[68, "hopsy.Gaussian.compute_negative_log_likelihood"]], "log_curvature() (hopsy.gaussian method)": [[69, "hopsy.Gaussian.log_curvature"]], "log_density() (hopsy.gaussian method)": [[70, "hopsy.Gaussian.log_density"]], "log_gradient() (hopsy.gaussian method)": [[71, "hopsy.Gaussian.log_gradient"]], "accept_proposal() (hopsy.gaussiancoordinatehitandrunproposal method)": [[72, "hopsy.GaussianCoordinateHitAndRunProposal.accept_proposal"]], "deepcopy() (hopsy.gaussiancoordinatehitandrunproposal method)": [[73, "hopsy.GaussianCoordinateHitAndRunProposal.deepcopy"]], "propose() (hopsy.gaussiancoordinatehitandrunproposal method)": [[74, "hopsy.GaussianCoordinateHitAndRunProposal.propose"]], "accept_proposal() (hopsy.gaussianhitandrunproposal method)": [[75, "hopsy.GaussianHitAndRunProposal.accept_proposal"]], "deepcopy() (hopsy.gaussianhitandrunproposal method)": [[76, "hopsy.GaussianHitAndRunProposal.deepcopy"]], "propose() (hopsy.gaussianhitandrunproposal method)": [[77, "hopsy.GaussianHitAndRunProposal.propose"]], "accept_proposal() (hopsy.gaussianproposal method)": [[78, "hopsy.GaussianProposal.accept_proposal"]], "deepcopy() (hopsy.gaussianproposal method)": [[79, "hopsy.GaussianProposal.deepcopy"]], "propose() (hopsy.gaussianproposal method)": [[80, "hopsy.GaussianProposal.propose"]], "reset() (hopsy.lp method)": [[81, "hopsy.LP.reset"]], "compute_expected_fisher_information() (hopsy.mixture method)": [[82, "hopsy.Mixture.compute_expected_fisher_information"]], "compute_log_likelihood_gradient() (hopsy.mixture method)": [[83, "hopsy.Mixture.compute_log_likelihood_gradient"]], "compute_negative_log_likelihood() (hopsy.mixture method)": [[84, "hopsy.Mixture.compute_negative_log_likelihood"]], "log_curvature() (hopsy.mixture method)": [[85, "hopsy.Mixture.log_curvature"]], "log_density() (hopsy.mixture method)": [[86, "hopsy.Mixture.log_density"]], "log_gradient() (hopsy.mixture method)": [[87, "hopsy.Mixture.log_gradient"]], "compute_expected_fisher_information() (hopsy.model method)": [[88, "hopsy.Model.compute_expected_fisher_information"]], "compute_log_likelihood_gradient() (hopsy.model method)": [[89, "hopsy.Model.compute_log_likelihood_gradient"]], "compute_negative_log_likelihood() (hopsy.model method)": [[90, "hopsy.Model.compute_negative_log_likelihood"]], "log_curvature() (hopsy.model method)": [[91, "hopsy.Model.log_curvature"]], "log_density() (hopsy.model method)": [[92, "hopsy.Model.log_density"]], "log_gradient() (hopsy.model method)": [[93, "hopsy.Model.log_gradient"]], "__call__() (hopsy.normal method)": [[94, "hopsy.Normal.__call__"]], "slacks() (hopsy.problem method)": [[95, "hopsy.Problem.slacks"]], "compute_expected_fisher_information() (hopsy.pymodel method)": [[96, "hopsy.PyModel.compute_expected_fisher_information"]], "compute_log_likelihood_gradient() (hopsy.pymodel method)": [[97, "hopsy.PyModel.compute_log_likelihood_gradient"]], "compute_negative_log_likelihood() (hopsy.pymodel method)": [[98, "hopsy.PyModel.compute_negative_log_likelihood"]], "log_curvature() (hopsy.pymodel method)": [[99, "hopsy.PyModel.log_curvature"]], "log_density() (hopsy.pymodel method)": [[100, "hopsy.PyModel.log_density"]], "log_gradient() (hopsy.pymodel method)": [[101, "hopsy.PyModel.log_gradient"]], "accept_proposal() (hopsy.pyproposal method)": [[102, "hopsy.PyProposal.accept_proposal"]], "deepcopy() (hopsy.pyproposal method)": [[103, "hopsy.PyProposal.deepcopy"]], "propose() (hopsy.pyproposal method)": [[104, "hopsy.PyProposal.propose"]], "__call__() (hopsy.randomnumbergenerator method)": [[105, "hopsy.RandomNumberGenerator.__call__"]], "accept_proposal() (hopsy.reversiblejumpproposal method)": [[106, "hopsy.ReversibleJumpProposal.accept_proposal"]], "deepcopy() (hopsy.reversiblejumpproposal method)": [[107, "hopsy.ReversibleJumpProposal.deepcopy"]], "propose() (hopsy.reversiblejumpproposal method)": [[108, "hopsy.ReversibleJumpProposal.propose"]], "compute_expected_fisher_information() (hopsy.rosenbrock method)": [[109, "hopsy.Rosenbrock.compute_expected_fisher_information"]], "compute_log_likelihood_gradient() (hopsy.rosenbrock method)": [[110, "hopsy.Rosenbrock.compute_log_likelihood_gradient"]], "compute_negative_log_likelihood() (hopsy.rosenbrock method)": [[111, "hopsy.Rosenbrock.compute_negative_log_likelihood"]], "log_curvature() (hopsy.rosenbrock method)": [[112, "hopsy.Rosenbrock.log_curvature"]], "log_density() (hopsy.rosenbrock method)": [[113, "hopsy.Rosenbrock.log_density"]], "log_gradient() (hopsy.rosenbrock method)": [[114, "hopsy.Rosenbrock.log_gradient"]], "__call__() (hopsy.uniform method)": [[115, "hopsy.Uniform.__call__"]], "accept_proposal() (hopsy.uniformcoordinatehitandrunproposal method)": [[116, "hopsy.UniformCoordinateHitAndRunProposal.accept_proposal"]], "deepcopy() (hopsy.uniformcoordinatehitandrunproposal method)": [[117, "hopsy.UniformCoordinateHitAndRunProposal.deepcopy"]], "propose() (hopsy.uniformcoordinatehitandrunproposal method)": [[118, "hopsy.UniformCoordinateHitAndRunProposal.propose"]], "accept_proposal() (hopsy.uniformhitandrunproposal method)": [[119, "hopsy.UniformHitAndRunProposal.accept_proposal"]], "deepcopy() (hopsy.uniformhitandrunproposal method)": [[120, "hopsy.UniformHitAndRunProposal.deepcopy"]], "propose() (hopsy.uniformhitandrunproposal method)": [[121, "hopsy.UniformHitAndRunProposal.propose"]]}})