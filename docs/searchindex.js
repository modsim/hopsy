Search.setIndex({"docnames": ["examples", "firststeps", "firststeps/installation", "firststeps/introduction", "generated/hopsy.AcceptanceRateTarget", "generated/hopsy.AdaptiveMetropolisProposal", "generated/hopsy.BallWalkProposal", "generated/hopsy.CSmMALAProposal", "generated/hopsy.DikinWalkProposal", "generated/hopsy.ExpectedSquaredJumpDistanceTarget", "generated/hopsy.Gaussian", "generated/hopsy.GaussianCoordinateHitAndRunProposal", "generated/hopsy.GaussianHitAndRunProposal", "generated/hopsy.GaussianProposal", "generated/hopsy.MarkovChain", "generated/hopsy.Mixture", "generated/hopsy.Model", "generated/hopsy.Normal", "generated/hopsy.Problem", "generated/hopsy.Proposal", "generated/hopsy.PyModel", "generated/hopsy.PyProposal", "generated/hopsy.PyTuningTarget", "generated/hopsy.RandomNumberGenerator", "generated/hopsy.Rosenbrock", "generated/hopsy.ThompsonSamplingTuning", "generated/hopsy.TuningTarget", "generated/hopsy.Uniform", "generated/hopsy.UniformCoordinateHitAndRunProposal", "generated/hopsy.UniformHitAndRunProposal", "generated/hopsy.add_box_constraints", "generated/hopsy.compute_chebyshev_center", "generated/hopsy.ess", "generated/hopsy.mcse", "generated/hopsy.rhat", "generated/hopsy.round", "generated/hopsy.sample", "generated/hopsy.tune", "generated/objname/hopsy.AdaptiveMetropolisProposal.accept_proposal", "generated/objname/hopsy.AdaptiveMetropolisProposal.deepcopy", "generated/objname/hopsy.AdaptiveMetropolisProposal.propose", "generated/objname/hopsy.BallWalkProposal.accept_proposal", "generated/objname/hopsy.BallWalkProposal.deepcopy", "generated/objname/hopsy.BallWalkProposal.propose", "generated/objname/hopsy.CSmMALAProposal.accept_proposal", "generated/objname/hopsy.CSmMALAProposal.deepcopy", "generated/objname/hopsy.CSmMALAProposal.propose", "generated/objname/hopsy.DikinWalkProposal.accept_proposal", "generated/objname/hopsy.DikinWalkProposal.deepcopy", "generated/objname/hopsy.DikinWalkProposal.propose", "generated/objname/hopsy.Gaussian.compute_expected_fisher_information", "generated/objname/hopsy.Gaussian.compute_log_likelihood_gradient", "generated/objname/hopsy.Gaussian.compute_negative_log_likelihood", "generated/objname/hopsy.GaussianCoordinateHitAndRunProposal.accept_proposal", "generated/objname/hopsy.GaussianCoordinateHitAndRunProposal.deepcopy", "generated/objname/hopsy.GaussianCoordinateHitAndRunProposal.propose", "generated/objname/hopsy.GaussianHitAndRunProposal.accept_proposal", "generated/objname/hopsy.GaussianHitAndRunProposal.deepcopy", "generated/objname/hopsy.GaussianHitAndRunProposal.propose", "generated/objname/hopsy.GaussianProposal.accept_proposal", "generated/objname/hopsy.GaussianProposal.deepcopy", "generated/objname/hopsy.GaussianProposal.propose", "generated/objname/hopsy.Mixture.compute_expected_fisher_information", "generated/objname/hopsy.Mixture.compute_log_likelihood_gradient", "generated/objname/hopsy.Mixture.compute_negative_log_likelihood", "generated/objname/hopsy.Model.compute_expected_fisher_information", "generated/objname/hopsy.Model.compute_log_likelihood_gradient", "generated/objname/hopsy.Model.compute_negative_log_likelihood", "generated/objname/hopsy.Normal.__call__", "generated/objname/hopsy.Proposal.accept_proposal", "generated/objname/hopsy.Proposal.deepcopy", "generated/objname/hopsy.Proposal.propose", "generated/objname/hopsy.PyModel.compute_expected_fisher_information", "generated/objname/hopsy.PyModel.compute_log_likelihood_gradient", "generated/objname/hopsy.PyModel.compute_negative_log_likelihood", "generated/objname/hopsy.PyProposal.accept_proposal", "generated/objname/hopsy.PyProposal.deepcopy", "generated/objname/hopsy.PyProposal.propose", "generated/objname/hopsy.RandomNumberGenerator.__call__", "generated/objname/hopsy.Rosenbrock.compute_expected_fisher_information", "generated/objname/hopsy.Rosenbrock.compute_log_likelihood_gradient", "generated/objname/hopsy.Rosenbrock.compute_negative_log_likelihood", "generated/objname/hopsy.Uniform.__call__", "generated/objname/hopsy.UniformCoordinateHitAndRunProposal.accept_proposal", "generated/objname/hopsy.UniformCoordinateHitAndRunProposal.deepcopy", "generated/objname/hopsy.UniformCoordinateHitAndRunProposal.propose", "generated/objname/hopsy.UniformHitAndRunProposal.accept_proposal", "generated/objname/hopsy.UniformHitAndRunProposal.deepcopy", "generated/objname/hopsy.UniformHitAndRunProposal.propose", "index", "notebooks/BirkhoffPolytope", "notebooks/ConstrainedSampling", "notebooks/QuickTutorial", "notebooks/SamplingAdvice", "notebooks/TruncatedGaussianProposal", "notebooks/eval_pt_samples", "userguide", "userguide/postprocessing", "userguide/problem", "userguide/sampling", "userguide/tuning", "reference"], "filenames": ["examples.rst", "firststeps.rst", "firststeps/installation.rst", "firststeps/introduction.rst", "generated/hopsy.AcceptanceRateTarget.rst", "generated/hopsy.AdaptiveMetropolisProposal.rst", "generated/hopsy.BallWalkProposal.rst", "generated/hopsy.CSmMALAProposal.rst", "generated/hopsy.DikinWalkProposal.rst", "generated/hopsy.ExpectedSquaredJumpDistanceTarget.rst", "generated/hopsy.Gaussian.rst", "generated/hopsy.GaussianCoordinateHitAndRunProposal.rst", "generated/hopsy.GaussianHitAndRunProposal.rst", "generated/hopsy.GaussianProposal.rst", "generated/hopsy.MarkovChain.rst", "generated/hopsy.Mixture.rst", "generated/hopsy.Model.rst", "generated/hopsy.Normal.rst", "generated/hopsy.Problem.rst", "generated/hopsy.Proposal.rst", "generated/hopsy.PyModel.rst", "generated/hopsy.PyProposal.rst", "generated/hopsy.PyTuningTarget.rst", "generated/hopsy.RandomNumberGenerator.rst", "generated/hopsy.Rosenbrock.rst", "generated/hopsy.ThompsonSamplingTuning.rst", "generated/hopsy.TuningTarget.rst", "generated/hopsy.Uniform.rst", "generated/hopsy.UniformCoordinateHitAndRunProposal.rst", "generated/hopsy.UniformHitAndRunProposal.rst", "generated/hopsy.add_box_constraints.rst", "generated/hopsy.compute_chebyshev_center.rst", "generated/hopsy.ess.rst", "generated/hopsy.mcse.rst", "generated/hopsy.rhat.rst", "generated/hopsy.round.rst", "generated/hopsy.sample.rst", "generated/hopsy.tune.rst", "generated/objname/hopsy.AdaptiveMetropolisProposal.accept_proposal.rst", "generated/objname/hopsy.AdaptiveMetropolisProposal.deepcopy.rst", "generated/objname/hopsy.AdaptiveMetropolisProposal.propose.rst", "generated/objname/hopsy.BallWalkProposal.accept_proposal.rst", "generated/objname/hopsy.BallWalkProposal.deepcopy.rst", "generated/objname/hopsy.BallWalkProposal.propose.rst", "generated/objname/hopsy.CSmMALAProposal.accept_proposal.rst", "generated/objname/hopsy.CSmMALAProposal.deepcopy.rst", "generated/objname/hopsy.CSmMALAProposal.propose.rst", "generated/objname/hopsy.DikinWalkProposal.accept_proposal.rst", "generated/objname/hopsy.DikinWalkProposal.deepcopy.rst", "generated/objname/hopsy.DikinWalkProposal.propose.rst", "generated/objname/hopsy.Gaussian.compute_expected_fisher_information.rst", "generated/objname/hopsy.Gaussian.compute_log_likelihood_gradient.rst", "generated/objname/hopsy.Gaussian.compute_negative_log_likelihood.rst", "generated/objname/hopsy.GaussianCoordinateHitAndRunProposal.accept_proposal.rst", "generated/objname/hopsy.GaussianCoordinateHitAndRunProposal.deepcopy.rst", "generated/objname/hopsy.GaussianCoordinateHitAndRunProposal.propose.rst", "generated/objname/hopsy.GaussianHitAndRunProposal.accept_proposal.rst", "generated/objname/hopsy.GaussianHitAndRunProposal.deepcopy.rst", "generated/objname/hopsy.GaussianHitAndRunProposal.propose.rst", "generated/objname/hopsy.GaussianProposal.accept_proposal.rst", "generated/objname/hopsy.GaussianProposal.deepcopy.rst", "generated/objname/hopsy.GaussianProposal.propose.rst", "generated/objname/hopsy.Mixture.compute_expected_fisher_information.rst", "generated/objname/hopsy.Mixture.compute_log_likelihood_gradient.rst", "generated/objname/hopsy.Mixture.compute_negative_log_likelihood.rst", "generated/objname/hopsy.Model.compute_expected_fisher_information.rst", "generated/objname/hopsy.Model.compute_log_likelihood_gradient.rst", "generated/objname/hopsy.Model.compute_negative_log_likelihood.rst", "generated/objname/hopsy.Normal.__call__.rst", "generated/objname/hopsy.Proposal.accept_proposal.rst", "generated/objname/hopsy.Proposal.deepcopy.rst", "generated/objname/hopsy.Proposal.propose.rst", "generated/objname/hopsy.PyModel.compute_expected_fisher_information.rst", "generated/objname/hopsy.PyModel.compute_log_likelihood_gradient.rst", "generated/objname/hopsy.PyModel.compute_negative_log_likelihood.rst", "generated/objname/hopsy.PyProposal.accept_proposal.rst", "generated/objname/hopsy.PyProposal.deepcopy.rst", "generated/objname/hopsy.PyProposal.propose.rst", "generated/objname/hopsy.RandomNumberGenerator.__call__.rst", "generated/objname/hopsy.Rosenbrock.compute_expected_fisher_information.rst", "generated/objname/hopsy.Rosenbrock.compute_log_likelihood_gradient.rst", "generated/objname/hopsy.Rosenbrock.compute_negative_log_likelihood.rst", "generated/objname/hopsy.Uniform.__call__.rst", "generated/objname/hopsy.UniformCoordinateHitAndRunProposal.accept_proposal.rst", "generated/objname/hopsy.UniformCoordinateHitAndRunProposal.deepcopy.rst", "generated/objname/hopsy.UniformCoordinateHitAndRunProposal.propose.rst", "generated/objname/hopsy.UniformHitAndRunProposal.accept_proposal.rst", "generated/objname/hopsy.UniformHitAndRunProposal.deepcopy.rst", "generated/objname/hopsy.UniformHitAndRunProposal.propose.rst", "index.rst", "notebooks/BirkhoffPolytope.ipynb", "notebooks/ConstrainedSampling.ipynb", "notebooks/QuickTutorial.ipynb", "notebooks/SamplingAdvice.ipynb", "notebooks/TruncatedGaussianProposal.ipynb", "notebooks/eval_pt_samples.ipynb", "userguide.rst", "userguide/postprocessing.rst", "userguide/problem.rst", "userguide/sampling.rst", "userguide/tuning.rst", "reference.rst"], "titles": ["Examples", "First Steps", "Installation", "Introduction", "hopsy.AcceptanceRateTarget", "hopsy.AdaptiveMetropolisProposal", "hopsy.BallWalkProposal", "hopsy.CSmMALAProposal", "hopsy.DikinWalkProposal", "hopsy.ExpectedSquaredJumpDistanceTarget", "hopsy.Gaussian", "hopsy.GaussianCoordinateHitAndRunProposal", "hopsy.GaussianHitAndRunProposal", "hopsy.GaussianProposal", "hopsy.MarkovChain", "hopsy.Mixture", "hopsy.Model", "hopsy.Normal", "hopsy.Problem", "hopsy.Proposal", "hopsy.PyModel", "hopsy.PyProposal", "hopsy.PyTuningTarget", "hopsy.RandomNumberGenerator", "hopsy.Rosenbrock", "hopsy.ThompsonSamplingTuning", "hopsy.TuningTarget", "hopsy.Uniform", "hopsy.UniformCoordinateHitAndRunProposal", "hopsy.UniformHitAndRunProposal", "hopsy.add_box_constraints", "hopsy.compute_chebyshev_center", "hopsy.ess", "hopsy.mcse", "hopsy.rhat", "hopsy.round", "hopsy.sample", "hopsy.tune", "hopsy.AdaptiveMetropolisProposal.accept_proposal", "hopsy.AdaptiveMetropolisProposal.deepcopy", "hopsy.AdaptiveMetropolisProposal.propose", "hopsy.BallWalkProposal.accept_proposal", "hopsy.BallWalkProposal.deepcopy", "hopsy.BallWalkProposal.propose", "hopsy.CSmMALAProposal.accept_proposal", "hopsy.CSmMALAProposal.deepcopy", "hopsy.CSmMALAProposal.propose", "hopsy.DikinWalkProposal.accept_proposal", "hopsy.DikinWalkProposal.deepcopy", "hopsy.DikinWalkProposal.propose", "hopsy.Gaussian.compute_expected_fisher_information", "hopsy.Gaussian.compute_log_likelihood_gradient", "hopsy.Gaussian.compute_negative_log_likelihood", "hopsy.GaussianCoordinateHitAndRunProposal.accept_proposal", "hopsy.GaussianCoordinateHitAndRunProposal.deepcopy", "hopsy.GaussianCoordinateHitAndRunProposal.propose", "hopsy.GaussianHitAndRunProposal.accept_proposal", "hopsy.GaussianHitAndRunProposal.deepcopy", "hopsy.GaussianHitAndRunProposal.propose", "hopsy.GaussianProposal.accept_proposal", "hopsy.GaussianProposal.deepcopy", "hopsy.GaussianProposal.propose", "hopsy.Mixture.compute_expected_fisher_information", "hopsy.Mixture.compute_log_likelihood_gradient", "hopsy.Mixture.compute_negative_log_likelihood", "hopsy.Model.compute_expected_fisher_information", "hopsy.Model.compute_log_likelihood_gradient", "hopsy.Model.compute_negative_log_likelihood", "hopsy.Normal.__call__", "hopsy.Proposal.accept_proposal", "hopsy.Proposal.deepcopy", "hopsy.Proposal.propose", "hopsy.PyModel.compute_expected_fisher_information", "hopsy.PyModel.compute_log_likelihood_gradient", "hopsy.PyModel.compute_negative_log_likelihood", "hopsy.PyProposal.accept_proposal", "hopsy.PyProposal.deepcopy", "hopsy.PyProposal.propose", "hopsy.RandomNumberGenerator.__call__", "hopsy.Rosenbrock.compute_expected_fisher_information", "hopsy.Rosenbrock.compute_log_likelihood_gradient", "hopsy.Rosenbrock.compute_negative_log_likelihood", "hopsy.Uniform.__call__", "hopsy.UniformCoordinateHitAndRunProposal.accept_proposal", "hopsy.UniformCoordinateHitAndRunProposal.deepcopy", "hopsy.UniformCoordinateHitAndRunProposal.propose", "hopsy.UniformHitAndRunProposal.accept_proposal", "hopsy.UniformHitAndRunProposal.deepcopy", "hopsy.UniformHitAndRunProposal.propose", "hopsy - Highly Optimized Polytope Sampling in Python", "Birkhoff polytope", "Constrained Sampling", "A Quick Tutorial", "A Guide to Sampling Your First Model With hopsy", "TMVN Sampling", "&lt;no title&gt;", "User Guide", "Post-Processing", "Problem Description", "Markov Chain Monte Carlo Sampling", "Tuning", "Reference"], "terms": {"A": [0, 1, 24, 30, 31, 35, 89, 90, 91, 94, 98], "guid": [0, 1, 89], "sampl": [0, 1, 3, 14, 32, 33, 34, 90, 92, 95, 96, 98], "your": [0, 1, 2, 65, 66, 89], "first": [0, 89, 96], "model": [0, 1, 10, 15, 20, 50, 51, 52, 62, 63, 64, 72, 73, 74, 89, 90, 94, 99], "With": [0, 1, 89], "hopsi": [0, 1, 2, 3, 90, 91, 92, 94, 96, 98, 99], "constrain": [0, 3, 30, 89], "birkhoff": [0, 89], "polytop": [0, 30, 31, 35, 92, 93, 98, 99], "The": [1, 10, 14, 15, 20, 31, 32, 34, 35, 36, 50, 51, 52, 63, 64, 65, 66, 67, 72, 73, 74, 79, 80, 81, 90, 91, 92, 93, 98, 99], "contain": [1, 30, 31, 35, 36, 96, 98], "quick": [1, 89], "instal": [1, 89], "an": [1, 10, 89], "introduct": [1, 89], "problem": [1, 14, 30, 31, 35, 89, 90, 91, 92, 93, 94, 96, 99], "solv": [1, 99], "tutori": [1, 89], "can": [2, 10, 14, 30, 36, 65, 66, 89, 91, 93, 98], "easili": [2, 99], "from": [2, 3, 10, 16, 34, 36, 90, 93, 95], "python": [2, 15, 20, 98, 99], "packag": 2, "index": 2, "us": [2, 3, 30, 32, 35, 36, 65, 66, 89, 90, 91, 92, 93, 98, 99], "pip": [2, 89], "altern": 2, "you": [2, 3, 20, 30, 65, 66, 89, 93, 98], "download": 2, "sourc": [2, 89], "code": [2, 89, 93], "our": [2, 89], "github": [2, 32, 33, 34, 89], "repositori": 2, "git": 2, "clone": 2, "http": [2, 24, 32, 33, 34, 98], "com": 2, "modsim": 2, "recurs": 2, "compil": 2, "either": 2, "binari": 2, "wheel": 2, "dep": 2, "standard": [2, 10, 33, 92], "cmake": 2, "routin": 2, "mkdir": 2, "build": 2, "releas": 2, "cd": 2, "make": [2, 96, 99], "note": [2, 32, 34, 50, 51, 52, 93], "howev": [2, 10, 98], "produc": [2, 36, 98], "actual": [2, 36], "dist": 2, "x": [2, 3, 15, 50, 51, 52, 62, 63, 64, 65, 66, 67, 72, 73, 74, 79, 80, 81, 89, 90, 92, 94, 98, 99], "y": [2, 99], "z": [2, 34], "tag": 2, "whl": 2, "where": [2, 3, 10, 32, 34, 89], "version": 2, "depend": [2, 98], "verison": 2, "environ": 2, "For": [3, 32, 33, 34, 36, 65, 66, 89, 93, 98, 99], "high": 3, "flexibl": [3, 89], "when": [3, 34, 89, 92, 93], "hop": [3, 20, 89, 98, 99], "we": [3, 10, 30, 92, 93, 98, 99], "made": 3, "algorithm": [3, 89, 91, 93, 98, 99], "well": [3, 93], "defin": [3, 10, 31, 35, 36, 93], "likelihood": [3, 51, 52, 63, 64, 66, 80, 81, 93, 98, 99], "consid": [3, 10, 91], "metropoli": [3, 99], "criterion": [3, 32], "alpha": [3, 91, 93, 94, 95], "theta": 3, "min": [3, 36], "big": [3, 10], "1": [3, 10, 15, 30, 31, 32, 33, 34, 36, 50, 51, 52, 62, 63, 64, 65, 66, 67, 72, 73, 74, 79, 80, 81, 89, 90, 91, 92, 93, 94, 95, 98, 99], "frac": [3, 32, 34, 91, 99], "pi": 3, "q": 3, "which": [3, 10, 30, 31, 32, 34, 35, 36, 89, 91, 93, 98, 99], "comput": [3, 31, 32, 33, 34, 50, 51, 52, 62, 63, 64, 65, 66, 93, 98, 99], "accept": [3, 10, 36, 91, 92, 93], "probabl": [3, 32, 51, 52, 63, 64, 91], "move": [3, 91], "gener": [3, 32, 33, 34, 36, 62, 90, 91, 92, 93, 99], "i": [3, 10, 15, 30, 31, 32, 34, 36, 62, 63, 64, 65, 66, 67, 89, 90, 91, 92, 93, 94, 95, 98, 99], "distribut": [3, 34, 91, 92, 98], "target": [3, 34, 89, 93, 98], "wish": 3, "draw": [3, 32, 36], "In": [3, 91, 92, 93, 98], "assum": [3, 15, 91, 98], "exp": [3, 10, 94], "f": [3, 10, 15, 63, 64, 90], "neg": [3, 52, 64, 81, 93, 98], "log": [3, 51, 52, 63, 64, 66, 80, 81, 93, 98], "have": [3, 30, 34, 36, 50, 51, 52, 91, 92, 93, 98], "provid": [3, 89, 90, 98], "want": [3, 93], "self": [3, 10, 15, 50, 51, 52, 62, 63, 64, 72, 73, 74, 79, 80, 81, 93], "To": [3, 34], "read": 3, "more": [3, 16, 34, 89, 91, 93, 96, 98], "about": [3, 36, 92, 98], "detail": [3, 16, 96, 98], "how": [3, 16, 92], "custom": [3, 16, 65, 66, 67, 89, 92, 93, 98, 99], "pleas": [3, 89, 98], "refer": [3, 24, 32, 33, 34, 89], "thi": [3, 10, 16, 30, 34, 35, 36, 50, 62, 67, 89, 91, 92, 93, 98, 99], "page": 3, "although": 3, "ship": [3, 98], "numer": 3, "optim": [3, 93, 98, 99], "work": [3, 16, 20, 89, 93, 99], "linearili": [3, 89], "space": [3, 89, 90, 98], "written": 3, "c": [3, 89, 95, 98, 99], "also": [3, 10, 30, 35, 36, 89, 93, 98, 99], "possibl": [3, 98, 99], "class": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 90, 93, 94, 98, 99], "attribut": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 20, 21, 24, 25, 27, 28, 29, 36], "method": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 62, 67, 93, 98], "mean": [10, 30, 32, 33, 91, 92, 93, 94, 98], "0": [10, 32, 33, 34, 89, 90, 91, 92, 93, 94, 95, 99], "covari": [10, 50], "inact": 10, "invari": [10, 98], "some": [10, 65, 66, 91, 92, 98, 99], "dimens": [10, 24, 30, 50, 51, 52, 91, 98], "input": [10, 50, 51, 52, 62, 63, 64, 65, 66, 67, 72, 73, 74, 79, 80, 81, 98], "vector": [10, 30, 31, 35, 50, 51, 52, 62, 63, 64, 65, 66, 67, 72, 73, 74, 79, 80, 81, 93, 98], "As": [10, 99], "exampl": [10, 89, 91, 92, 93], "one": [10, 34, 93], "dimension": [10, 24, 65, 66, 90, 92], "squar": [10, 90], "exponenti": 10, "function": [10, 16, 20, 24, 30, 32, 35, 51, 52, 63, 64, 89, 93, 98, 99], "two": [10, 32, 34, 36], "variabl": 10, "x_1": [10, 92], "x_2": 10, "2": [10, 32, 90, 91, 92, 93, 94, 95], "under": 10, "second": 10, "sai": 10, "compon": [10, 15, 63, 64, 98], "degener": 10, "multivari": [10, 50, 51, 52, 98], "regular": 10, "n": [10, 15, 30, 31, 32, 33, 34, 50, 51, 52, 62, 63, 64, 65, 66, 67, 72, 73, 74, 90, 91, 92], "k": [10, 32, 50, 51, 52, 91, 94], "ha": [10, 34, 36, 50, 51, 52, 91, 93, 98, 99], "its": [10, 15, 91, 93], "ar": [10, 15, 16, 30, 32, 33, 34, 90, 93, 98, 99], "technic": 10, "realiz": 10, "remov": [10, 30], "row": [10, 30, 65, 66, 90], "column": [10, 90], "matrix": [10, 30, 31, 35, 50, 65, 79, 98], "correspond": [10, 99], "basic": [10, 32], "construct": [10, 14], "unlik": 10, "still": [10, 16, 32, 50, 51, 52, 93], "onli": [10, 32, 33, 34, 89, 93], "pass": [10, 14, 20, 31, 32, 33, 34, 36, 98], "empti": 10, "list": [10, 14, 15, 36], "common": [10, 92, 98], "paramet": [10, 15, 30, 31, 32, 33, 34, 35, 36, 50, 51, 52, 62, 63, 64, 65, 66, 72, 73, 74, 79, 80, 81, 93], "numpi": [10, 30, 31, 32, 33, 34, 36, 50, 51, 52, 62, 63, 64, 65, 66, 67, 72, 73, 74, 79, 80, 81, 90, 91, 93, 94, 99], "ndarrai": [10, 30, 31, 32, 33, 34, 36, 50, 51, 52, 62, 63, 64, 65, 66, 67, 72, 73, 74, 79, 80, 81, 99], "int": [10, 30, 32, 33, 34, 36], "so": [10, 15, 16, 32, 33, 34], "entri": 10, "should": [10, 16, 30, 31, 34, 35, 67, 93, 98, 99], "between": [10, 34], "propos": [14, 16, 36, 65, 66, 89, 91, 92, 93, 94], "gaussianhitandrun": 14, "starting_point": [14, 89, 90, 91, 92, 93, 94], "none": [14, 15, 32, 33, 34, 36, 62, 94, 99], "given": [14, 15, 20, 92], "object": [14, 15, 20, 89, 93, 98], "markov": [14, 33, 36, 89, 91, 92, 93, 96], "chain": [14, 32, 33, 34, 36, 89, 91, 92, 93, 94, 96], "keep": 14, "track": 14, "intern": [14, 99], "state": [14, 36, 91, 92, 98, 99], "select": [14, 32, 33, 34], "mechan": [14, 16], "see": [14, 16, 32, 34, 91], "argument": 14, "sever": 14, "parallel": [14, 36, 92, 93], "them": [14, 93], "weight": [15, 63, 64, 98], "sum": [15, 63, 64, 90], "unnorm": [15, 51, 52, 63, 64, 66, 80, 81], "densiti": [15, 51, 52, 63, 64, 91, 93, 94, 95], "sum_": [15, 32, 63, 64], "w_i": [15, 63, 64], "f_i": [15, 63, 64], "mai": [15, 30, 98], "arbitrari": [15, 20, 90, 98], "implement": [15, 16, 20, 32, 62, 67, 89, 93, 98, 99], "requir": [15, 16, 20, 67, 99], "pymodel": [15, 98], "": [15, 30, 32, 35, 36, 89, 98, 99], "float": [15, 30, 32, 33, 52, 64, 67, 74, 81, 99], "If": [15, 30, 34, 36, 65, 66, 89, 93], "thei": [15, 16, 93], "all": [15, 16, 30, 34, 36, 91, 93, 99], "base": [16, 89, 93], "while": 16, "inherit": 16, "allow": [20, 89], "interfac": [20, 93, 98], "correctli": 20, "compute_negative_log_likelihood": [20, 93, 94, 98], "compute_log_likelihood_gradi": [20, 98], "compute_expected_fisher_inform": [20, 98], "multi": 24, "2n": [24, 30, 79, 80, 81], "doi": 24, "org": [24, 32, 34, 98], "10": [24, 89, 91, 92, 93, 94], "1162": 24, "evco": 24, "2009": 24, "17": 24, "3": [24, 90, 91, 92, 93, 94, 95], "437": 24, "lower_bound": 30, "_supportsarrai": 30, "dtype": 30, "_nestedsequ": 30, "bool": [30, 32, 36], "complex": 30, "str": [30, 32, 33, 34, 36, 94, 95, 99], "byte": 30, "upper_bound": 30, "simplifi": 30, "true": [30, 93, 94, 95], "add": 30, "box": [30, 91], "constraint": [30, 35, 93], "extend": 30, "return": [30, 31, 32, 33, 34, 35, 36, 50, 51, 52, 62, 63, 64, 65, 66, 67, 72, 73, 74, 79, 80, 81, 93, 98, 99], "m": [30, 32, 52, 90, 92], "ad": 30, "naiv": 30, "do": [30, 92, 99], "neither": 30, "check": [30, 93], "whether": 30, "alreadi": [30, 98], "somehow": 30, "bound": 30, "nor": 30, "veri": [30, 91, 92], "same": [30, 91], "exist": [30, 62], "redund": [30, 35], "effici": [30, 89, 93], "polyround": [30, 35, 98], "toolbox": [30, 98], "round": [30, 90, 93, 98], "both": 30, "everi": [30, 32, 33, 34, 36, 93], "lb": 30, "leq": [30, 31, 35, 89, 92, 98], "x_i": 30, "ub": 30, "appropri": 30, "length": 30, "lb_i": 30, "ub_i": 30, "b": [30, 31, 35, 89, 90, 91, 92, 93, 94, 98], "ax": [30, 31, 35, 89, 92, 93, 98], "float64": [30, 31, 65, 67, 72, 73, 74, 79, 80, 81], "specifi": 30, "lower": 30, "upper": 30, "type": [30, 31, 32, 33, 34, 35, 50, 51, 52, 62, 63, 64, 65, 66, 67, 72, 73, 74, 79, 80, 81, 93, 98], "chebyshev": [31, 93], "center": [31, 92], "midpoint": 31, "non": [31, 93, 98], "uniqu": 31, "largest": 31, "inscrib": 31, "ball": 31, "data": [32, 33, 34], "seri": [32, 33, 34, 92], "bulk": 32, "rel": [32, 34], "fals": 32, "prob": [32, 33], "dask_kwarg": [32, 33, 34], "calcul": [32, 33, 34], "estim": [32, 34], "effect": [32, 34, 91, 93], "size": [32, 36, 90, 93], "mcmc": [32, 33, 34, 92, 93], "shape": [32, 33, 34, 36, 90, 93, 94, 99], "n_chain": [32, 33, 34, 36, 90, 92], "n_draw": [32, 33, 34, 36], "dim": [32, 33, 34, 36, 91, 94], "rang": [32, 33, 34, 90, 91, 92, 93, 95], "default": [32, 33, 34], "valu": [32, 33, 34, 36, 65, 67, 72, 73, 74, 93], "onc": [32, 33, 34], "whole": [32, 33, 34], "valid": [32, 33, 34], "tail": 32, "option": [32, 33, 99], "quantil": [32, 33], "old": 32, "sd": [32, 33], "median": [32, 33], "mad": 32, "absolut": 32, "devianc": 32, "z_scale": [32, 34], "fold": [32, 34], "ident": [32, 34, 91], "local": 32, "ress": 32, "tupl": 32, "dict": [32, 33, 34, 36], "dask": [32, 33, 34], "relat": [32, 33, 34], "kwarg": [32, 33, 34], "wrap_xarray_ufunc": [32, 33, 34], "hat": [32, 34, 92], "_": [32, 91, 93, 94], "eff": 32, "n_": [32, 92], "mathit": 32, "diagnost": [32, 34, 89], "mn": 32, "tau": 32, "t": [32, 35, 93, 94], "p": [32, 89, 98, 99], "number": [32, 36, 65, 66, 92, 93, 98], "rho": 32, "_t": 32, "_autocorrel": 32, "lag": 32, "last": 32, "integ": 32, "2k": 32, "posit": 32, "current": [32, 99], "similar": 32, "stan": 32, "geyer": 32, "initi": [32, 34], "monoton": 32, "sequenc": 32, "1992": [32, 34], "2011": 32, "vehtari": [32, 34], "et": [32, 34], "al": [32, 34], "2019": [32, 34], "arxiv": [32, 34], "ab": [32, 34], "1903": [32, 34], "08008": [32, 34], "arviz": [32, 33, 34, 90], "dev": [32, 33, 34], "io": [32, 33, 34], "api": [32, 33, 34, 89, 98], "html": [32, 33, 34], "mc": [32, 90, 91, 93, 94], "doc": 32, "2_18": 32, "manual": 32, "section": [32, 89, 99], "15": 32, "4": [32, 90, 91, 92, 93, 94], "gelman": [32, 34], "bda": [32, 34], "2014": [32, 34], "formula": 32, "11": [32, 93], "8": [32, 93, 94, 95], "error": 33, "statist": [33, 34, 89, 92], "inform": [33, 36, 50, 62, 65, 79, 89], "msce": 33, "dataset": [33, 34], "rank": 34, "normal": 34, "splitr": 34, "set": [34, 92, 93, 98, 99], "trace": 34, "r": [34, 91, 92], "test": [34, 89, 98, 99], "lack": 34, "converg": [34, 65, 66, 90, 92, 93], "compar": [34, 93, 94, 96], "varianc": 34, "multipl": 34, "within": 34, "each": [34, 36, 65], "been": [34, 93], "achiev": [34, 36], "most": [34, 92, 93, 98], "detect": 34, "evid": 34, "nonconverg": 34, "start": [34, 89, 91, 92, 93], "dispers": 34, "recommend": [34, 98], "split": 34, "potenti": [34, 92], "scale": [34, 92], "reduct": [34, 92], "factor": [34, 92], "v": 34, "w": 34, "posterior": 34, "pool": [34, 36], "uniti": 34, "greater": 34, "than": 34, "indic": [34, 92], "yet": 34, "over": [34, 93], "scipi": [34, 90], "stat": 34, "rankdata": 34, "transform": [34, 35], "follow": [34, 92], "brook": 34, "1998": 34, "rubin": 34, "inequ": [35, 92, 93, 98], "strip": 35, "unround": [35, 98], "shift": [35, 98], "store": [35, 99], "uniformproblem": 35, "Its": [35, 89], "left": 35, "hand": [35, 99], "side": 35, "oper": 35, "right": 35, "math": 35, "markov_chain": [36, 93], "rng": [36, 89, 90, 91, 92, 93, 94], "n_sampl": [36, 89, 90, 92, 93], "thin": [36, 89, 90, 92, 93], "n_thread": [36, 93], "respect": 36, "random": [36, 89, 92], "thu": [36, 91, 98, 99], "len": [36, 91, 94], "match": 36, "markovchain": [36, 89, 90, 91, 92, 93, 94], "simul": [36, 89, 93, 98], "randomnumbergener": [36, 89, 90, 91, 92, 93, 94], "singl": 36, "wa": [36, 98], "must": 36, "discard": 36, "inbetween": 36, "save": 36, "increas": [36, 91], "thread": [36, 93], "multiprocess": 36, "worker": 36, "record_meta": 36, "string": 36, "acceptance_r": [36, 93], "record": 36, "here": [36, 93], "e": [36, 99], "g": [36, 99], "state_negative_log_likelihood": 36, "meta": [36, 90], "without": 36, "rate": [36, 91, 92, 93], "found": [36, 89], "becaus": [36, 93], "typo": 36, "Will": 36, "expect": [50, 62, 65, 79, 91, 93], "fisher": [50, 62, 65, 79], "turn": 50, "out": 50, "just": [50, 65, 66], "reduc": 50, "narrai": 50, "gradient": [51, 63, 65, 66, 80], "logarithm": [51, 52, 63, 64, 99], "close": [62, 91, 93], "form": [62, 89, 98, 99], "solut": 62, "nabla": 63, "help": [65, 66, 89], "faster": [65, 66], "long": [65, 66, 91, 93], "too": [65, 66, 93], "slow": [65, 66], "fast": [65, 66], "enough": [65, 66], "zero": [65, 66, 91, 94], "correct": [65, 66, 93, 98], "col": 65, "equal": [65, 66, 90], "param": [65, 67], "rtype": [65, 67], "ani": [67, 93, 99], "compute_negative_log_likelihod": [67, 74], "scientif": 89, "tool": 89, "mont": [89, 96], "carlo": [89, 96], "convex": 89, "mathcal": [89, 98], "often": [89, 98], "aris": [89, 90], "bayesian": 89, "metabol": 89, "flux": 89, "analysi": 89, "It": [89, 90, 91], "built": 89, "pybind11": 89, "power": 89, "goal": 89, "combin": [89, 98], "backend": 89, "languag": 89, "whilst": 89, "maintain": 89, "comprehens": 89, "interoper": 89, "other": [89, 93, 94], "librari": 89, "offer": 89, "magnitud": 89, "special": [89, 91, 93], "sampler": [89, 91, 94, 99], "similarili": [89, 99], "besid": 89, "few": [89, 92], "user": 89, "includ": [89, 92], "13": 89, "mathrm": 89, "bioreactor": 89, "kinet": 89, "physic": 89, "sir": 89, "import": [89, 90, 91, 92, 93, 94, 95], "task": 89, "especi": 89, "expens": 89, "evalu": 89, "tune": [89, 93, 96], "hyperparamet": [89, 92], "thompson": 89, "approach": 89, "perform": [89, 93, 99], "differ": [89, 93], "chapter": 89, "encount": 89, "bug": 89, "feel": [89, 93], "free": [89, 93], "open": 89, "issu": 89, "find": 89, "question": 89, "feedback": 89, "regard": 89, "visit": 89, "u": [89, 93], "gitter": 89, "pip3": 89, "matplotlib": [89, 90, 91, 92, 93, 94, 95], "pyplot": [89, 90, 91, 92, 93, 94, 95], "plt": [89, 90, 91, 92, 93, 94, 95], "5": [89, 93, 94], "seed": [89, 90, 91, 92, 93, 94], "42": [89, 90, 91, 92, 93, 94], "accrat": [89, 91, 92, 94], "1000": [89, 91, 92, 94], "content": 89, "step": [89, 93, 94, 96], "descript": [89, 96], "post": [89, 96], "process": [89, 96], "popular": [90, 98], "deriv": 90, "structur": 90, "mathemat": 90, "matric": 90, "time": [90, 91, 92], "whose": 90, "conveni": [90, 93], "np": [90, 91, 93, 94], "uniform": 90, "bp": 90, "birkhoffpolytop": 90, "compute_chebyshev_cent": [90, 93], "verifi": 90, "5000": [90, 94], "uniformcoordinatehitandrunpropos": [90, 94], "stream": [90, 92], "6": [90, 93, 94], "n_proc": 90, "rhat": [90, 92, 93], "ess": [90, 93], "arrai": [90, 91, 93, 94], "00044474": 90, "00049684": 90, "00017461": 90, "00058938": 90, "4603": 90, "10613561": 90, "4589": 90, "17821696": 90, "4389": 90, "35319998": 90, "5437": 90, "69573643": 90, "convert": 90, "back": 90, "full": [90, 98], "plot": [90, 91, 92, 94], "samples_ful": 90, "convert_to_full_spac": 90, "reshap": [90, 93], "plot_pair": 90, "convert_to_inference_data": 90, "size_squar": 90, "show": [90, 91, 92, 93, 95], "illustr": 91, "simpl": [91, 93, 98], "1e5": 91, "d": [91, 99], "origin": [91, 92], "case": [91, 92, 93, 99], "classic": 91, "isotrop": 91, "gaussian": [91, 92, 93, 94, 98], "approxim": 91, "locat": 91, "outsid": [91, 99], "region": 91, "li": 91, "insid": 91, "geometr": 91, "easi": 91, "vanish": 91, "quickli": 91, "henc": 91, "leav": 91, "stuck": 91, "precis": 91, "remain": 91, "contrast": 91, "hit": [91, 93], "run": [91, 93], "never": 91, "seen": 91, "monitor": 91, "14": [91, 92], "lambda": [91, 94], "add_box_constraint": [91, 93, 94], "1e3": [91, 93], "gaussianhitandrunpropos": [91, 94], "gaussianpropos": [91, 92, 94], "enumer": [91, 94], "001": [91, 94], "els": [91, 94], "analyt": 91, "figur": [91, 93, 94, 95], "dpi": [91, 93], "300": [91, 93], "label": [91, 92, 93, 94, 95], "linestyl": [91, 92], "dash": [91, 92], "color": [91, 92], "grai": [91, 92], "xlabel": [91, 93], "ylabel": [91, 93], "legend": [91, 92, 93, 94, 95], "30": 91, "31": 91, "truncat": 92, "restrict": 92, "simplex": [92, 93], "begin": 92, "pmatrix": 92, "cdot": 92, "vdot": 92, "end": 92, "x_n": 92, "mathbb": 92, "sinc": 92, "worri": [92, 93], "further": [92, 98], "28": 92, "up": [92, 96], "creat": [92, 93], "usual": 92, "adjust": 92, "being": 92, "stepsiz": [92, 93, 99], "deviat": 92, "now": 92, "fun": 92, "assess": 92, "print": [92, 93, 94], "per": [92, 93], "fig": 92, "subplot": 92, "figsiz": [92, 94], "12": 92, "7": [92, 93], "05": 92, "threshold": 92, "set_xlabel": 92, "fontsiz": 92, "set_ylabel": 92, "2878": 92, "2892": 92, "2938": 92, "2862": 92, "good": 92, "next": [92, 93], "readi": 92, "short": 93, "new": [93, 99], "suggest": 93, "try": 93, "coordin": 93, "chrr": 93, "cheap": 93, "iter": 93, "overli": 93, "sensit": 93, "won": 93, "custommodel": 93, "determin": 93, "domain": [93, 98], "adapt": 93, "doe": 93, "NOT": 93, "inheret": 93, "anyth": 93, "def": 93, "accord": 93, "dummi": 93, "mu": 93, "cov": 93, "linalg": 93, "inv": 93, "properti": 93, "mandatori": 93, "put": 93, "2d": 93, "intial": 93, "licens": 93, "file": 93, "home": 93, "jadebeck": 93, "gurobi": 93, "lic": 93, "academ": 93, "commerci": 93, "expir": 93, "2023": 93, "01": 93, "06": 93, "lt": [93, 94], "__main__": 93, "0x7f9435652550": 93, "gt": [93, 94], "preprocess": 93, "gaussiancoordinatehitandrunpropos": 93, "computation": 93, "influenc": 93, "strong": 93, "contact": 93, "abl": 93, "give": 93, "concret": 93, "advic": 93, "need": [93, 99], "point": 93, "gain": 93, "after": 93, "previou": 93, "centr": 93, "could": 93, "even": 93, "order": [93, 98], "take": 93, "care": 93, "tuning_target": 93, "acceptanceratetarget": 93, "thompsonsamplingtun": 93, "tuning_posterior": 93, "call": [93, 99], "Of": 93, "cours": 93, "vari": 93, "cpu": 93, "10000": 93, "50": [93, 94], "rather": 93, "what": 93, "were": 93, "27078": 93, "271946": 93, "27032399999999995": 93, "27143199999999995": 93, "9": 93, "assert": 93, "reach": 93, "strict": 93, "limit": 93, "400": 93, "minimum": 93, "00002409": 93, "99993315": 93, "37556": 93, "93579878": 93, "39450": 93, "51838499": 93, "titl": 93, "count": 93, "bin": [93, 94, 95], "hist": [93, 94, 95], "25": [93, 94], "20": 94, "dot": 94, "21": 94, "ones": 94, "100": [94, 95], "truncatedgaussianpropos": 94, "csmmalapropos": 94, "billiardmalapropos": 94, "dikinwalkpropos": 94, "250_000": 94, "22": 94, "23": 94, "16": 94, "item": 94, "flatten": 94, "scatter": 94, "histtyp": 94, "stepfil": 94, "std": 94, "ddof": 94, "arang": 94, "theori": 94, "39": 94, "core": [94, 99], "003717328432895571": 94, "9993054829707392": 94, "0007920047053880569": 94, "9989467812622056": 94, "00407619332020888": 94, "9984964219897617": 94, "004213253764616939": 94, "9990148075099534": 94, "0035644886495046573": 94, "0030206724358808": 94, "panda": 95, "pd": 95, "num_chain": 95, "append": 95, "read_csv": 95, "samples_": 95, "csv": 95, "x0": 95, "245": 95, "view": 96, "part": 96, "known": 98, "togeth": [98, 99], "ignor": 98, "interest": 98, "identifi": 98, "mixtur": 98, "rosenbrock": 98, "banana": 98, "least": 98, "aim": [98, 99], "might": [98, 99], "necessari": [98, 99], "signatur": 98, "consist": 98, "mainli": 98, "desir": [98, 99], "appli": 98, "precondit": 98, "untransform": 98, "lie": [98, 99], "xyz": 98, "pypi": 98, "project": 98, "particulari": 99, "design": 99, "develop": 99, "instead": 99, "avail": 99, "usabl": 99, "practition": 99, "filter": 99, "believ": 99, "sake": 99, "itself": 99, "nevertheless": 99, "rapid": 99, "prototyp": 99, "promis": 99, "idea": 99, "instruct": 99, "ultim": 99, "those": 99, "wrap": 99, "pypropos": 99, "deleg": 99, "obvious": 99, "deprec": 99, "AND": 99, "TO": 99, "BE": 99, "rewritten": 99, "accept_propos": 99, "calculate_log_acceptance_prob": 99, "symmetr": 99, "infeas": 99, "infti": 99, "get_stat": 99, "set_stat": 99, "new_stat": 99, "get_propos": 99, "get_steps": 99, "set_steps": 99, "new_steps": 99, "get": 99, "get_nam": 99, "name": 99}, "objects": {"hopsy": [[4, 0, 1, "", "AcceptanceRateTarget"], [5, 0, 1, "", "AdaptiveMetropolisProposal"], [6, 0, 1, "", "BallWalkProposal"], [7, 0, 1, "", "CSmMALAProposal"], [8, 0, 1, "", "DikinWalkProposal"], [9, 0, 1, "", "ExpectedSquaredJumpDistanceTarget"], [10, 0, 1, "", "Gaussian"], [11, 0, 1, "", "GaussianCoordinateHitAndRunProposal"], [12, 0, 1, "", "GaussianHitAndRunProposal"], [13, 0, 1, "", "GaussianProposal"], [14, 0, 1, "", "MarkovChain"], [15, 0, 1, "", "Mixture"], [16, 0, 1, "", "Model"], [17, 0, 1, "", "Normal"], [18, 0, 1, "", "Problem"], [19, 0, 1, "", "Proposal"], [20, 0, 1, "", "PyModel"], [21, 0, 1, "", "PyProposal"], [22, 0, 1, "", "PyTuningTarget"], [23, 0, 1, "", "RandomNumberGenerator"], [24, 0, 1, "", "Rosenbrock"], [25, 0, 1, "", "ThompsonSamplingTuning"], [26, 0, 1, "", "TuningTarget"], [27, 0, 1, "", "Uniform"], [28, 0, 1, "", "UniformCoordinateHitAndRunProposal"], [29, 0, 1, "", "UniformHitAndRunProposal"], [30, 0, 1, "", "add_box_constraints"], [31, 0, 1, "", "compute_chebyshev_center"], [32, 0, 1, "", "ess"], [33, 0, 1, "", "mcse"], [34, 0, 1, "", "rhat"], [35, 0, 1, "", "round"], [36, 0, 1, "", "sample"], [37, 0, 1, "", "tune"]], "hopsy.AdaptiveMetropolisProposal": [[38, 1, 1, "", "accept_proposal"], [39, 1, 1, "", "deepcopy"], [40, 1, 1, "", "propose"]], "hopsy.BallWalkProposal": [[41, 1, 1, "", "accept_proposal"], [42, 1, 1, "", "deepcopy"], [43, 1, 1, "", "propose"]], "hopsy.CSmMALAProposal": [[44, 1, 1, "", "accept_proposal"], [45, 1, 1, "", "deepcopy"], [46, 1, 1, "", "propose"]], "hopsy.DikinWalkProposal": [[47, 1, 1, "", "accept_proposal"], [48, 1, 1, "", "deepcopy"], [49, 1, 1, "", "propose"]], "hopsy.Gaussian": [[50, 1, 1, "", "compute_expected_fisher_information"], [51, 1, 1, "", "compute_log_likelihood_gradient"], [52, 1, 1, "", "compute_negative_log_likelihood"]], "hopsy.GaussianCoordinateHitAndRunProposal": [[53, 1, 1, "", "accept_proposal"], [54, 1, 1, "", "deepcopy"], [55, 1, 1, "", "propose"]], "hopsy.GaussianHitAndRunProposal": [[56, 1, 1, "", "accept_proposal"], [57, 1, 1, "", "deepcopy"], [58, 1, 1, "", "propose"]], "hopsy.GaussianProposal": [[59, 1, 1, "", "accept_proposal"], [60, 1, 1, "", "deepcopy"], [61, 1, 1, "", "propose"]], "hopsy.Mixture": [[62, 1, 1, "", "compute_expected_fisher_information"], [63, 1, 1, "", "compute_log_likelihood_gradient"], [64, 1, 1, "", "compute_negative_log_likelihood"]], "hopsy.Model": [[65, 1, 1, "", "compute_expected_fisher_information"], [66, 1, 1, "", "compute_log_likelihood_gradient"], [67, 1, 1, "", "compute_negative_log_likelihood"]], "hopsy.Normal": [[68, 1, 1, "", "__call__"]], "hopsy.Proposal": [[69, 1, 1, "", "accept_proposal"], [70, 1, 1, "", "deepcopy"], [71, 1, 1, "", "propose"]], "hopsy.PyModel": [[72, 1, 1, "", "compute_expected_fisher_information"], [73, 1, 1, "", "compute_log_likelihood_gradient"], [74, 1, 1, "", "compute_negative_log_likelihood"]], "hopsy.PyProposal": [[75, 1, 1, "", "accept_proposal"], [76, 1, 1, "", "deepcopy"], [77, 1, 1, "", "propose"]], "hopsy.RandomNumberGenerator": [[78, 1, 1, "", "__call__"]], "hopsy.Rosenbrock": [[79, 1, 1, "", "compute_expected_fisher_information"], [80, 1, 1, "", "compute_log_likelihood_gradient"], [81, 1, 1, "", "compute_negative_log_likelihood"]], "hopsy.Uniform": [[82, 1, 1, "", "__call__"]], "hopsy.UniformCoordinateHitAndRunProposal": [[83, 1, 1, "", "accept_proposal"], [84, 1, 1, "", "deepcopy"], [85, 1, 1, "", "propose"]], "hopsy.UniformHitAndRunProposal": [[86, 1, 1, "", "accept_proposal"], [87, 1, 1, "", "deepcopy"], [88, 1, 1, "", "propose"]]}, "objtypes": {"0": "py:class", "1": "py:method"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"]}, "titleterms": {"exampl": [0, 99], "first": [1, 93], "step": 1, "instal": 2, "introduct": 3, "python": [3, 89], "implement": 3, "propos": [3, 19, 40, 43, 46, 49, 55, 58, 61, 69, 70, 71, 77, 85, 88, 99, 101], "model": [3, 16, 65, 66, 67, 92, 93, 98, 101], "hopsi": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93], "acceptanceratetarget": 4, "adaptivemetropolispropos": [5, 38, 39, 40], "ballwalkpropos": [6, 41, 42, 43], "csmmalapropos": [7, 44, 45, 46], "dikinwalkpropos": [8, 47, 48, 49], "expectedsquaredjumpdistancetarget": 9, "gaussian": [10, 50, 51, 52], "gaussiancoordinatehitandrunpropos": [11, 53, 54, 55], "gaussianhitandrunpropos": [12, 56, 57, 58], "gaussianpropos": [13, 59, 60, 61], "markovchain": 14, "mixtur": [15, 62, 63, 64], "normal": [17, 68], "problem": [18, 98, 101], "pymodel": [20, 72, 73, 74], "pypropos": [21, 75, 76, 77], "pytuningtarget": 22, "randomnumbergener": [23, 78], "rosenbrock": [24, 79, 80, 81], "thompsonsamplingtun": 25, "tuningtarget": 26, "uniform": [27, 82], "uniformcoordinatehitandrunpropos": [28, 83, 84, 85], "uniformhitandrunpropos": [29, 86, 87, 88], "add_box_constraint": 30, "compute_chebyshev_cent": 31, "ess": 32, "mcse": 33, "rhat": 34, "round": 35, "sampl": [36, 89, 91, 93, 94, 99], "tune": [37, 100, 101], "accept_propos": [38, 41, 44, 47, 53, 56, 59, 69, 75, 83, 86], "deepcopi": [39, 42, 45, 48, 54, 57, 60, 70, 76, 84, 87], "compute_expected_fisher_inform": [50, 62, 65, 72, 79], "compute_log_likelihood_gradi": [51, 63, 66, 73, 80], "compute_negative_log_likelihood": [52, 64, 67, 74, 81], "__call__": [68, 78, 82], "highli": 89, "optim": 89, "polytop": [89, 90], "further": 89, "resourc": 89, "birkhoff": 90, "constrain": 91, "A": [92, 93], "quick": 92, "tutori": 92, "user": [92, 96], "defin": 92, "guid": [93, 96], "your": 93, "With": 93, "tmvn": 94, "post": 97, "process": 97, "refer": [97, 98, 99, 100, 101], "diagnost": [97, 101], "descript": 98, "linear": 98, "transform": 98, "markov": [99, 101], "chain": [99, 101], "mont": 99, "carlo": 99, "distribut": 99, "code": 99, "random": [99, 101]}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"Examples": [[0, "examples"], [0, null]], "First Steps": [[1, "first-steps"], [1, null]], "Installation": [[2, "installation"]], "Introduction": [[3, "introduction"]], "Python-implemented proposals & models": [[3, "python-implemented-proposals-models"]], "hopsy.AcceptanceRateTarget": [[4, "hopsy-acceptanceratetarget"]], "hopsy.AdaptiveMetropolisProposal": [[5, "hopsy-adaptivemetropolisproposal"]], "hopsy.BallWalkProposal": [[6, "hopsy-ballwalkproposal"]], "hopsy.CSmMALAProposal": [[7, "hopsy-csmmalaproposal"]], "hopsy.DikinWalkProposal": [[8, "hopsy-dikinwalkproposal"]], "hopsy.ExpectedSquaredJumpDistanceTarget": [[9, "hopsy-expectedsquaredjumpdistancetarget"]], "hopsy.Gaussian": [[10, "hopsy-gaussian"]], "hopsy.GaussianCoordinateHitAndRunProposal": [[11, "hopsy-gaussiancoordinatehitandrunproposal"]], "hopsy.GaussianHitAndRunProposal": [[12, "hopsy-gaussianhitandrunproposal"]], "hopsy.GaussianProposal": [[13, "hopsy-gaussianproposal"]], "hopsy.MarkovChain": [[14, "hopsy-markovchain"]], "hopsy.Mixture": [[15, "hopsy-mixture"]], "hopsy.Model": [[16, "hopsy-model"]], "hopsy.Normal": [[17, "hopsy-normal"]], "hopsy.Problem": [[18, "hopsy-problem"]], "hopsy.Proposal": [[19, "hopsy-proposal"]], "hopsy.PyModel": [[20, "hopsy-pymodel"]], "hopsy.PyProposal": [[21, "hopsy-pyproposal"]], "hopsy.PyTuningTarget": [[22, "hopsy-pytuningtarget"]], "hopsy.RandomNumberGenerator": [[23, "hopsy-randomnumbergenerator"]], "hopsy.Rosenbrock": [[24, "hopsy-rosenbrock"]], "hopsy.ThompsonSamplingTuning": [[25, "hopsy-thompsonsamplingtuning"]], "hopsy.TuningTarget": [[26, "hopsy-tuningtarget"]], "hopsy.Uniform": [[27, "hopsy-uniform"]], "hopsy.UniformCoordinateHitAndRunProposal": [[28, "hopsy-uniformcoordinatehitandrunproposal"]], "hopsy.UniformHitAndRunProposal": [[29, "hopsy-uniformhitandrunproposal"]], "hopsy.add_box_constraints": [[30, "hopsy-add-box-constraints"]], "hopsy.compute_chebyshev_center": [[31, "hopsy-compute-chebyshev-center"]], "hopsy.ess": [[32, "hopsy-ess"]], "hopsy.mcse": [[33, "hopsy-mcse"]], "hopsy.rhat": [[34, "hopsy-rhat"]], "hopsy.round": [[35, "hopsy-round"]], "hopsy.sample": [[36, "hopsy-sample"]], "hopsy.tune": [[37, "hopsy-tune"]], "hopsy.AdaptiveMetropolisProposal.accept_proposal": [[38, "hopsy-adaptivemetropolisproposal-accept-proposal"]], "hopsy.AdaptiveMetropolisProposal.deepcopy": [[39, "hopsy-adaptivemetropolisproposal-deepcopy"]], "hopsy.AdaptiveMetropolisProposal.propose": [[40, "hopsy-adaptivemetropolisproposal-propose"]], "hopsy.BallWalkProposal.accept_proposal": [[41, "hopsy-ballwalkproposal-accept-proposal"]], "hopsy.BallWalkProposal.deepcopy": [[42, "hopsy-ballwalkproposal-deepcopy"]], "hopsy.BallWalkProposal.propose": [[43, "hopsy-ballwalkproposal-propose"]], "hopsy.CSmMALAProposal.accept_proposal": [[44, "hopsy-csmmalaproposal-accept-proposal"]], "hopsy.CSmMALAProposal.deepcopy": [[45, "hopsy-csmmalaproposal-deepcopy"]], "hopsy.CSmMALAProposal.propose": [[46, "hopsy-csmmalaproposal-propose"]], "hopsy.DikinWalkProposal.accept_proposal": [[47, "hopsy-dikinwalkproposal-accept-proposal"]], "hopsy.DikinWalkProposal.deepcopy": [[48, "hopsy-dikinwalkproposal-deepcopy"]], "hopsy.DikinWalkProposal.propose": [[49, "hopsy-dikinwalkproposal-propose"]], "hopsy.Gaussian.compute_expected_fisher_information": [[50, "hopsy-gaussian-compute-expected-fisher-information"]], "hopsy.Gaussian.compute_log_likelihood_gradient": [[51, "hopsy-gaussian-compute-log-likelihood-gradient"]], "hopsy.Gaussian.compute_negative_log_likelihood": [[52, "hopsy-gaussian-compute-negative-log-likelihood"]], "hopsy.GaussianCoordinateHitAndRunProposal.accept_proposal": [[53, "hopsy-gaussiancoordinatehitandrunproposal-accept-proposal"]], "hopsy.GaussianCoordinateHitAndRunProposal.deepcopy": [[54, "hopsy-gaussiancoordinatehitandrunproposal-deepcopy"]], "hopsy.GaussianCoordinateHitAndRunProposal.propose": [[55, "hopsy-gaussiancoordinatehitandrunproposal-propose"]], "hopsy.GaussianHitAndRunProposal.accept_proposal": [[56, "hopsy-gaussianhitandrunproposal-accept-proposal"]], "hopsy.GaussianHitAndRunProposal.deepcopy": [[57, "hopsy-gaussianhitandrunproposal-deepcopy"]], "hopsy.GaussianHitAndRunProposal.propose": [[58, "hopsy-gaussianhitandrunproposal-propose"]], "hopsy.GaussianProposal.accept_proposal": [[59, "hopsy-gaussianproposal-accept-proposal"]], "hopsy.GaussianProposal.deepcopy": [[60, "hopsy-gaussianproposal-deepcopy"]], "hopsy.GaussianProposal.propose": [[61, "hopsy-gaussianproposal-propose"]], "hopsy.Mixture.compute_expected_fisher_information": [[62, "hopsy-mixture-compute-expected-fisher-information"]], "hopsy.Mixture.compute_log_likelihood_gradient": [[63, "hopsy-mixture-compute-log-likelihood-gradient"]], "hopsy.Mixture.compute_negative_log_likelihood": [[64, "hopsy-mixture-compute-negative-log-likelihood"]], "hopsy.Model.compute_expected_fisher_information": [[65, "hopsy-model-compute-expected-fisher-information"]], "hopsy.Model.compute_log_likelihood_gradient": [[66, "hopsy-model-compute-log-likelihood-gradient"]], "hopsy.Model.compute_negative_log_likelihood": [[67, "hopsy-model-compute-negative-log-likelihood"]], "hopsy.Normal.__call__": [[68, "hopsy-normal-call"]], "hopsy.Proposal.accept_proposal": [[69, "hopsy-proposal-accept-proposal"]], "hopsy.Proposal.deepcopy": [[70, "hopsy-proposal-deepcopy"]], "hopsy.Proposal.propose": [[71, "hopsy-proposal-propose"]], "hopsy.PyModel.compute_expected_fisher_information": [[72, "hopsy-pymodel-compute-expected-fisher-information"]], "hopsy.PyModel.compute_log_likelihood_gradient": [[73, "hopsy-pymodel-compute-log-likelihood-gradient"]], "hopsy.PyModel.compute_negative_log_likelihood": [[74, "hopsy-pymodel-compute-negative-log-likelihood"]], "hopsy.PyProposal.accept_proposal": [[75, "hopsy-pyproposal-accept-proposal"]], "hopsy.PyProposal.deepcopy": [[76, "hopsy-pyproposal-deepcopy"]], "hopsy.PyProposal.propose": [[77, "hopsy-pyproposal-propose"]], "hopsy.RandomNumberGenerator.__call__": [[78, "hopsy-randomnumbergenerator-call"]], "hopsy.Rosenbrock.compute_expected_fisher_information": [[79, "hopsy-rosenbrock-compute-expected-fisher-information"]], "hopsy.Rosenbrock.compute_log_likelihood_gradient": [[80, "hopsy-rosenbrock-compute-log-likelihood-gradient"]], "hopsy.Rosenbrock.compute_negative_log_likelihood": [[81, "hopsy-rosenbrock-compute-negative-log-likelihood"]], "hopsy.Uniform.__call__": [[82, "hopsy-uniform-call"]], "hopsy.UniformCoordinateHitAndRunProposal.accept_proposal": [[83, "hopsy-uniformcoordinatehitandrunproposal-accept-proposal"]], "hopsy.UniformCoordinateHitAndRunProposal.deepcopy": [[84, "hopsy-uniformcoordinatehitandrunproposal-deepcopy"]], "hopsy.UniformCoordinateHitAndRunProposal.propose": [[85, "hopsy-uniformcoordinatehitandrunproposal-propose"]], "hopsy.UniformHitAndRunProposal.accept_proposal": [[86, "hopsy-uniformhitandrunproposal-accept-proposal"]], "hopsy.UniformHitAndRunProposal.deepcopy": [[87, "hopsy-uniformhitandrunproposal-deepcopy"]], "hopsy.UniformHitAndRunProposal.propose": [[88, "hopsy-uniformhitandrunproposal-propose"]], "hopsy - Highly Optimized Polytope Sampling in Python": [[89, "hopsy-highly-optimized-polytope-sampling-in-python"]], "Further resources": [[89, "further-resources"]], "Birkhoff polytope": [[90, "Birkhoff-polytope"]], "Constrained Sampling": [[91, "Constrained-Sampling"]], "A Quick Tutorial": [[92, "A-Quick-Tutorial"]], "User-defined Models": [[92, "User-defined-Models"]], "A Guide to Sampling Your First Model With hopsy": [[93, "A-Guide-to-Sampling-Your-First-Model-With-hopsy"]], "TMVN Sampling": [[94, "TMVN-Sampling"]], "User Guide": [[96, "user-guide"], [96, null]], "Post-Processing": [[97, "post-processing"]], "Reference": [[97, "reference"], [98, "reference"], [99, "reference"], [100, "reference"], [101, "reference"]], "Diagnostics": [[97, "diagnostics"], [101, "diagnostics"]], "Problem Description": [[98, "problem-description"]], "Problem": [[98, "problem"], [98, "id2"], [101, "problem"]], "Linear Transformations": [[98, "linear-transformations"]], "Models": [[98, "models"], [101, "models"]], "Markov Chain Monte Carlo Sampling": [[99, "markov-chain-monte-carlo-sampling"]], "Markov Chains": [[99, "markov-chains"]], "Proposal Distributions": [[99, "proposal-distributions"]], "Example code": [[99, "example-code"]], "Proposals": [[99, "proposals"], [101, "proposals"]], "Markov Chain": [[99, "markov-chain"], [101, "markov-chain"]], "Random": [[99, "random"], [101, "random"]], "Tuning": [[100, "tuning"], [100, "id1"], [101, "tuning"]]}, "indexentries": {"acceptanceratetarget (class in hopsy)": [[4, "hopsy.AcceptanceRateTarget"]], "adaptivemetropolisproposal (class in hopsy)": [[5, "hopsy.AdaptiveMetropolisProposal"]], "ballwalkproposal (class in hopsy)": [[6, "hopsy.BallWalkProposal"]], "csmmalaproposal (class in hopsy)": [[7, "hopsy.CSmMALAProposal"]], "dikinwalkproposal (class in hopsy)": [[8, "hopsy.DikinWalkProposal"]], "expectedsquaredjumpdistancetarget (class in hopsy)": [[9, "hopsy.ExpectedSquaredJumpDistanceTarget"]], "gaussian (class in hopsy)": [[10, "hopsy.Gaussian"]], "gaussiancoordinatehitandrunproposal (class in hopsy)": [[11, "hopsy.GaussianCoordinateHitAndRunProposal"]], "gaussianhitandrunproposal (class in hopsy)": [[12, "hopsy.GaussianHitAndRunProposal"]], "gaussianproposal (class in hopsy)": [[13, "hopsy.GaussianProposal"]], "markovchain (class in hopsy)": [[14, "hopsy.MarkovChain"]], "mixture (class in hopsy)": [[15, "hopsy.Mixture"]], "model (class in hopsy)": [[16, "hopsy.Model"]], "normal (class in hopsy)": [[17, "hopsy.Normal"]], "problem (class in hopsy)": [[18, "hopsy.Problem"]], "proposal (class in hopsy)": [[19, "hopsy.Proposal"]], "pymodel (class in hopsy)": [[20, "hopsy.PyModel"]], "pyproposal (class in hopsy)": [[21, "hopsy.PyProposal"]], "pytuningtarget (class in hopsy)": [[22, "hopsy.PyTuningTarget"]], "randomnumbergenerator (class in hopsy)": [[23, "hopsy.RandomNumberGenerator"]], "rosenbrock (class in hopsy)": [[24, "hopsy.Rosenbrock"]], "thompsonsamplingtuning (class in hopsy)": [[25, "hopsy.ThompsonSamplingTuning"]], "tuningtarget (class in hopsy)": [[26, "hopsy.TuningTarget"]], "uniform (class in hopsy)": [[27, "hopsy.Uniform"]], "uniformcoordinatehitandrunproposal (class in hopsy)": [[28, "hopsy.UniformCoordinateHitAndRunProposal"]], "uniformhitandrunproposal (class in hopsy)": [[29, "hopsy.UniformHitAndRunProposal"]], "add_box_constraints (class in hopsy)": [[30, "hopsy.add_box_constraints"]], "compute_chebyshev_center (class in hopsy)": [[31, "hopsy.compute_chebyshev_center"]], "ess (class in hopsy)": [[32, "hopsy.ess"]], "mcse (class in hopsy)": [[33, "hopsy.mcse"]], "rhat (class in hopsy)": [[34, "hopsy.rhat"]], "round (class in hopsy)": [[35, "hopsy.round"]], "sample (class in hopsy)": [[36, "hopsy.sample"]], "tune (class in hopsy)": [[37, "hopsy.tune"]], "accept_proposal() (hopsy.adaptivemetropolisproposal method)": [[38, "hopsy.AdaptiveMetropolisProposal.accept_proposal"]], "deepcopy() (hopsy.adaptivemetropolisproposal method)": [[39, "hopsy.AdaptiveMetropolisProposal.deepcopy"]], "propose() (hopsy.adaptivemetropolisproposal method)": [[40, "hopsy.AdaptiveMetropolisProposal.propose"]], "accept_proposal() (hopsy.ballwalkproposal method)": [[41, "hopsy.BallWalkProposal.accept_proposal"]], "deepcopy() (hopsy.ballwalkproposal method)": [[42, "hopsy.BallWalkProposal.deepcopy"]], "propose() (hopsy.ballwalkproposal method)": [[43, "hopsy.BallWalkProposal.propose"]], "accept_proposal() (hopsy.csmmalaproposal method)": [[44, "hopsy.CSmMALAProposal.accept_proposal"]], "deepcopy() (hopsy.csmmalaproposal method)": [[45, "hopsy.CSmMALAProposal.deepcopy"]], "propose() (hopsy.csmmalaproposal method)": [[46, "hopsy.CSmMALAProposal.propose"]], "accept_proposal() (hopsy.dikinwalkproposal method)": [[47, "hopsy.DikinWalkProposal.accept_proposal"]], "deepcopy() (hopsy.dikinwalkproposal method)": [[48, "hopsy.DikinWalkProposal.deepcopy"]], "propose() (hopsy.dikinwalkproposal method)": [[49, "hopsy.DikinWalkProposal.propose"]], "compute_expected_fisher_information() (hopsy.gaussian method)": [[50, "hopsy.Gaussian.compute_expected_fisher_information"]], "compute_log_likelihood_gradient() (hopsy.gaussian method)": [[51, "hopsy.Gaussian.compute_log_likelihood_gradient"]], "compute_negative_log_likelihood() (hopsy.gaussian method)": [[52, "hopsy.Gaussian.compute_negative_log_likelihood"]], "accept_proposal() (hopsy.gaussiancoordinatehitandrunproposal method)": [[53, "hopsy.GaussianCoordinateHitAndRunProposal.accept_proposal"]], "deepcopy() (hopsy.gaussiancoordinatehitandrunproposal method)": [[54, "hopsy.GaussianCoordinateHitAndRunProposal.deepcopy"]], "propose() (hopsy.gaussiancoordinatehitandrunproposal method)": [[55, "hopsy.GaussianCoordinateHitAndRunProposal.propose"]], "accept_proposal() (hopsy.gaussianhitandrunproposal method)": [[56, "hopsy.GaussianHitAndRunProposal.accept_proposal"]], "deepcopy() (hopsy.gaussianhitandrunproposal method)": [[57, "hopsy.GaussianHitAndRunProposal.deepcopy"]], "propose() (hopsy.gaussianhitandrunproposal method)": [[58, "hopsy.GaussianHitAndRunProposal.propose"]], "accept_proposal() (hopsy.gaussianproposal method)": [[59, "hopsy.GaussianProposal.accept_proposal"]], "deepcopy() (hopsy.gaussianproposal method)": [[60, "hopsy.GaussianProposal.deepcopy"]], "propose() (hopsy.gaussianproposal method)": [[61, "hopsy.GaussianProposal.propose"]], "compute_expected_fisher_information() (hopsy.mixture method)": [[62, "hopsy.Mixture.compute_expected_fisher_information"]], "compute_log_likelihood_gradient() (hopsy.mixture method)": [[63, "hopsy.Mixture.compute_log_likelihood_gradient"]], "compute_negative_log_likelihood() (hopsy.mixture method)": [[64, "hopsy.Mixture.compute_negative_log_likelihood"]], "compute_expected_fisher_information() (hopsy.model method)": [[65, "hopsy.Model.compute_expected_fisher_information"]], "compute_log_likelihood_gradient() (hopsy.model method)": [[66, "hopsy.Model.compute_log_likelihood_gradient"]], "compute_negative_log_likelihood() (hopsy.model method)": [[67, "hopsy.Model.compute_negative_log_likelihood"]], "__call__() (hopsy.normal method)": [[68, "hopsy.Normal.__call__"]], "accept_proposal() (hopsy.proposal method)": [[69, "hopsy.Proposal.accept_proposal"]], "deepcopy() (hopsy.proposal method)": [[70, "hopsy.Proposal.deepcopy"]], "propose() (hopsy.proposal method)": [[71, "hopsy.Proposal.propose"]], "compute_expected_fisher_information() (hopsy.pymodel method)": [[72, "hopsy.PyModel.compute_expected_fisher_information"]], "compute_log_likelihood_gradient() (hopsy.pymodel method)": [[73, "hopsy.PyModel.compute_log_likelihood_gradient"]], "compute_negative_log_likelihood() (hopsy.pymodel method)": [[74, "hopsy.PyModel.compute_negative_log_likelihood"]], "accept_proposal() (hopsy.pyproposal method)": [[75, "hopsy.PyProposal.accept_proposal"]], "deepcopy() (hopsy.pyproposal method)": [[76, "hopsy.PyProposal.deepcopy"]], "propose() (hopsy.pyproposal method)": [[77, "hopsy.PyProposal.propose"]], "__call__() (hopsy.randomnumbergenerator method)": [[78, "hopsy.RandomNumberGenerator.__call__"]], "compute_expected_fisher_information() (hopsy.rosenbrock method)": [[79, "hopsy.Rosenbrock.compute_expected_fisher_information"]], "compute_log_likelihood_gradient() (hopsy.rosenbrock method)": [[80, "hopsy.Rosenbrock.compute_log_likelihood_gradient"]], "compute_negative_log_likelihood() (hopsy.rosenbrock method)": [[81, "hopsy.Rosenbrock.compute_negative_log_likelihood"]], "__call__() (hopsy.uniform method)": [[82, "hopsy.Uniform.__call__"]], "accept_proposal() (hopsy.uniformcoordinatehitandrunproposal method)": [[83, "hopsy.UniformCoordinateHitAndRunProposal.accept_proposal"]], "deepcopy() (hopsy.uniformcoordinatehitandrunproposal method)": [[84, "hopsy.UniformCoordinateHitAndRunProposal.deepcopy"]], "propose() (hopsy.uniformcoordinatehitandrunproposal method)": [[85, "hopsy.UniformCoordinateHitAndRunProposal.propose"]], "accept_proposal() (hopsy.uniformhitandrunproposal method)": [[86, "hopsy.UniformHitAndRunProposal.accept_proposal"]], "deepcopy() (hopsy.uniformhitandrunproposal method)": [[87, "hopsy.UniformHitAndRunProposal.deepcopy"]], "propose() (hopsy.uniformhitandrunproposal method)": [[88, "hopsy.UniformHitAndRunProposal.propose"]]}})